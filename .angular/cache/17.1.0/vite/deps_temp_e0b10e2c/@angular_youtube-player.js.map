{
  "version": 3,
  "sources": ["../../../../../node_modules/@angular/youtube-player/fesm2022/youtube-player.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, InjectionToken, numberAttribute, inject, CSP_NONCE, ChangeDetectorRef, PLATFORM_ID, booleanAttribute, Inject, Output, ViewChild, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Subject, BehaviorSubject, fromEventPattern, of, Observable } from 'rxjs';\nimport { switchMap, takeUntil } from 'rxjs/operators';\nconst _c0 = [\"youtubeContainer\"];\nfunction YouTubePlayer_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"youtube-player-placeholder\", 2);\n    i0.ɵɵlistener(\"click\", function YouTubePlayer_Conditional_0_Template_youtube_player_placeholder_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2._load(true));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"videoId\", ctx_r0.videoId)(\"width\", ctx_r0.width)(\"height\", ctx_r0.height)(\"isLoading\", ctx_r0._isLoading)(\"buttonLabel\", ctx_r0.placeholderButtonLabel)(\"quality\", ctx_r0.placeholderImageQuality);\n  }\n}\nclass YouTubePlayerPlaceholder {\n  /** Gets the background image showing the placeholder. */\n  _getBackgroundImage() {\n    let url;\n    if (this.quality === 'low') {\n      url = `https://i.ytimg.com/vi/${this.videoId}/hqdefault.jpg`;\n    } else if (this.quality === 'high') {\n      url = `https://i.ytimg.com/vi/${this.videoId}/maxresdefault.jpg`;\n    } else {\n      url = `https://i.ytimg.com/vi_webp/${this.videoId}/sddefault.webp`;\n    }\n    return `url(${url})`;\n  }\n  static {\n    this.ɵfac = function YouTubePlayerPlaceholder_Factory(t) {\n      return new (t || YouTubePlayerPlaceholder)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: YouTubePlayerPlaceholder,\n      selectors: [[\"youtube-player-placeholder\"]],\n      hostAttrs: [1, \"youtube-player-placeholder\"],\n      hostVars: 8,\n      hostBindings: function YouTubePlayerPlaceholder_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"background-image\", ctx._getBackgroundImage())(\"width\", ctx.width, \"px\")(\"height\", ctx.height, \"px\");\n          i0.ɵɵclassProp(\"youtube-player-placeholder-loading\", ctx.isLoading);\n        }\n      },\n      inputs: {\n        videoId: \"videoId\",\n        width: \"width\",\n        height: \"height\",\n        isLoading: \"isLoading\",\n        buttonLabel: \"buttonLabel\",\n        quality: \"quality\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 4,\n      vars: 1,\n      consts: [[\"type\", \"button\", 1, \"youtube-player-placeholder-button\"], [\"height\", \"100%\", \"version\", \"1.1\", \"viewBox\", \"0 0 68 48\", \"focusable\", \"false\", \"aria-hidden\", \"true\"], [\"d\", \"M66.52,7.74c-0.78-2.93-2.49-5.41-5.42-6.19C55.79,.13,34,0,34,0S12.21,.13,6.9,1.55 C3.97,2.33,2.27,4.81,1.48,7.74C0.06,13.05,0,24,0,24s0.06,10.95,1.48,16.26c0.78,2.93,2.49,5.41,5.42,6.19 C12.21,47.87,34,48,34,48s21.79-0.13,27.1-1.55c2.93-0.78,4.64-3.26,5.42-6.19C67.94,34.95,68,24,68,24S67.94,13.05,66.52,7.74z\", \"fill\", \"#f00\"], [\"d\", \"M 45,24 27,14 27,34\", \"fill\", \"#fff\"]],\n      template: function YouTubePlayerPlaceholder_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"button\", 0);\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(1, \"svg\", 1);\n          i0.ɵɵelement(2, \"path\", 2)(3, \"path\", 3);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-label\", ctx.buttonLabel);\n        }\n      },\n      styles: [\".youtube-player-placeholder{display:flex;align-items:center;justify-content:center;width:100%;overflow:hidden;cursor:pointer;background-color:#000;background-position:center center;background-size:cover;transition:box-shadow 300ms ease;box-shadow:inset 0 120px 90px -90px rgba(0,0,0,.8)}.youtube-player-placeholder-button{transition:opacity 300ms ease;-moz-appearance:none;-webkit-appearance:none;background:none;border:none;padding:0;display:flex}.youtube-player-placeholder-button svg{width:68px;height:48px}.youtube-player-placeholder-loading{box-shadow:none}.youtube-player-placeholder-loading .youtube-player-placeholder-button{opacity:0}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(YouTubePlayerPlaceholder, [{\n    type: Component,\n    args: [{\n      selector: 'youtube-player-placeholder',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <button type=\"button\" class=\"youtube-player-placeholder-button\" [attr.aria-label]=\"buttonLabel\">\n      <svg\n        height=\"100%\"\n        version=\"1.1\"\n        viewBox=\"0 0 68 48\"\n        focusable=\"false\"\n        aria-hidden=\"true\">\n        <path d=\"M66.52,7.74c-0.78-2.93-2.49-5.41-5.42-6.19C55.79,.13,34,0,34,0S12.21,.13,6.9,1.55 C3.97,2.33,2.27,4.81,1.48,7.74C0.06,13.05,0,24,0,24s0.06,10.95,1.48,16.26c0.78,2.93,2.49,5.41,5.42,6.19 C12.21,47.87,34,48,34,48s21.79-0.13,27.1-1.55c2.93-0.78,4.64-3.26,5.42-6.19C67.94,34.95,68,24,68,24S67.94,13.05,66.52,7.74z\" fill=\"#f00\"></path>\n        <path d=\"M 45,24 27,14 27,34\" fill=\"#fff\"></path>\n      </svg>\n    </button>\n  `,\n      standalone: true,\n      host: {\n        'class': 'youtube-player-placeholder',\n        '[class.youtube-player-placeholder-loading]': 'isLoading',\n        '[style.background-image]': '_getBackgroundImage()',\n        '[style.width.px]': 'width',\n        '[style.height.px]': 'height'\n      },\n      styles: [\".youtube-player-placeholder{display:flex;align-items:center;justify-content:center;width:100%;overflow:hidden;cursor:pointer;background-color:#000;background-position:center center;background-size:cover;transition:box-shadow 300ms ease;box-shadow:inset 0 120px 90px -90px rgba(0,0,0,.8)}.youtube-player-placeholder-button{transition:opacity 300ms ease;-moz-appearance:none;-webkit-appearance:none;background:none;border:none;padding:0;display:flex}.youtube-player-placeholder-button svg{width:68px;height:48px}.youtube-player-placeholder-loading{box-shadow:none}.youtube-player-placeholder-loading .youtube-player-placeholder-button{opacity:0}\"]\n    }]\n  }], null, {\n    videoId: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    isLoading: [{\n      type: Input\n    }],\n    buttonLabel: [{\n      type: Input\n    }],\n    quality: [{\n      type: Input\n    }]\n  });\n})();\n\n/// <reference types=\"youtube\" />\n/** Injection token used to configure the `YouTubePlayer`. */\nconst YOUTUBE_PLAYER_CONFIG = new InjectionToken('YOUTUBE_PLAYER_CONFIG');\nconst DEFAULT_PLAYER_WIDTH = 640;\nconst DEFAULT_PLAYER_HEIGHT = 390;\n/** Coercion function for time values. */\nfunction coerceTime(value) {\n  return value == null ? value : numberAttribute(value, 0);\n}\n/**\n * Angular component that renders a YouTube player via the YouTube player\n * iframe API.\n * @see https://developers.google.com/youtube/iframe_api_reference\n */\nclass YouTubePlayer {\n  /** Height of video player */\n  get height() {\n    return this._height;\n  }\n  set height(height) {\n    this._height = height == null || isNaN(height) ? DEFAULT_PLAYER_HEIGHT : height;\n  }\n  /** Width of video player */\n  get width() {\n    return this._width;\n  }\n  set width(width) {\n    this._width = width == null || isNaN(width) ? DEFAULT_PLAYER_WIDTH : width;\n  }\n  constructor(_ngZone, platformId) {\n    this._ngZone = _ngZone;\n    this._destroyed = new Subject();\n    this._playerChanges = new BehaviorSubject(undefined);\n    this._nonce = inject(CSP_NONCE, {\n      optional: true\n    });\n    this._changeDetectorRef = inject(ChangeDetectorRef);\n    this._isLoading = false;\n    this._hasPlaceholder = true;\n    this._height = DEFAULT_PLAYER_HEIGHT;\n    this._width = DEFAULT_PLAYER_WIDTH;\n    /** Whether cookies inside the player have been disabled. */\n    this.disableCookies = false;\n    /**\n     * By default the player shows a placeholder image instead of loading the YouTube API which\n     * improves the initial page load performance. This input allows for the behavior to be disabled.\n     */\n    this.disablePlaceholder = false;\n    /**\n     * Whether the iframe will attempt to load regardless of the status of the api on the\n     * page. Set this to true if you don't want the `onYouTubeIframeAPIReady` field to be\n     * set on the global window.\n     */\n    this.showBeforeIframeApiLoads = false;\n    /** Outputs are direct proxies from the player itself. */\n    this.ready = this._getLazyEmitter('onReady');\n    this.stateChange = this._getLazyEmitter('onStateChange');\n    this.error = this._getLazyEmitter('onError');\n    this.apiChange = this._getLazyEmitter('onApiChange');\n    this.playbackQualityChange = this._getLazyEmitter('onPlaybackQualityChange');\n    this.playbackRateChange = this._getLazyEmitter('onPlaybackRateChange');\n    const config = inject(YOUTUBE_PLAYER_CONFIG, {\n      optional: true\n    });\n    this.loadApi = config?.loadApi ?? true;\n    this.disablePlaceholder = !!config?.disablePlaceholder;\n    this.placeholderButtonLabel = config?.placeholderButtonLabel || 'Play video';\n    this.placeholderImageQuality = config?.placeholderImageQuality || 'standard';\n    this._isBrowser = isPlatformBrowser(platformId);\n  }\n  ngAfterViewInit() {\n    this._conditionallyLoad();\n  }\n  ngOnChanges(changes) {\n    if (this._shouldRecreatePlayer(changes)) {\n      this._conditionallyLoad();\n    } else if (this._player) {\n      if (changes['width'] || changes['height']) {\n        this._setSize();\n      }\n      if (changes['suggestedQuality']) {\n        this._setQuality();\n      }\n      if (changes['startSeconds'] || changes['endSeconds'] || changes['suggestedQuality']) {\n        this._cuePlayer();\n      }\n    }\n  }\n  ngOnDestroy() {\n    this._pendingPlayer?.destroy();\n    if (this._player) {\n      this._player.destroy();\n      window.onYouTubeIframeAPIReady = this._existingApiReadyCallback;\n    }\n    this._playerChanges.complete();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /** See https://developers.google.com/youtube/iframe_api_reference#playVideo */\n  playVideo() {\n    if (this._player) {\n      this._player.playVideo();\n    } else {\n      this._getPendingState().playbackState = YT.PlayerState.PLAYING;\n    }\n  }\n  /** See https://developers.google.com/youtube/iframe_api_reference#pauseVideo */\n  pauseVideo() {\n    if (this._player) {\n      this._player.pauseVideo();\n    } else {\n      this._getPendingState().playbackState = YT.PlayerState.PAUSED;\n    }\n  }\n  /** See https://developers.google.com/youtube/iframe_api_reference#stopVideo */\n  stopVideo() {\n    if (this._player) {\n      this._player.stopVideo();\n    } else {\n      // It seems like YouTube sets the player to CUED when it's stopped.\n      this._getPendingState().playbackState = YT.PlayerState.CUED;\n    }\n  }\n  /** See https://developers.google.com/youtube/iframe_api_reference#seekTo */\n  seekTo(seconds, allowSeekAhead) {\n    if (this._player) {\n      this._player.seekTo(seconds, allowSeekAhead);\n    } else {\n      this._getPendingState().seek = {\n        seconds,\n        allowSeekAhead\n      };\n    }\n  }\n  /** See https://developers.google.com/youtube/iframe_api_reference#mute */\n  mute() {\n    if (this._player) {\n      this._player.mute();\n    } else {\n      this._getPendingState().muted = true;\n    }\n  }\n  /** See https://developers.google.com/youtube/iframe_api_reference#unMute */\n  unMute() {\n    if (this._player) {\n      this._player.unMute();\n    } else {\n      this._getPendingState().muted = false;\n    }\n  }\n  /** See https://developers.google.com/youtube/iframe_api_reference#isMuted */\n  isMuted() {\n    if (this._player) {\n      return this._player.isMuted();\n    }\n    if (this._pendingPlayerState) {\n      return !!this._pendingPlayerState.muted;\n    }\n    return false;\n  }\n  /** See https://developers.google.com/youtube/iframe_api_reference#setVolume */\n  setVolume(volume) {\n    if (this._player) {\n      this._player.setVolume(volume);\n    } else {\n      this._getPendingState().volume = volume;\n    }\n  }\n  /** See https://developers.google.com/youtube/iframe_api_reference#getVolume */\n  getVolume() {\n    if (this._player) {\n      return this._player.getVolume();\n    }\n    if (this._pendingPlayerState && this._pendingPlayerState.volume != null) {\n      return this._pendingPlayerState.volume;\n    }\n    return 0;\n  }\n  /** See https://developers.google.com/youtube/iframe_api_reference#setPlaybackRate */\n  setPlaybackRate(playbackRate) {\n    if (this._player) {\n      return this._player.setPlaybackRate(playbackRate);\n    } else {\n      this._getPendingState().playbackRate = playbackRate;\n    }\n  }\n  /** See https://developers.google.com/youtube/iframe_api_reference#getPlaybackRate */\n  getPlaybackRate() {\n    if (this._player) {\n      return this._player.getPlaybackRate();\n    }\n    if (this._pendingPlayerState && this._pendingPlayerState.playbackRate != null) {\n      return this._pendingPlayerState.playbackRate;\n    }\n    return 0;\n  }\n  /** See https://developers.google.com/youtube/iframe_api_reference#getAvailablePlaybackRates */\n  getAvailablePlaybackRates() {\n    return this._player ? this._player.getAvailablePlaybackRates() : [];\n  }\n  /** See https://developers.google.com/youtube/iframe_api_reference#getVideoLoadedFraction */\n  getVideoLoadedFraction() {\n    return this._player ? this._player.getVideoLoadedFraction() : 0;\n  }\n  /** See https://developers.google.com/youtube/iframe_api_reference#getPlayerState */\n  getPlayerState() {\n    if (!this._isBrowser || !window.YT) {\n      return undefined;\n    }\n    if (this._player) {\n      return this._player.getPlayerState();\n    }\n    if (this._pendingPlayerState && this._pendingPlayerState.playbackState != null) {\n      return this._pendingPlayerState.playbackState;\n    }\n    return YT.PlayerState.UNSTARTED;\n  }\n  /** See https://developers.google.com/youtube/iframe_api_reference#getCurrentTime */\n  getCurrentTime() {\n    if (this._player) {\n      return this._player.getCurrentTime();\n    }\n    if (this._pendingPlayerState && this._pendingPlayerState.seek) {\n      return this._pendingPlayerState.seek.seconds;\n    }\n    return 0;\n  }\n  /** See https://developers.google.com/youtube/iframe_api_reference#getPlaybackQuality */\n  getPlaybackQuality() {\n    return this._player ? this._player.getPlaybackQuality() : 'default';\n  }\n  /** See https://developers.google.com/youtube/iframe_api_reference#getAvailableQualityLevels */\n  getAvailableQualityLevels() {\n    return this._player ? this._player.getAvailableQualityLevels() : [];\n  }\n  /** See https://developers.google.com/youtube/iframe_api_reference#getDuration */\n  getDuration() {\n    return this._player ? this._player.getDuration() : 0;\n  }\n  /** See https://developers.google.com/youtube/iframe_api_reference#getVideoUrl */\n  getVideoUrl() {\n    return this._player ? this._player.getVideoUrl() : '';\n  }\n  /** See https://developers.google.com/youtube/iframe_api_reference#getVideoEmbedCode */\n  getVideoEmbedCode() {\n    return this._player ? this._player.getVideoEmbedCode() : '';\n  }\n  /**\n   * Loads the YouTube API and sets up the player.\n   * @param playVideo Whether to automatically play the video once the player is loaded.\n   */\n  _load(playVideo) {\n    // Don't do anything if we're not in a browser environment.\n    if (!this._isBrowser) {\n      return;\n    }\n    if (!window.YT || !window.YT.Player) {\n      if (this.loadApi) {\n        this._isLoading = true;\n        loadApi(this._nonce);\n      } else if (this.showBeforeIframeApiLoads && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw new Error('Namespace YT not found, cannot construct embedded youtube player. ' + 'Please install the YouTube Player API Reference for iframe Embeds: ' + 'https://developers.google.com/youtube/iframe_api_reference');\n      }\n      this._existingApiReadyCallback = window.onYouTubeIframeAPIReady;\n      window.onYouTubeIframeAPIReady = () => {\n        this._existingApiReadyCallback?.();\n        this._ngZone.run(() => this._createPlayer(playVideo));\n      };\n    } else {\n      this._createPlayer(playVideo);\n    }\n  }\n  /** Loads the player depending on the internal state of the component. */\n  _conditionallyLoad() {\n    // If the placeholder isn't shown anymore, we have to trigger a load.\n    if (!this._shouldShowPlaceholder()) {\n      this._load(false);\n    } else if (this.playerVars?.autoplay === 1) {\n      // If it's an autoplaying video, we have to hide the placeholder and start playing.\n      this._load(true);\n    }\n  }\n  /** Whether to show the placeholder element. */\n  _shouldShowPlaceholder() {\n    if (this.disablePlaceholder) {\n      return false;\n    }\n    // Since we don't load the API on the server, we show the placeholder permanently.\n    if (!this._isBrowser) {\n      return true;\n    }\n    return this._hasPlaceholder && !!this.videoId && !this._player;\n  }\n  /** Gets an object that should be used to store the temporary API state. */\n  _getPendingState() {\n    if (!this._pendingPlayerState) {\n      this._pendingPlayerState = {};\n    }\n    return this._pendingPlayerState;\n  }\n  /**\n   * Determines whether a change in the component state\n   * requires the YouTube player to be recreated.\n   */\n  _shouldRecreatePlayer(changes) {\n    const change = changes['videoId'] || changes['playerVars'] || changes['disableCookies'] || changes['disablePlaceholder'];\n    return !!change && !change.isFirstChange();\n  }\n  /**\n   * Creates a new YouTube player and destroys the existing one.\n   * @param playVideo Whether to play the video once it loads.\n   */\n  _createPlayer(playVideo) {\n    this._player?.destroy();\n    this._pendingPlayer?.destroy();\n    // A player can't be created if the API isn't loaded,\n    // or there isn't a video or playlist to be played.\n    if (typeof YT === 'undefined' || !this.videoId && !this.playerVars?.list) {\n      return;\n    }\n    // Important! We need to create the Player object outside of the `NgZone`, because it kicks\n    // off a 250ms setInterval which will continually trigger change detection if we don't.\n    const player = this._ngZone.runOutsideAngular(() => new YT.Player(this.youtubeContainer.nativeElement, {\n      videoId: this.videoId,\n      host: this.disableCookies ? 'https://www.youtube-nocookie.com' : undefined,\n      width: this.width,\n      height: this.height,\n      // Calling `playVideo` on load doesn't appear to actually play\n      // the video so we need to trigger it through `playerVars` instead.\n      playerVars: playVideo ? {\n        ...(this.playerVars || {}),\n        autoplay: 1\n      } : this.playerVars\n    }));\n    const whenReady = () => {\n      // Only assign the player once it's ready, otherwise YouTube doesn't expose some APIs.\n      this._ngZone.run(() => {\n        this._isLoading = false;\n        this._hasPlaceholder = false;\n        this._player = player;\n        this._pendingPlayer = undefined;\n        player.removeEventListener('onReady', whenReady);\n        this._playerChanges.next(player);\n        this._setSize();\n        this._setQuality();\n        if (this._pendingPlayerState) {\n          this._applyPendingPlayerState(player, this._pendingPlayerState);\n          this._pendingPlayerState = undefined;\n        }\n        // Only cue the player when it either hasn't started yet or it's cued,\n        // otherwise cuing it can interrupt a player with autoplay enabled.\n        const state = player.getPlayerState();\n        if (state === YT.PlayerState.UNSTARTED || state === YT.PlayerState.CUED || state == null) {\n          this._cuePlayer();\n        }\n        this._changeDetectorRef.markForCheck();\n      });\n    };\n    this._pendingPlayer = player;\n    player.addEventListener('onReady', whenReady);\n  }\n  /** Applies any state that changed before the player was initialized. */\n  _applyPendingPlayerState(player, pendingState) {\n    const {\n      playbackState,\n      playbackRate,\n      volume,\n      muted,\n      seek\n    } = pendingState;\n    switch (playbackState) {\n      case YT.PlayerState.PLAYING:\n        player.playVideo();\n        break;\n      case YT.PlayerState.PAUSED:\n        player.pauseVideo();\n        break;\n      case YT.PlayerState.CUED:\n        player.stopVideo();\n        break;\n    }\n    if (playbackRate != null) {\n      player.setPlaybackRate(playbackRate);\n    }\n    if (volume != null) {\n      player.setVolume(volume);\n    }\n    if (muted != null) {\n      muted ? player.mute() : player.unMute();\n    }\n    if (seek != null) {\n      player.seekTo(seek.seconds, seek.allowSeekAhead);\n    }\n  }\n  /** Cues the player based on the current component state. */\n  _cuePlayer() {\n    if (this._player && this.videoId) {\n      this._player.cueVideoById({\n        videoId: this.videoId,\n        startSeconds: this.startSeconds,\n        endSeconds: this.endSeconds,\n        suggestedQuality: this.suggestedQuality\n      });\n    }\n  }\n  /** Sets the player's size based on the current input values. */\n  _setSize() {\n    this._player?.setSize(this.width, this.height);\n  }\n  /** Sets the player's quality based on the current input values. */\n  _setQuality() {\n    if (this._player && this.suggestedQuality) {\n      this._player.setPlaybackQuality(this.suggestedQuality);\n    }\n  }\n  /** Gets an observable that adds an event listener to the player when a user subscribes to it. */\n  _getLazyEmitter(name) {\n    // Start with the stream of players. This way the events will be transferred\n    // over to the new player if it gets swapped out under-the-hood.\n    return this._playerChanges.pipe(\n    // Switch to the bound event. `switchMap` ensures that the old event is removed when the\n    // player is changed. If there's no player, return an observable that never emits.\n    switchMap(player => {\n      return player ? fromEventPattern(listener => {\n        player.addEventListener(name, listener);\n      }, listener => {\n        // The API seems to throw when we try to unbind from a destroyed player and it doesn't\n        // expose whether the player has been destroyed so we have to wrap it in a try/catch to\n        // prevent the entire stream from erroring out.\n        try {\n          player?.removeEventListener?.(name, listener);\n        } catch {}\n      }) : of();\n    }),\n    // By default we run all the API interactions outside the zone\n    // so we have to bring the events back in manually when they emit.\n    source => new Observable(observer => source.subscribe({\n      next: value => this._ngZone.run(() => observer.next(value)),\n      error: error => observer.error(error),\n      complete: () => observer.complete()\n    })),\n    // Ensures that everything is cleared out on destroy.\n    takeUntil(this._destroyed));\n  }\n  static {\n    this.ɵfac = function YouTubePlayer_Factory(t) {\n      return new (t || YouTubePlayer)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(PLATFORM_ID));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: YouTubePlayer,\n      selectors: [[\"youtube-player\"]],\n      viewQuery: function YouTubePlayer_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.youtubeContainer = _t.first);\n        }\n      },\n      inputs: {\n        videoId: \"videoId\",\n        height: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"height\", \"height\", numberAttribute],\n        width: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"width\", \"width\", numberAttribute],\n        startSeconds: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"startSeconds\", \"startSeconds\", coerceTime],\n        endSeconds: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"endSeconds\", \"endSeconds\", coerceTime],\n        suggestedQuality: \"suggestedQuality\",\n        playerVars: \"playerVars\",\n        disableCookies: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disableCookies\", \"disableCookies\", booleanAttribute],\n        loadApi: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"loadApi\", \"loadApi\", booleanAttribute],\n        disablePlaceholder: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disablePlaceholder\", \"disablePlaceholder\", booleanAttribute],\n        showBeforeIframeApiLoads: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"showBeforeIframeApiLoads\", \"showBeforeIframeApiLoads\", booleanAttribute],\n        placeholderButtonLabel: \"placeholderButtonLabel\",\n        placeholderImageQuality: \"placeholderImageQuality\"\n      },\n      outputs: {\n        ready: \"ready\",\n        stateChange: \"stateChange\",\n        error: \"error\",\n        apiChange: \"apiChange\",\n        playbackQualityChange: \"playbackQualityChange\",\n        playbackRateChange: \"playbackRateChange\"\n      },\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      decls: 4,\n      vars: 3,\n      consts: [[3, \"videoId\", \"width\", \"height\", \"isLoading\", \"buttonLabel\", \"quality\"], [\"youtubeContainer\", \"\"], [3, \"videoId\", \"width\", \"height\", \"isLoading\", \"buttonLabel\", \"quality\", \"click\"]],\n      template: function YouTubePlayer_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, YouTubePlayer_Conditional_0_Template, 1, 6, \"youtube-player-placeholder\", 0);\n          i0.ɵɵelementStart(1, \"div\");\n          i0.ɵɵelement(2, \"div\", null, 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵconditional(0, ctx._shouldShowPlaceholder() ? 0 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵstyleProp(\"display\", ctx._shouldShowPlaceholder() ? \"none\" : \"\");\n        }\n      },\n      dependencies: [YouTubePlayerPlaceholder],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(YouTubePlayer, [{\n    type: Component,\n    args: [{\n      selector: 'youtube-player',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      standalone: true,\n      imports: [YouTubePlayerPlaceholder],\n      template: `\n    @if (_shouldShowPlaceholder()) {\n      <youtube-player-placeholder\n        [videoId]=\"videoId!\"\n        [width]=\"width\"\n        [height]=\"height\"\n        [isLoading]=\"_isLoading\"\n        [buttonLabel]=\"placeholderButtonLabel\"\n        [quality]=\"placeholderImageQuality\"\n        (click)=\"_load(true)\"/>\n    }\n    <div [style.display]=\"_shouldShowPlaceholder() ? 'none' : ''\">\n      <div #youtubeContainer></div>\n    </div>\n  `\n    }]\n  }], () => [{\n    type: i0.NgZone\n  }, {\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }], {\n    videoId: [{\n      type: Input\n    }],\n    height: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    width: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    startSeconds: [{\n      type: Input,\n      args: [{\n        transform: coerceTime\n      }]\n    }],\n    endSeconds: [{\n      type: Input,\n      args: [{\n        transform: coerceTime\n      }]\n    }],\n    suggestedQuality: [{\n      type: Input\n    }],\n    playerVars: [{\n      type: Input\n    }],\n    disableCookies: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    loadApi: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disablePlaceholder: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    showBeforeIframeApiLoads: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    placeholderButtonLabel: [{\n      type: Input\n    }],\n    placeholderImageQuality: [{\n      type: Input\n    }],\n    ready: [{\n      type: Output\n    }],\n    stateChange: [{\n      type: Output\n    }],\n    error: [{\n      type: Output\n    }],\n    apiChange: [{\n      type: Output\n    }],\n    playbackQualityChange: [{\n      type: Output\n    }],\n    playbackRateChange: [{\n      type: Output\n    }],\n    youtubeContainer: [{\n      type: ViewChild,\n      args: ['youtubeContainer', {\n        static: true\n      }]\n    }]\n  });\n})();\nlet apiLoaded = false;\n/** Loads the YouTube API from a specified URL only once. */\nfunction loadApi(nonce) {\n  if (apiLoaded) {\n    return;\n  }\n  // We can use `document` directly here, because this logic doesn't run outside the browser.\n  const url = 'https://www.youtube.com/iframe_api';\n  const script = document.createElement('script');\n  const callback = event => {\n    script.removeEventListener('load', callback);\n    script.removeEventListener('error', callback);\n    if (event.type === 'error') {\n      apiLoaded = false;\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        console.error(`Failed to load YouTube API from ${url}`);\n      }\n    }\n  };\n  script.addEventListener('load', callback);\n  script.addEventListener('error', callback);\n  script.src = url;\n  script.async = true;\n  if (nonce) {\n    script.nonce = nonce;\n  }\n  // Set this immediately to true so we don't start loading another script\n  // while this one is pending. If loading fails, we'll flip it back to false.\n  apiLoaded = true;\n  document.body.appendChild(script);\n}\nclass YouTubePlayerModule {\n  static {\n    this.ɵfac = function YouTubePlayerModule_Factory(t) {\n      return new (t || YouTubePlayerModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: YouTubePlayerModule,\n      imports: [YouTubePlayer],\n      exports: [YouTubePlayer]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(YouTubePlayerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [YouTubePlayer],\n      exports: [YouTubePlayer]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { YOUTUBE_PLAYER_CONFIG, YouTubePlayer, YouTubePlayerModule };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,IAAM,MAAM,CAAC,kBAAkB;AAC/B,SAAS,qCAAqC,IAAI,KAAK;AACrD,MAAI,KAAK,GAAG;AACV,UAAM,MAAS,iBAAiB;AAChC,IAAG,eAAe,GAAG,8BAA8B,CAAC;AACpD,IAAG,WAAW,SAAS,SAAS,mFAAmF;AACjH,MAAG,cAAc,GAAG;AACpB,YAAM,SAAY,cAAc;AAChC,aAAU,YAAY,OAAO,MAAM,IAAI,CAAC;AAAA,IAC1C,CAAC;AACD,IAAG,aAAa;AAAA,EAClB;AACA,MAAI,KAAK,GAAG;AACV,UAAM,SAAY,cAAc;AAChC,IAAG,WAAW,WAAW,OAAO,OAAO,EAAE,SAAS,OAAO,KAAK,EAAE,UAAU,OAAO,MAAM,EAAE,aAAa,OAAO,UAAU,EAAE,eAAe,OAAO,sBAAsB,EAAE,WAAW,OAAO,uBAAuB;AAAA,EAClN;AACF;AACA,IAAM,4BAAN,MAAM,0BAAyB;AAAA;AAAA,EAE7B,sBAAsB;AACpB,QAAI;AACJ,QAAI,KAAK,YAAY,OAAO;AAC1B,YAAM,0BAA0B,KAAK,OAAO;AAAA,IAC9C,WAAW,KAAK,YAAY,QAAQ;AAClC,YAAM,0BAA0B,KAAK,OAAO;AAAA,IAC9C,OAAO;AACL,YAAM,+BAA+B,KAAK,OAAO;AAAA,IACnD;AACA,WAAO,OAAO,GAAG;AAAA,EACnB;AAgDF;AA9CI,0BAAK,OAAO,SAAS,iCAAiC,GAAG;AACvD,SAAO,KAAK,KAAK,2BAA0B;AAC7C;AAGA,0BAAK,OAAyB,kBAAkB;AAAA,EAC9C,MAAM;AAAA,EACN,WAAW,CAAC,CAAC,4BAA4B,CAAC;AAAA,EAC1C,WAAW,CAAC,GAAG,4BAA4B;AAAA,EAC3C,UAAU;AAAA,EACV,cAAc,SAAS,sCAAsC,IAAI,KAAK;AACpE,QAAI,KAAK,GAAG;AACV,MAAG,YAAY,oBAAoB,IAAI,oBAAoB,CAAC,EAAE,SAAS,IAAI,OAAO,IAAI,EAAE,UAAU,IAAI,QAAQ,IAAI;AAClH,MAAG,YAAY,sCAAsC,IAAI,SAAS;AAAA,IACpE;AAAA,EACF;AAAA,EACA,QAAQ;AAAA,IACN,SAAS;AAAA,IACT,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,SAAS;AAAA,EACX;AAAA,EACA,YAAY;AAAA,EACZ,UAAU,CAAI,mBAAmB;AAAA,EACjC,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ,CAAC,CAAC,QAAQ,UAAU,GAAG,mCAAmC,GAAG,CAAC,UAAU,QAAQ,WAAW,OAAO,WAAW,aAAa,aAAa,SAAS,eAAe,MAAM,GAAG,CAAC,KAAK,yTAAyT,QAAQ,MAAM,GAAG,CAAC,KAAK,uBAAuB,QAAQ,MAAM,CAAC;AAAA,EAC5iB,UAAU,SAAS,kCAAkC,IAAI,KAAK;AAC5D,QAAI,KAAK,GAAG;AACV,MAAG,eAAe,GAAG,UAAU,CAAC;AAChC,MAAG,eAAe;AAClB,MAAG,eAAe,GAAG,OAAO,CAAC;AAC7B,MAAG,UAAU,GAAG,QAAQ,CAAC,EAAE,GAAG,QAAQ,CAAC;AACvC,MAAG,aAAa,EAAE;AAAA,IACpB;AACA,QAAI,KAAK,GAAG;AACV,MAAG,YAAY,cAAc,IAAI,WAAW;AAAA,IAC9C;AAAA,EACF;AAAA,EACA,QAAQ,CAAC,qoBAAqoB;AAAA,EAC9oB,eAAe;AAAA,EACf,iBAAiB;AACnB,CAAC;AA1DL,IAAM,2BAAN;AAAA,CA6DC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,0BAA0B,CAAC;AAAA,IACjG,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,iBAAiB,wBAAwB;AAAA,MACzC,eAAe,oBAAkB;AAAA,MACjC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAaV,YAAY;AAAA,MACZ,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,8CAA8C;AAAA,QAC9C,4BAA4B;AAAA,QAC5B,oBAAoB;AAAA,QACpB,qBAAqB;AAAA,MACvB;AAAA,MACA,QAAQ,CAAC,qoBAAqoB;AAAA,IAChpB,CAAC;AAAA,EACH,CAAC,GAAG,MAAM;AAAA,IACR,SAAS,CAAC;AAAA,MACR,MAAM;AAAA,IACR,CAAC;AAAA,IACD,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,IACD,QAAQ,CAAC;AAAA,MACP,MAAM;AAAA,IACR,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,IACR,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,IACR,CAAC;AAAA,IACD,SAAS,CAAC;AAAA,MACR,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AAIH,IAAM,wBAAwB,IAAI,eAAe,uBAAuB;AACxE,IAAM,uBAAuB;AAC7B,IAAM,wBAAwB;AAE9B,SAAS,WAAW,OAAO;AACzB,SAAO,SAAS,OAAO,QAAQ,gBAAgB,OAAO,CAAC;AACzD;AAMA,IAAM,iBAAN,MAAM,eAAc;AAAA;AAAA,EAElB,IAAI,SAAS;AACX,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,OAAO,QAAQ;AACjB,SAAK,UAAU,UAAU,QAAQ,MAAM,MAAM,IAAI,wBAAwB;AAAA,EAC3E;AAAA;AAAA,EAEA,IAAI,QAAQ;AACV,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,MAAM,OAAO;AACf,SAAK,SAAS,SAAS,QAAQ,MAAM,KAAK,IAAI,uBAAuB;AAAA,EACvE;AAAA,EACA,YAAY,SAAS,YAAY;AAC/B,SAAK,UAAU;AACf,SAAK,aAAa,IAAI,QAAQ;AAC9B,SAAK,iBAAiB,IAAI,gBAAgB,MAAS;AACnD,SAAK,SAAS,OAAO,WAAW;AAAA,MAC9B,UAAU;AAAA,IACZ,CAAC;AACD,SAAK,qBAAqB,OAAO,iBAAiB;AAClD,SAAK,aAAa;AAClB,SAAK,kBAAkB;AACvB,SAAK,UAAU;AACf,SAAK,SAAS;AAEd,SAAK,iBAAiB;AAKtB,SAAK,qBAAqB;AAM1B,SAAK,2BAA2B;AAEhC,SAAK,QAAQ,KAAK,gBAAgB,SAAS;AAC3C,SAAK,cAAc,KAAK,gBAAgB,eAAe;AACvD,SAAK,QAAQ,KAAK,gBAAgB,SAAS;AAC3C,SAAK,YAAY,KAAK,gBAAgB,aAAa;AACnD,SAAK,wBAAwB,KAAK,gBAAgB,yBAAyB;AAC3E,SAAK,qBAAqB,KAAK,gBAAgB,sBAAsB;AACrE,UAAM,SAAS,OAAO,uBAAuB;AAAA,MAC3C,UAAU;AAAA,IACZ,CAAC;AACD,SAAK,UAAU,QAAQ,WAAW;AAClC,SAAK,qBAAqB,CAAC,CAAC,QAAQ;AACpC,SAAK,yBAAyB,QAAQ,0BAA0B;AAChE,SAAK,0BAA0B,QAAQ,2BAA2B;AAClE,SAAK,aAAa,kBAAkB,UAAU;AAAA,EAChD;AAAA,EACA,kBAAkB;AAChB,SAAK,mBAAmB;AAAA,EAC1B;AAAA,EACA,YAAY,SAAS;AACnB,QAAI,KAAK,sBAAsB,OAAO,GAAG;AACvC,WAAK,mBAAmB;AAAA,IAC1B,WAAW,KAAK,SAAS;AACvB,UAAI,QAAQ,OAAO,KAAK,QAAQ,QAAQ,GAAG;AACzC,aAAK,SAAS;AAAA,MAChB;AACA,UAAI,QAAQ,kBAAkB,GAAG;AAC/B,aAAK,YAAY;AAAA,MACnB;AACA,UAAI,QAAQ,cAAc,KAAK,QAAQ,YAAY,KAAK,QAAQ,kBAAkB,GAAG;AACnF,aAAK,WAAW;AAAA,MAClB;AAAA,IACF;AAAA,EACF;AAAA,EACA,cAAc;AACZ,SAAK,gBAAgB,QAAQ;AAC7B,QAAI,KAAK,SAAS;AAChB,WAAK,QAAQ,QAAQ;AACrB,aAAO,0BAA0B,KAAK;AAAA,IACxC;AACA,SAAK,eAAe,SAAS;AAC7B,SAAK,WAAW,KAAK;AACrB,SAAK,WAAW,SAAS;AAAA,EAC3B;AAAA;AAAA,EAEA,YAAY;AACV,QAAI,KAAK,SAAS;AAChB,WAAK,QAAQ,UAAU;AAAA,IACzB,OAAO;AACL,WAAK,iBAAiB,EAAE,gBAAgB,GAAG,YAAY;AAAA,IACzD;AAAA,EACF;AAAA;AAAA,EAEA,aAAa;AACX,QAAI,KAAK,SAAS;AAChB,WAAK,QAAQ,WAAW;AAAA,IAC1B,OAAO;AACL,WAAK,iBAAiB,EAAE,gBAAgB,GAAG,YAAY;AAAA,IACzD;AAAA,EACF;AAAA;AAAA,EAEA,YAAY;AACV,QAAI,KAAK,SAAS;AAChB,WAAK,QAAQ,UAAU;AAAA,IACzB,OAAO;AAEL,WAAK,iBAAiB,EAAE,gBAAgB,GAAG,YAAY;AAAA,IACzD;AAAA,EACF;AAAA;AAAA,EAEA,OAAO,SAAS,gBAAgB;AAC9B,QAAI,KAAK,SAAS;AAChB,WAAK,QAAQ,OAAO,SAAS,cAAc;AAAA,IAC7C,OAAO;AACL,WAAK,iBAAiB,EAAE,OAAO;AAAA,QAC7B;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA;AAAA,EAEA,OAAO;AACL,QAAI,KAAK,SAAS;AAChB,WAAK,QAAQ,KAAK;AAAA,IACpB,OAAO;AACL,WAAK,iBAAiB,EAAE,QAAQ;AAAA,IAClC;AAAA,EACF;AAAA;AAAA,EAEA,SAAS;AACP,QAAI,KAAK,SAAS;AAChB,WAAK,QAAQ,OAAO;AAAA,IACtB,OAAO;AACL,WAAK,iBAAiB,EAAE,QAAQ;AAAA,IAClC;AAAA,EACF;AAAA;AAAA,EAEA,UAAU;AACR,QAAI,KAAK,SAAS;AAChB,aAAO,KAAK,QAAQ,QAAQ;AAAA,IAC9B;AACA,QAAI,KAAK,qBAAqB;AAC5B,aAAO,CAAC,CAAC,KAAK,oBAAoB;AAAA,IACpC;AACA,WAAO;AAAA,EACT;AAAA;AAAA,EAEA,UAAU,QAAQ;AAChB,QAAI,KAAK,SAAS;AAChB,WAAK,QAAQ,UAAU,MAAM;AAAA,IAC/B,OAAO;AACL,WAAK,iBAAiB,EAAE,SAAS;AAAA,IACnC;AAAA,EACF;AAAA;AAAA,EAEA,YAAY;AACV,QAAI,KAAK,SAAS;AAChB,aAAO,KAAK,QAAQ,UAAU;AAAA,IAChC;AACA,QAAI,KAAK,uBAAuB,KAAK,oBAAoB,UAAU,MAAM;AACvE,aAAO,KAAK,oBAAoB;AAAA,IAClC;AACA,WAAO;AAAA,EACT;AAAA;AAAA,EAEA,gBAAgB,cAAc;AAC5B,QAAI,KAAK,SAAS;AAChB,aAAO,KAAK,QAAQ,gBAAgB,YAAY;AAAA,IAClD,OAAO;AACL,WAAK,iBAAiB,EAAE,eAAe;AAAA,IACzC;AAAA,EACF;AAAA;AAAA,EAEA,kBAAkB;AAChB,QAAI,KAAK,SAAS;AAChB,aAAO,KAAK,QAAQ,gBAAgB;AAAA,IACtC;AACA,QAAI,KAAK,uBAAuB,KAAK,oBAAoB,gBAAgB,MAAM;AAC7E,aAAO,KAAK,oBAAoB;AAAA,IAClC;AACA,WAAO;AAAA,EACT;AAAA;AAAA,EAEA,4BAA4B;AAC1B,WAAO,KAAK,UAAU,KAAK,QAAQ,0BAA0B,IAAI,CAAC;AAAA,EACpE;AAAA;AAAA,EAEA,yBAAyB;AACvB,WAAO,KAAK,UAAU,KAAK,QAAQ,uBAAuB,IAAI;AAAA,EAChE;AAAA;AAAA,EAEA,iBAAiB;AACf,QAAI,CAAC,KAAK,cAAc,CAAC,OAAO,IAAI;AAClC,aAAO;AAAA,IACT;AACA,QAAI,KAAK,SAAS;AAChB,aAAO,KAAK,QAAQ,eAAe;AAAA,IACrC;AACA,QAAI,KAAK,uBAAuB,KAAK,oBAAoB,iBAAiB,MAAM;AAC9E,aAAO,KAAK,oBAAoB;AAAA,IAClC;AACA,WAAO,GAAG,YAAY;AAAA,EACxB;AAAA;AAAA,EAEA,iBAAiB;AACf,QAAI,KAAK,SAAS;AAChB,aAAO,KAAK,QAAQ,eAAe;AAAA,IACrC;AACA,QAAI,KAAK,uBAAuB,KAAK,oBAAoB,MAAM;AAC7D,aAAO,KAAK,oBAAoB,KAAK;AAAA,IACvC;AACA,WAAO;AAAA,EACT;AAAA;AAAA,EAEA,qBAAqB;AACnB,WAAO,KAAK,UAAU,KAAK,QAAQ,mBAAmB,IAAI;AAAA,EAC5D;AAAA;AAAA,EAEA,4BAA4B;AAC1B,WAAO,KAAK,UAAU,KAAK,QAAQ,0BAA0B,IAAI,CAAC;AAAA,EACpE;AAAA;AAAA,EAEA,cAAc;AACZ,WAAO,KAAK,UAAU,KAAK,QAAQ,YAAY,IAAI;AAAA,EACrD;AAAA;AAAA,EAEA,cAAc;AACZ,WAAO,KAAK,UAAU,KAAK,QAAQ,YAAY,IAAI;AAAA,EACrD;AAAA;AAAA,EAEA,oBAAoB;AAClB,WAAO,KAAK,UAAU,KAAK,QAAQ,kBAAkB,IAAI;AAAA,EAC3D;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,WAAW;AAEf,QAAI,CAAC,KAAK,YAAY;AACpB;AAAA,IACF;AACA,QAAI,CAAC,OAAO,MAAM,CAAC,OAAO,GAAG,QAAQ;AACnC,UAAI,KAAK,SAAS;AAChB,aAAK,aAAa;AAClB,gBAAQ,KAAK,MAAM;AAAA,MACrB,WAAW,KAAK,6BAA6B,OAAO,cAAc,eAAe,YAAY;AAC3F,cAAM,IAAI,MAAM,iMAA2M;AAAA,MAC7N;AACA,WAAK,4BAA4B,OAAO;AACxC,aAAO,0BAA0B,MAAM;AACrC,aAAK,4BAA4B;AACjC,aAAK,QAAQ,IAAI,MAAM,KAAK,cAAc,SAAS,CAAC;AAAA,MACtD;AAAA,IACF,OAAO;AACL,WAAK,cAAc,SAAS;AAAA,IAC9B;AAAA,EACF;AAAA;AAAA,EAEA,qBAAqB;AAEnB,QAAI,CAAC,KAAK,uBAAuB,GAAG;AAClC,WAAK,MAAM,KAAK;AAAA,IAClB,WAAW,KAAK,YAAY,aAAa,GAAG;AAE1C,WAAK,MAAM,IAAI;AAAA,IACjB;AAAA,EACF;AAAA;AAAA,EAEA,yBAAyB;AACvB,QAAI,KAAK,oBAAoB;AAC3B,aAAO;AAAA,IACT;AAEA,QAAI,CAAC,KAAK,YAAY;AACpB,aAAO;AAAA,IACT;AACA,WAAO,KAAK,mBAAmB,CAAC,CAAC,KAAK,WAAW,CAAC,KAAK;AAAA,EACzD;AAAA;AAAA,EAEA,mBAAmB;AACjB,QAAI,CAAC,KAAK,qBAAqB;AAC7B,WAAK,sBAAsB,CAAC;AAAA,IAC9B;AACA,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,sBAAsB,SAAS;AAC7B,UAAM,SAAS,QAAQ,SAAS,KAAK,QAAQ,YAAY,KAAK,QAAQ,gBAAgB,KAAK,QAAQ,oBAAoB;AACvH,WAAO,CAAC,CAAC,UAAU,CAAC,OAAO,cAAc;AAAA,EAC3C;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,cAAc,WAAW;AACvB,SAAK,SAAS,QAAQ;AACtB,SAAK,gBAAgB,QAAQ;AAG7B,QAAI,OAAO,OAAO,eAAe,CAAC,KAAK,WAAW,CAAC,KAAK,YAAY,MAAM;AACxE;AAAA,IACF;AAGA,UAAM,SAAS,KAAK,QAAQ,kBAAkB,MAAM,IAAI,GAAG,OAAO,KAAK,iBAAiB,eAAe;AAAA,MACrG,SAAS,KAAK;AAAA,MACd,MAAM,KAAK,iBAAiB,qCAAqC;AAAA,MACjE,OAAO,KAAK;AAAA,MACZ,QAAQ,KAAK;AAAA;AAAA;AAAA,MAGb,YAAY,YAAY,iCAClB,KAAK,cAAc,CAAC,IADF;AAAA,QAEtB,UAAU;AAAA,MACZ,KAAI,KAAK;AAAA,IACX,CAAC,CAAC;AACF,UAAM,YAAY,MAAM;AAEtB,WAAK,QAAQ,IAAI,MAAM;AACrB,aAAK,aAAa;AAClB,aAAK,kBAAkB;AACvB,aAAK,UAAU;AACf,aAAK,iBAAiB;AACtB,eAAO,oBAAoB,WAAW,SAAS;AAC/C,aAAK,eAAe,KAAK,MAAM;AAC/B,aAAK,SAAS;AACd,aAAK,YAAY;AACjB,YAAI,KAAK,qBAAqB;AAC5B,eAAK,yBAAyB,QAAQ,KAAK,mBAAmB;AAC9D,eAAK,sBAAsB;AAAA,QAC7B;AAGA,cAAM,QAAQ,OAAO,eAAe;AACpC,YAAI,UAAU,GAAG,YAAY,aAAa,UAAU,GAAG,YAAY,QAAQ,SAAS,MAAM;AACxF,eAAK,WAAW;AAAA,QAClB;AACA,aAAK,mBAAmB,aAAa;AAAA,MACvC,CAAC;AAAA,IACH;AACA,SAAK,iBAAiB;AACtB,WAAO,iBAAiB,WAAW,SAAS;AAAA,EAC9C;AAAA;AAAA,EAEA,yBAAyB,QAAQ,cAAc;AAC7C,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AACJ,YAAQ,eAAe;AAAA,MACrB,KAAK,GAAG,YAAY;AAClB,eAAO,UAAU;AACjB;AAAA,MACF,KAAK,GAAG,YAAY;AAClB,eAAO,WAAW;AAClB;AAAA,MACF,KAAK,GAAG,YAAY;AAClB,eAAO,UAAU;AACjB;AAAA,IACJ;AACA,QAAI,gBAAgB,MAAM;AACxB,aAAO,gBAAgB,YAAY;AAAA,IACrC;AACA,QAAI,UAAU,MAAM;AAClB,aAAO,UAAU,MAAM;AAAA,IACzB;AACA,QAAI,SAAS,MAAM;AACjB,cAAQ,OAAO,KAAK,IAAI,OAAO,OAAO;AAAA,IACxC;AACA,QAAI,QAAQ,MAAM;AAChB,aAAO,OAAO,KAAK,SAAS,KAAK,cAAc;AAAA,IACjD;AAAA,EACF;AAAA;AAAA,EAEA,aAAa;AACX,QAAI,KAAK,WAAW,KAAK,SAAS;AAChC,WAAK,QAAQ,aAAa;AAAA,QACxB,SAAS,KAAK;AAAA,QACd,cAAc,KAAK;AAAA,QACnB,YAAY,KAAK;AAAA,QACjB,kBAAkB,KAAK;AAAA,MACzB,CAAC;AAAA,IACH;AAAA,EACF;AAAA;AAAA,EAEA,WAAW;AACT,SAAK,SAAS,QAAQ,KAAK,OAAO,KAAK,MAAM;AAAA,EAC/C;AAAA;AAAA,EAEA,cAAc;AACZ,QAAI,KAAK,WAAW,KAAK,kBAAkB;AACzC,WAAK,QAAQ,mBAAmB,KAAK,gBAAgB;AAAA,IACvD;AAAA,EACF;AAAA;AAAA,EAEA,gBAAgB,MAAM;AAGpB,WAAO,KAAK,eAAe;AAAA;AAAA;AAAA,MAG3B,UAAU,YAAU;AAClB,eAAO,SAAS,iBAAiB,cAAY;AAC3C,iBAAO,iBAAiB,MAAM,QAAQ;AAAA,QACxC,GAAG,cAAY;AAIb,cAAI;AACF,oBAAQ,sBAAsB,MAAM,QAAQ;AAAA,UAC9C,QAAQ;AAAA,UAAC;AAAA,QACX,CAAC,IAAI,GAAG;AAAA,MACV,CAAC;AAAA;AAAA;AAAA,MAGD,YAAU,IAAI,WAAW,cAAY,OAAO,UAAU;AAAA,QACpD,MAAM,WAAS,KAAK,QAAQ,IAAI,MAAM,SAAS,KAAK,KAAK,CAAC;AAAA,QAC1D,OAAO,WAAS,SAAS,MAAM,KAAK;AAAA,QACpC,UAAU,MAAM,SAAS,SAAS;AAAA,MACpC,CAAC,CAAC;AAAA;AAAA,MAEF,UAAU,KAAK,UAAU;AAAA,IAAC;AAAA,EAC5B;AAiEF;AA/DI,eAAK,OAAO,SAAS,sBAAsB,GAAG;AAC5C,SAAO,KAAK,KAAK,gBAAkB,kBAAqB,MAAM,GAAM,kBAAkB,WAAW,CAAC;AACpG;AAGA,eAAK,OAAyB,kBAAkB;AAAA,EAC9C,MAAM;AAAA,EACN,WAAW,CAAC,CAAC,gBAAgB,CAAC;AAAA,EAC9B,WAAW,SAAS,oBAAoB,IAAI,KAAK;AAC/C,QAAI,KAAK,GAAG;AACV,MAAG,YAAY,KAAK,CAAC;AAAA,IACvB;AACA,QAAI,KAAK,GAAG;AACV,UAAI;AACJ,MAAG,eAAe,KAAQ,YAAY,CAAC,MAAM,IAAI,mBAAmB,GAAG;AAAA,IACzE;AAAA,EACF;AAAA,EACA,QAAQ;AAAA,IACN,SAAS;AAAA,IACT,QAAQ,CAAI,WAAa,4BAA4B,UAAU,UAAU,eAAe;AAAA,IACxF,OAAO,CAAI,WAAa,4BAA4B,SAAS,SAAS,eAAe;AAAA,IACrF,cAAc,CAAI,WAAa,4BAA4B,gBAAgB,gBAAgB,UAAU;AAAA,IACrG,YAAY,CAAI,WAAa,4BAA4B,cAAc,cAAc,UAAU;AAAA,IAC/F,kBAAkB;AAAA,IAClB,YAAY;AAAA,IACZ,gBAAgB,CAAI,WAAa,4BAA4B,kBAAkB,kBAAkB,gBAAgB;AAAA,IACjH,SAAS,CAAI,WAAa,4BAA4B,WAAW,WAAW,gBAAgB;AAAA,IAC5F,oBAAoB,CAAI,WAAa,4BAA4B,sBAAsB,sBAAsB,gBAAgB;AAAA,IAC7H,0BAA0B,CAAI,WAAa,4BAA4B,4BAA4B,4BAA4B,gBAAgB;AAAA,IAC/I,wBAAwB;AAAA,IACxB,yBAAyB;AAAA,EAC3B;AAAA,EACA,SAAS;AAAA,IACP,OAAO;AAAA,IACP,aAAa;AAAA,IACb,OAAO;AAAA,IACP,WAAW;AAAA,IACX,uBAAuB;AAAA,IACvB,oBAAoB;AAAA,EACtB;AAAA,EACA,YAAY;AAAA,EACZ,UAAU,CAAI,0BAA6B,sBAAyB,mBAAmB;AAAA,EACvF,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ,CAAC,CAAC,GAAG,WAAW,SAAS,UAAU,aAAa,eAAe,SAAS,GAAG,CAAC,oBAAoB,EAAE,GAAG,CAAC,GAAG,WAAW,SAAS,UAAU,aAAa,eAAe,WAAW,OAAO,CAAC;AAAA,EAC9L,UAAU,SAAS,uBAAuB,IAAI,KAAK;AACjD,QAAI,KAAK,GAAG;AACV,MAAG,WAAW,GAAG,sCAAsC,GAAG,GAAG,8BAA8B,CAAC;AAC5F,MAAG,eAAe,GAAG,KAAK;AAC1B,MAAG,UAAU,GAAG,OAAO,MAAM,CAAC;AAC9B,MAAG,aAAa;AAAA,IAClB;AACA,QAAI,KAAK,GAAG;AACV,MAAG,cAAc,GAAG,IAAI,uBAAuB,IAAI,IAAI,EAAE;AACzD,MAAG,UAAU;AACb,MAAG,YAAY,WAAW,IAAI,uBAAuB,IAAI,SAAS,EAAE;AAAA,IACtE;AAAA,EACF;AAAA,EACA,cAAc,CAAC,wBAAwB;AAAA,EACvC,eAAe;AAAA,EACf,iBAAiB;AACnB,CAAC;AA5eL,IAAM,gBAAN;AAAA,CA+eC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,eAAe,CAAC;AAAA,IACtF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,iBAAiB,wBAAwB;AAAA,MACzC,eAAe,oBAAkB;AAAA,MACjC,YAAY;AAAA,MACZ,SAAS,CAAC,wBAAwB;AAAA,MAClC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAeZ,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,WAAW;AAAA,IACpB,CAAC;AAAA,EACH,CAAC,GAAG;AAAA,IACF,SAAS,CAAC;AAAA,MACR,MAAM;AAAA,IACR,CAAC;AAAA,IACD,QAAQ,CAAC;AAAA,MACP,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,kBAAkB,CAAC;AAAA,MACjB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,IACD,gBAAgB,CAAC;AAAA,MACf,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,SAAS,CAAC;AAAA,MACR,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,oBAAoB,CAAC;AAAA,MACnB,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,0BAA0B,CAAC;AAAA,MACzB,MAAM;AAAA,MACN,MAAM,CAAC;AAAA,QACL,WAAW;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,IACD,wBAAwB,CAAC;AAAA,MACvB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,yBAAyB,CAAC;AAAA,MACxB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,IACR,CAAC;AAAA,IACD,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,IACR,CAAC;AAAA,IACD,uBAAuB,CAAC;AAAA,MACtB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,oBAAoB,CAAC;AAAA,MACnB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,kBAAkB,CAAC;AAAA,MACjB,MAAM;AAAA,MACN,MAAM,CAAC,oBAAoB;AAAA,QACzB,QAAQ;AAAA,MACV,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AACH,IAAI,YAAY;AAEhB,SAAS,QAAQ,OAAO;AACtB,MAAI,WAAW;AACb;AAAA,EACF;AAEA,QAAM,MAAM;AACZ,QAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,QAAM,WAAW,WAAS;AACxB,WAAO,oBAAoB,QAAQ,QAAQ;AAC3C,WAAO,oBAAoB,SAAS,QAAQ;AAC5C,QAAI,MAAM,SAAS,SAAS;AAC1B,kBAAY;AACZ,UAAI,OAAO,cAAc,eAAe,WAAW;AACjD,gBAAQ,MAAM,mCAAmC,GAAG,EAAE;AAAA,MACxD;AAAA,IACF;AAAA,EACF;AACA,SAAO,iBAAiB,QAAQ,QAAQ;AACxC,SAAO,iBAAiB,SAAS,QAAQ;AACzC,SAAO,MAAM;AACb,SAAO,QAAQ;AACf,MAAI,OAAO;AACT,WAAO,QAAQ;AAAA,EACjB;AAGA,cAAY;AACZ,WAAS,KAAK,YAAY,MAAM;AAClC;AACA,IAAM,uBAAN,MAAM,qBAAoB;AAgB1B;AAdI,qBAAK,OAAO,SAAS,4BAA4B,GAAG;AAClD,SAAO,KAAK,KAAK,sBAAqB;AACxC;AAGA,qBAAK,OAAyB,iBAAiB;AAAA,EAC7C,MAAM;AAAA,EACN,SAAS,CAAC,aAAa;AAAA,EACvB,SAAS,CAAC,aAAa;AACzB,CAAC;AAGD,qBAAK,OAAyB,iBAAiB,CAAC,CAAC;AAdrD,IAAM,sBAAN;AAAA,CAiBC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,qBAAqB,CAAC;AAAA,IAC5F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,SAAS,CAAC,aAAa;AAAA,MACvB,SAAS,CAAC,aAAa;AAAA,IACzB,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;",
  "names": []
}
