{
  "version": 3,
  "sources": ["../../../../../node_modules/can-use-dom/index.js", "../../../../../node_modules/simplebar-core/dist/index.mjs", "../../../../../node_modules/simplebar-angular/fesm2015/simplebar-angular.js"],
  "sourcesContent": ["var canUseDOM = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nmodule.exports = canUseDOM;", "/**\n * simplebar-core - v1.2.4\n * Scrollbars, simpler.\n * https://grsmto.github.io/simplebar/\n *\n * Made by Adrien Denat from a fork by Jonathan Nicol\n * Under MIT License\n */\n\nimport { throttle, debounce } from 'lodash-es';\nimport canUseDOM from 'can-use-dom';\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar cachedScrollbarWidth = null;\nvar cachedDevicePixelRatio = null;\nif (canUseDOM) {\n    window.addEventListener('resize', function () {\n        if (cachedDevicePixelRatio !== window.devicePixelRatio) {\n            cachedDevicePixelRatio = window.devicePixelRatio;\n            cachedScrollbarWidth = null;\n        }\n    });\n}\nfunction scrollbarWidth() {\n    if (cachedScrollbarWidth === null) {\n        if (typeof document === 'undefined') {\n            cachedScrollbarWidth = 0;\n            return cachedScrollbarWidth;\n        }\n        var body = document.body;\n        var box = document.createElement('div');\n        box.classList.add('simplebar-hide-scrollbar');\n        body.appendChild(box);\n        var width = box.getBoundingClientRect().right;\n        body.removeChild(box);\n        cachedScrollbarWidth = width;\n    }\n    return cachedScrollbarWidth;\n}\n\nfunction getElementWindow$1(element) {\n    if (!element ||\n        !element.ownerDocument ||\n        !element.ownerDocument.defaultView) {\n        return window;\n    }\n    return element.ownerDocument.defaultView;\n}\nfunction getElementDocument$1(element) {\n    if (!element || !element.ownerDocument) {\n        return document;\n    }\n    return element.ownerDocument;\n}\n// Helper function to retrieve options from element attributes\nvar getOptions$1 = function (obj) {\n    var initialObj = {};\n    var options = Array.prototype.reduce.call(obj, function (acc, attribute) {\n        var option = attribute.name.match(/data-simplebar-(.+)/);\n        if (option) {\n            var key = option[1].replace(/\\W+(.)/g, function (_, chr) { return chr.toUpperCase(); });\n            switch (attribute.value) {\n                case 'true':\n                    acc[key] = true;\n                    break;\n                case 'false':\n                    acc[key] = false;\n                    break;\n                case undefined:\n                    acc[key] = true;\n                    break;\n                default:\n                    acc[key] = attribute.value;\n            }\n        }\n        return acc;\n    }, initialObj);\n    return options;\n};\nfunction addClasses$1(el, classes) {\n    var _a;\n    if (!el)\n        return;\n    (_a = el.classList).add.apply(_a, classes.split(' '));\n}\nfunction removeClasses$1(el, classes) {\n    if (!el)\n        return;\n    classes.split(' ').forEach(function (className) {\n        el.classList.remove(className);\n    });\n}\nfunction classNamesToQuery$1(classNames) {\n    return \".\".concat(classNames.split(' ').join('.'));\n}\n\nvar helpers = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    getElementWindow: getElementWindow$1,\n    getElementDocument: getElementDocument$1,\n    getOptions: getOptions$1,\n    addClasses: addClasses$1,\n    removeClasses: removeClasses$1,\n    classNamesToQuery: classNamesToQuery$1\n});\n\nvar getElementWindow = getElementWindow$1, getElementDocument = getElementDocument$1, getOptions = getOptions$1, addClasses = addClasses$1, removeClasses = removeClasses$1, classNamesToQuery = classNamesToQuery$1;\nvar SimpleBarCore = /** @class */ (function () {\n    function SimpleBarCore(element, options) {\n        if (options === void 0) { options = {}; }\n        var _this = this;\n        this.removePreventClickId = null;\n        this.minScrollbarWidth = 20;\n        this.stopScrollDelay = 175;\n        this.isScrolling = false;\n        this.isMouseEntering = false;\n        this.scrollXTicking = false;\n        this.scrollYTicking = false;\n        this.wrapperEl = null;\n        this.contentWrapperEl = null;\n        this.contentEl = null;\n        this.offsetEl = null;\n        this.maskEl = null;\n        this.placeholderEl = null;\n        this.heightAutoObserverWrapperEl = null;\n        this.heightAutoObserverEl = null;\n        this.rtlHelpers = null;\n        this.scrollbarWidth = 0;\n        this.resizeObserver = null;\n        this.mutationObserver = null;\n        this.elStyles = null;\n        this.isRtl = null;\n        this.mouseX = 0;\n        this.mouseY = 0;\n        this.onMouseMove = function () { };\n        this.onWindowResize = function () { };\n        this.onStopScrolling = function () { };\n        this.onMouseEntered = function () { };\n        /**\n         * On scroll event handling\n         */\n        this.onScroll = function () {\n            var elWindow = getElementWindow(_this.el);\n            if (!_this.scrollXTicking) {\n                elWindow.requestAnimationFrame(_this.scrollX);\n                _this.scrollXTicking = true;\n            }\n            if (!_this.scrollYTicking) {\n                elWindow.requestAnimationFrame(_this.scrollY);\n                _this.scrollYTicking = true;\n            }\n            if (!_this.isScrolling) {\n                _this.isScrolling = true;\n                addClasses(_this.el, _this.classNames.scrolling);\n            }\n            _this.showScrollbar('x');\n            _this.showScrollbar('y');\n            _this.onStopScrolling();\n        };\n        this.scrollX = function () {\n            if (_this.axis.x.isOverflowing) {\n                _this.positionScrollbar('x');\n            }\n            _this.scrollXTicking = false;\n        };\n        this.scrollY = function () {\n            if (_this.axis.y.isOverflowing) {\n                _this.positionScrollbar('y');\n            }\n            _this.scrollYTicking = false;\n        };\n        this._onStopScrolling = function () {\n            removeClasses(_this.el, _this.classNames.scrolling);\n            if (_this.options.autoHide) {\n                _this.hideScrollbar('x');\n                _this.hideScrollbar('y');\n            }\n            _this.isScrolling = false;\n        };\n        this.onMouseEnter = function () {\n            if (!_this.isMouseEntering) {\n                addClasses(_this.el, _this.classNames.mouseEntered);\n                _this.showScrollbar('x');\n                _this.showScrollbar('y');\n                _this.isMouseEntering = true;\n            }\n            _this.onMouseEntered();\n        };\n        this._onMouseEntered = function () {\n            removeClasses(_this.el, _this.classNames.mouseEntered);\n            if (_this.options.autoHide) {\n                _this.hideScrollbar('x');\n                _this.hideScrollbar('y');\n            }\n            _this.isMouseEntering = false;\n        };\n        this._onMouseMove = function (e) {\n            _this.mouseX = e.clientX;\n            _this.mouseY = e.clientY;\n            if (_this.axis.x.isOverflowing || _this.axis.x.forceVisible) {\n                _this.onMouseMoveForAxis('x');\n            }\n            if (_this.axis.y.isOverflowing || _this.axis.y.forceVisible) {\n                _this.onMouseMoveForAxis('y');\n            }\n        };\n        this.onMouseLeave = function () {\n            _this.onMouseMove.cancel();\n            if (_this.axis.x.isOverflowing || _this.axis.x.forceVisible) {\n                _this.onMouseLeaveForAxis('x');\n            }\n            if (_this.axis.y.isOverflowing || _this.axis.y.forceVisible) {\n                _this.onMouseLeaveForAxis('y');\n            }\n            _this.mouseX = -1;\n            _this.mouseY = -1;\n        };\n        this._onWindowResize = function () {\n            // Recalculate scrollbarWidth in case it's a zoom\n            _this.scrollbarWidth = _this.getScrollbarWidth();\n            _this.hideNativeScrollbar();\n        };\n        this.onPointerEvent = function (e) {\n            if (!_this.axis.x.track.el ||\n                !_this.axis.y.track.el ||\n                !_this.axis.x.scrollbar.el ||\n                !_this.axis.y.scrollbar.el)\n                return;\n            var isWithinTrackXBounds, isWithinTrackYBounds;\n            _this.axis.x.track.rect = _this.axis.x.track.el.getBoundingClientRect();\n            _this.axis.y.track.rect = _this.axis.y.track.el.getBoundingClientRect();\n            if (_this.axis.x.isOverflowing || _this.axis.x.forceVisible) {\n                isWithinTrackXBounds = _this.isWithinBounds(_this.axis.x.track.rect);\n            }\n            if (_this.axis.y.isOverflowing || _this.axis.y.forceVisible) {\n                isWithinTrackYBounds = _this.isWithinBounds(_this.axis.y.track.rect);\n            }\n            // If any pointer event is called on the scrollbar\n            if (isWithinTrackXBounds || isWithinTrackYBounds) {\n                // Prevent event leaking\n                e.stopPropagation();\n                if (e.type === 'pointerdown' && e.pointerType !== 'touch') {\n                    if (isWithinTrackXBounds) {\n                        _this.axis.x.scrollbar.rect =\n                            _this.axis.x.scrollbar.el.getBoundingClientRect();\n                        if (_this.isWithinBounds(_this.axis.x.scrollbar.rect)) {\n                            _this.onDragStart(e, 'x');\n                        }\n                        else {\n                            _this.onTrackClick(e, 'x');\n                        }\n                    }\n                    if (isWithinTrackYBounds) {\n                        _this.axis.y.scrollbar.rect =\n                            _this.axis.y.scrollbar.el.getBoundingClientRect();\n                        if (_this.isWithinBounds(_this.axis.y.scrollbar.rect)) {\n                            _this.onDragStart(e, 'y');\n                        }\n                        else {\n                            _this.onTrackClick(e, 'y');\n                        }\n                    }\n                }\n            }\n        };\n        /**\n         * Drag scrollbar handle\n         */\n        this.drag = function (e) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n            if (!_this.draggedAxis || !_this.contentWrapperEl)\n                return;\n            var eventOffset;\n            var track = _this.axis[_this.draggedAxis].track;\n            var trackSize = (_b = (_a = track.rect) === null || _a === void 0 ? void 0 : _a[_this.axis[_this.draggedAxis].sizeAttr]) !== null && _b !== void 0 ? _b : 0;\n            var scrollbar = _this.axis[_this.draggedAxis].scrollbar;\n            var contentSize = (_d = (_c = _this.contentWrapperEl) === null || _c === void 0 ? void 0 : _c[_this.axis[_this.draggedAxis].scrollSizeAttr]) !== null && _d !== void 0 ? _d : 0;\n            var hostSize = parseInt((_f = (_e = _this.elStyles) === null || _e === void 0 ? void 0 : _e[_this.axis[_this.draggedAxis].sizeAttr]) !== null && _f !== void 0 ? _f : '0px', 10);\n            e.preventDefault();\n            e.stopPropagation();\n            if (_this.draggedAxis === 'y') {\n                eventOffset = e.pageY;\n            }\n            else {\n                eventOffset = e.pageX;\n            }\n            // Calculate how far the user's mouse is from the top/left of the scrollbar (minus the dragOffset).\n            var dragPos = eventOffset -\n                ((_h = (_g = track.rect) === null || _g === void 0 ? void 0 : _g[_this.axis[_this.draggedAxis].offsetAttr]) !== null && _h !== void 0 ? _h : 0) -\n                _this.axis[_this.draggedAxis].dragOffset;\n            dragPos = _this.draggedAxis === 'x' && _this.isRtl\n                ? ((_k = (_j = track.rect) === null || _j === void 0 ? void 0 : _j[_this.axis[_this.draggedAxis].sizeAttr]) !== null && _k !== void 0 ? _k : 0) -\n                    scrollbar.size -\n                    dragPos\n                : dragPos;\n            // Convert the mouse position into a percentage of the scrollbar height/width.\n            var dragPerc = dragPos / (trackSize - scrollbar.size);\n            // Scroll the content by the same percentage.\n            var scrollPos = dragPerc * (contentSize - hostSize);\n            // Fix browsers inconsistency on RTL\n            if (_this.draggedAxis === 'x' && _this.isRtl) {\n                scrollPos = ((_l = SimpleBarCore.getRtlHelpers()) === null || _l === void 0 ? void 0 : _l.isScrollingToNegative)\n                    ? -scrollPos\n                    : scrollPos;\n            }\n            _this.contentWrapperEl[_this.axis[_this.draggedAxis].scrollOffsetAttr] =\n                scrollPos;\n        };\n        /**\n         * End scroll handle drag\n         */\n        this.onEndDrag = function (e) {\n            var elDocument = getElementDocument(_this.el);\n            var elWindow = getElementWindow(_this.el);\n            e.preventDefault();\n            e.stopPropagation();\n            removeClasses(_this.el, _this.classNames.dragging);\n            elDocument.removeEventListener('mousemove', _this.drag, true);\n            elDocument.removeEventListener('mouseup', _this.onEndDrag, true);\n            _this.removePreventClickId = elWindow.setTimeout(function () {\n                // Remove these asynchronously so we still suppress click events\n                // generated simultaneously with mouseup.\n                elDocument.removeEventListener('click', _this.preventClick, true);\n                elDocument.removeEventListener('dblclick', _this.preventClick, true);\n                _this.removePreventClickId = null;\n            });\n        };\n        /**\n         * Handler to ignore click events during drag\n         */\n        this.preventClick = function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n        };\n        this.el = element;\n        this.options = __assign(__assign({}, SimpleBarCore.defaultOptions), options);\n        this.classNames = __assign(__assign({}, SimpleBarCore.defaultOptions.classNames), options.classNames);\n        this.axis = {\n            x: {\n                scrollOffsetAttr: 'scrollLeft',\n                sizeAttr: 'width',\n                scrollSizeAttr: 'scrollWidth',\n                offsetSizeAttr: 'offsetWidth',\n                offsetAttr: 'left',\n                overflowAttr: 'overflowX',\n                dragOffset: 0,\n                isOverflowing: true,\n                forceVisible: false,\n                track: { size: null, el: null, rect: null, isVisible: false },\n                scrollbar: { size: null, el: null, rect: null, isVisible: false }\n            },\n            y: {\n                scrollOffsetAttr: 'scrollTop',\n                sizeAttr: 'height',\n                scrollSizeAttr: 'scrollHeight',\n                offsetSizeAttr: 'offsetHeight',\n                offsetAttr: 'top',\n                overflowAttr: 'overflowY',\n                dragOffset: 0,\n                isOverflowing: true,\n                forceVisible: false,\n                track: { size: null, el: null, rect: null, isVisible: false },\n                scrollbar: { size: null, el: null, rect: null, isVisible: false }\n            }\n        };\n        if (typeof this.el !== 'object' || !this.el.nodeName) {\n            throw new Error(\"Argument passed to SimpleBar must be an HTML element instead of \".concat(this.el));\n        }\n        this.onMouseMove = throttle(this._onMouseMove, 64);\n        this.onWindowResize = debounce(this._onWindowResize, 64, { leading: true });\n        this.onStopScrolling = debounce(this._onStopScrolling, this.stopScrollDelay);\n        this.onMouseEntered = debounce(this._onMouseEntered, this.stopScrollDelay);\n        this.init();\n    }\n    /**\n     * Helper to fix browsers inconsistency on RTL:\n     *  - Firefox inverts the scrollbar initial position\n     *  - IE11 inverts both scrollbar position and scrolling offset\n     * Directly inspired by @KingSora's OverlayScrollbars https://github.com/KingSora/OverlayScrollbars/blob/master/js/OverlayScrollbars.js#L1634\n     */\n    SimpleBarCore.getRtlHelpers = function () {\n        if (SimpleBarCore.rtlHelpers) {\n            return SimpleBarCore.rtlHelpers;\n        }\n        var dummyDiv = document.createElement('div');\n        dummyDiv.innerHTML =\n            '<div class=\"simplebar-dummy-scrollbar-size\"><div></div></div>';\n        var scrollbarDummyEl = dummyDiv.firstElementChild;\n        var dummyChild = scrollbarDummyEl === null || scrollbarDummyEl === void 0 ? void 0 : scrollbarDummyEl.firstElementChild;\n        if (!dummyChild)\n            return null;\n        document.body.appendChild(scrollbarDummyEl);\n        scrollbarDummyEl.scrollLeft = 0;\n        var dummyContainerOffset = SimpleBarCore.getOffset(scrollbarDummyEl);\n        var dummyChildOffset = SimpleBarCore.getOffset(dummyChild);\n        scrollbarDummyEl.scrollLeft = -999;\n        var dummyChildOffsetAfterScroll = SimpleBarCore.getOffset(dummyChild);\n        document.body.removeChild(scrollbarDummyEl);\n        SimpleBarCore.rtlHelpers = {\n            // determines if the scrolling is responding with negative values\n            isScrollOriginAtZero: dummyContainerOffset.left !== dummyChildOffset.left,\n            // determines if the origin scrollbar position is inverted or not (positioned on left or right)\n            isScrollingToNegative: dummyChildOffset.left !== dummyChildOffsetAfterScroll.left\n        };\n        return SimpleBarCore.rtlHelpers;\n    };\n    SimpleBarCore.prototype.getScrollbarWidth = function () {\n        // Try/catch for FF 56 throwing on undefined computedStyles\n        try {\n            // Detect browsers supporting CSS scrollbar styling and do not calculate\n            if ((this.contentWrapperEl &&\n                getComputedStyle(this.contentWrapperEl, '::-webkit-scrollbar')\n                    .display === 'none') ||\n                'scrollbarWidth' in document.documentElement.style ||\n                '-ms-overflow-style' in document.documentElement.style) {\n                return 0;\n            }\n            else {\n                return scrollbarWidth();\n            }\n        }\n        catch (e) {\n            return scrollbarWidth();\n        }\n    };\n    SimpleBarCore.getOffset = function (el) {\n        var rect = el.getBoundingClientRect();\n        var elDocument = getElementDocument(el);\n        var elWindow = getElementWindow(el);\n        return {\n            top: rect.top +\n                (elWindow.pageYOffset || elDocument.documentElement.scrollTop),\n            left: rect.left +\n                (elWindow.pageXOffset || elDocument.documentElement.scrollLeft)\n        };\n    };\n    SimpleBarCore.prototype.init = function () {\n        // We stop here on server-side\n        if (canUseDOM) {\n            this.initDOM();\n            this.rtlHelpers = SimpleBarCore.getRtlHelpers();\n            this.scrollbarWidth = this.getScrollbarWidth();\n            this.recalculate();\n            this.initListeners();\n        }\n    };\n    SimpleBarCore.prototype.initDOM = function () {\n        var _a, _b;\n        // assume that element has his DOM already initiated\n        this.wrapperEl = this.el.querySelector(classNamesToQuery(this.classNames.wrapper));\n        this.contentWrapperEl =\n            this.options.scrollableNode ||\n                this.el.querySelector(classNamesToQuery(this.classNames.contentWrapper));\n        this.contentEl =\n            this.options.contentNode ||\n                this.el.querySelector(classNamesToQuery(this.classNames.contentEl));\n        this.offsetEl = this.el.querySelector(classNamesToQuery(this.classNames.offset));\n        this.maskEl = this.el.querySelector(classNamesToQuery(this.classNames.mask));\n        this.placeholderEl = this.findChild(this.wrapperEl, classNamesToQuery(this.classNames.placeholder));\n        this.heightAutoObserverWrapperEl = this.el.querySelector(classNamesToQuery(this.classNames.heightAutoObserverWrapperEl));\n        this.heightAutoObserverEl = this.el.querySelector(classNamesToQuery(this.classNames.heightAutoObserverEl));\n        this.axis.x.track.el = this.findChild(this.el, \"\".concat(classNamesToQuery(this.classNames.track)).concat(classNamesToQuery(this.classNames.horizontal)));\n        this.axis.y.track.el = this.findChild(this.el, \"\".concat(classNamesToQuery(this.classNames.track)).concat(classNamesToQuery(this.classNames.vertical)));\n        this.axis.x.scrollbar.el =\n            ((_a = this.axis.x.track.el) === null || _a === void 0 ? void 0 : _a.querySelector(classNamesToQuery(this.classNames.scrollbar))) || null;\n        this.axis.y.scrollbar.el =\n            ((_b = this.axis.y.track.el) === null || _b === void 0 ? void 0 : _b.querySelector(classNamesToQuery(this.classNames.scrollbar))) || null;\n        if (!this.options.autoHide) {\n            addClasses(this.axis.x.scrollbar.el, this.classNames.visible);\n            addClasses(this.axis.y.scrollbar.el, this.classNames.visible);\n        }\n    };\n    SimpleBarCore.prototype.initListeners = function () {\n        var _this = this;\n        var _a;\n        var elWindow = getElementWindow(this.el);\n        // Event listeners\n        this.el.addEventListener('mouseenter', this.onMouseEnter);\n        this.el.addEventListener('pointerdown', this.onPointerEvent, true);\n        this.el.addEventListener('mousemove', this.onMouseMove);\n        this.el.addEventListener('mouseleave', this.onMouseLeave);\n        (_a = this.contentWrapperEl) === null || _a === void 0 ? void 0 : _a.addEventListener('scroll', this.onScroll);\n        // Browser zoom triggers a window resize\n        elWindow.addEventListener('resize', this.onWindowResize);\n        if (!this.contentEl)\n            return;\n        if (window.ResizeObserver) {\n            // Hack for https://github.com/WICG/ResizeObserver/issues/38\n            var resizeObserverStarted_1 = false;\n            var resizeObserver = elWindow.ResizeObserver || ResizeObserver;\n            this.resizeObserver = new resizeObserver(function () {\n                if (!resizeObserverStarted_1)\n                    return;\n                elWindow.requestAnimationFrame(function () {\n                    _this.recalculate();\n                });\n            });\n            this.resizeObserver.observe(this.el);\n            this.resizeObserver.observe(this.contentEl);\n            elWindow.requestAnimationFrame(function () {\n                resizeObserverStarted_1 = true;\n            });\n        }\n        // This is required to detect horizontal scroll. Vertical scroll only needs the resizeObserver.\n        this.mutationObserver = new elWindow.MutationObserver(function () {\n            elWindow.requestAnimationFrame(function () {\n                _this.recalculate();\n            });\n        });\n        this.mutationObserver.observe(this.contentEl, {\n            childList: true,\n            subtree: true,\n            characterData: true\n        });\n    };\n    SimpleBarCore.prototype.recalculate = function () {\n        if (!this.heightAutoObserverEl ||\n            !this.contentEl ||\n            !this.contentWrapperEl ||\n            !this.wrapperEl ||\n            !this.placeholderEl)\n            return;\n        var elWindow = getElementWindow(this.el);\n        this.elStyles = elWindow.getComputedStyle(this.el);\n        this.isRtl = this.elStyles.direction === 'rtl';\n        var contentElOffsetWidth = this.contentEl.offsetWidth;\n        var isHeightAuto = this.heightAutoObserverEl.offsetHeight <= 1;\n        var isWidthAuto = this.heightAutoObserverEl.offsetWidth <= 1 || contentElOffsetWidth > 0;\n        var contentWrapperElOffsetWidth = this.contentWrapperEl.offsetWidth;\n        var elOverflowX = this.elStyles.overflowX;\n        var elOverflowY = this.elStyles.overflowY;\n        this.contentEl.style.padding = \"\".concat(this.elStyles.paddingTop, \" \").concat(this.elStyles.paddingRight, \" \").concat(this.elStyles.paddingBottom, \" \").concat(this.elStyles.paddingLeft);\n        this.wrapperEl.style.margin = \"-\".concat(this.elStyles.paddingTop, \" -\").concat(this.elStyles.paddingRight, \" -\").concat(this.elStyles.paddingBottom, \" -\").concat(this.elStyles.paddingLeft);\n        var contentElScrollHeight = this.contentEl.scrollHeight;\n        var contentElScrollWidth = this.contentEl.scrollWidth;\n        this.contentWrapperEl.style.height = isHeightAuto ? 'auto' : '100%';\n        // Determine placeholder size\n        this.placeholderEl.style.width = isWidthAuto\n            ? \"\".concat(contentElOffsetWidth || contentElScrollWidth, \"px\")\n            : 'auto';\n        this.placeholderEl.style.height = \"\".concat(contentElScrollHeight, \"px\");\n        var contentWrapperElOffsetHeight = this.contentWrapperEl.offsetHeight;\n        this.axis.x.isOverflowing =\n            contentElOffsetWidth !== 0 && contentElScrollWidth > contentElOffsetWidth;\n        this.axis.y.isOverflowing =\n            contentElScrollHeight > contentWrapperElOffsetHeight;\n        // Set isOverflowing to false if user explicitely set hidden overflow\n        this.axis.x.isOverflowing =\n            elOverflowX === 'hidden' ? false : this.axis.x.isOverflowing;\n        this.axis.y.isOverflowing =\n            elOverflowY === 'hidden' ? false : this.axis.y.isOverflowing;\n        this.axis.x.forceVisible =\n            this.options.forceVisible === 'x' || this.options.forceVisible === true;\n        this.axis.y.forceVisible =\n            this.options.forceVisible === 'y' || this.options.forceVisible === true;\n        this.hideNativeScrollbar();\n        // Set isOverflowing to false if scrollbar is not necessary (content is shorter than offset)\n        var offsetForXScrollbar = this.axis.x.isOverflowing\n            ? this.scrollbarWidth\n            : 0;\n        var offsetForYScrollbar = this.axis.y.isOverflowing\n            ? this.scrollbarWidth\n            : 0;\n        this.axis.x.isOverflowing =\n            this.axis.x.isOverflowing &&\n                contentElScrollWidth > contentWrapperElOffsetWidth - offsetForYScrollbar;\n        this.axis.y.isOverflowing =\n            this.axis.y.isOverflowing &&\n                contentElScrollHeight >\n                    contentWrapperElOffsetHeight - offsetForXScrollbar;\n        this.axis.x.scrollbar.size = this.getScrollbarSize('x');\n        this.axis.y.scrollbar.size = this.getScrollbarSize('y');\n        if (this.axis.x.scrollbar.el)\n            this.axis.x.scrollbar.el.style.width = \"\".concat(this.axis.x.scrollbar.size, \"px\");\n        if (this.axis.y.scrollbar.el)\n            this.axis.y.scrollbar.el.style.height = \"\".concat(this.axis.y.scrollbar.size, \"px\");\n        this.positionScrollbar('x');\n        this.positionScrollbar('y');\n        this.toggleTrackVisibility('x');\n        this.toggleTrackVisibility('y');\n    };\n    /**\n     * Calculate scrollbar size\n     */\n    SimpleBarCore.prototype.getScrollbarSize = function (axis) {\n        var _a, _b;\n        if (axis === void 0) { axis = 'y'; }\n        if (!this.axis[axis].isOverflowing || !this.contentEl) {\n            return 0;\n        }\n        var contentSize = this.contentEl[this.axis[axis].scrollSizeAttr];\n        var trackSize = (_b = (_a = this.axis[axis].track.el) === null || _a === void 0 ? void 0 : _a[this.axis[axis].offsetSizeAttr]) !== null && _b !== void 0 ? _b : 0;\n        var scrollbarRatio = trackSize / contentSize;\n        var scrollbarSize;\n        // Calculate new height/position of drag handle.\n        scrollbarSize = Math.max(~~(scrollbarRatio * trackSize), this.options.scrollbarMinSize);\n        if (this.options.scrollbarMaxSize) {\n            scrollbarSize = Math.min(scrollbarSize, this.options.scrollbarMaxSize);\n        }\n        return scrollbarSize;\n    };\n    SimpleBarCore.prototype.positionScrollbar = function (axis) {\n        var _a, _b, _c;\n        if (axis === void 0) { axis = 'y'; }\n        var scrollbar = this.axis[axis].scrollbar;\n        if (!this.axis[axis].isOverflowing ||\n            !this.contentWrapperEl ||\n            !scrollbar.el ||\n            !this.elStyles) {\n            return;\n        }\n        var contentSize = this.contentWrapperEl[this.axis[axis].scrollSizeAttr];\n        var trackSize = ((_a = this.axis[axis].track.el) === null || _a === void 0 ? void 0 : _a[this.axis[axis].offsetSizeAttr]) || 0;\n        var hostSize = parseInt(this.elStyles[this.axis[axis].sizeAttr], 10);\n        var scrollOffset = this.contentWrapperEl[this.axis[axis].scrollOffsetAttr];\n        scrollOffset =\n            axis === 'x' &&\n                this.isRtl &&\n                ((_b = SimpleBarCore.getRtlHelpers()) === null || _b === void 0 ? void 0 : _b.isScrollOriginAtZero)\n                ? -scrollOffset\n                : scrollOffset;\n        if (axis === 'x' && this.isRtl) {\n            scrollOffset = ((_c = SimpleBarCore.getRtlHelpers()) === null || _c === void 0 ? void 0 : _c.isScrollingToNegative)\n                ? scrollOffset\n                : -scrollOffset;\n        }\n        var scrollPourcent = scrollOffset / (contentSize - hostSize);\n        var handleOffset = ~~((trackSize - scrollbar.size) * scrollPourcent);\n        handleOffset =\n            axis === 'x' && this.isRtl\n                ? -handleOffset + (trackSize - scrollbar.size)\n                : handleOffset;\n        scrollbar.el.style.transform =\n            axis === 'x'\n                ? \"translate3d(\".concat(handleOffset, \"px, 0, 0)\")\n                : \"translate3d(0, \".concat(handleOffset, \"px, 0)\");\n    };\n    SimpleBarCore.prototype.toggleTrackVisibility = function (axis) {\n        if (axis === void 0) { axis = 'y'; }\n        var track = this.axis[axis].track.el;\n        var scrollbar = this.axis[axis].scrollbar.el;\n        if (!track || !scrollbar || !this.contentWrapperEl)\n            return;\n        if (this.axis[axis].isOverflowing || this.axis[axis].forceVisible) {\n            track.style.visibility = 'visible';\n            this.contentWrapperEl.style[this.axis[axis].overflowAttr] = 'scroll';\n            this.el.classList.add(\"\".concat(this.classNames.scrollable, \"-\").concat(axis));\n        }\n        else {\n            track.style.visibility = 'hidden';\n            this.contentWrapperEl.style[this.axis[axis].overflowAttr] = 'hidden';\n            this.el.classList.remove(\"\".concat(this.classNames.scrollable, \"-\").concat(axis));\n        }\n        // Even if forceVisible is enabled, scrollbar itself should be hidden\n        if (this.axis[axis].isOverflowing) {\n            scrollbar.style.display = 'block';\n        }\n        else {\n            scrollbar.style.display = 'none';\n        }\n    };\n    SimpleBarCore.prototype.showScrollbar = function (axis) {\n        if (axis === void 0) { axis = 'y'; }\n        if (this.axis[axis].isOverflowing && !this.axis[axis].scrollbar.isVisible) {\n            addClasses(this.axis[axis].scrollbar.el, this.classNames.visible);\n            this.axis[axis].scrollbar.isVisible = true;\n        }\n    };\n    SimpleBarCore.prototype.hideScrollbar = function (axis) {\n        if (axis === void 0) { axis = 'y'; }\n        if (this.axis[axis].isOverflowing && this.axis[axis].scrollbar.isVisible) {\n            removeClasses(this.axis[axis].scrollbar.el, this.classNames.visible);\n            this.axis[axis].scrollbar.isVisible = false;\n        }\n    };\n    SimpleBarCore.prototype.hideNativeScrollbar = function () {\n        if (!this.offsetEl)\n            return;\n        this.offsetEl.style[this.isRtl ? 'left' : 'right'] =\n            this.axis.y.isOverflowing || this.axis.y.forceVisible\n                ? \"-\".concat(this.scrollbarWidth, \"px\")\n                : '0px';\n        this.offsetEl.style.bottom =\n            this.axis.x.isOverflowing || this.axis.x.forceVisible\n                ? \"-\".concat(this.scrollbarWidth, \"px\")\n                : '0px';\n    };\n    SimpleBarCore.prototype.onMouseMoveForAxis = function (axis) {\n        if (axis === void 0) { axis = 'y'; }\n        var currentAxis = this.axis[axis];\n        if (!currentAxis.track.el || !currentAxis.scrollbar.el)\n            return;\n        currentAxis.track.rect = currentAxis.track.el.getBoundingClientRect();\n        currentAxis.scrollbar.rect =\n            currentAxis.scrollbar.el.getBoundingClientRect();\n        if (this.isWithinBounds(currentAxis.track.rect)) {\n            this.showScrollbar(axis);\n            addClasses(currentAxis.track.el, this.classNames.hover);\n            if (this.isWithinBounds(currentAxis.scrollbar.rect)) {\n                addClasses(currentAxis.scrollbar.el, this.classNames.hover);\n            }\n            else {\n                removeClasses(currentAxis.scrollbar.el, this.classNames.hover);\n            }\n        }\n        else {\n            removeClasses(currentAxis.track.el, this.classNames.hover);\n            if (this.options.autoHide) {\n                this.hideScrollbar(axis);\n            }\n        }\n    };\n    SimpleBarCore.prototype.onMouseLeaveForAxis = function (axis) {\n        if (axis === void 0) { axis = 'y'; }\n        removeClasses(this.axis[axis].track.el, this.classNames.hover);\n        removeClasses(this.axis[axis].scrollbar.el, this.classNames.hover);\n        if (this.options.autoHide) {\n            this.hideScrollbar(axis);\n        }\n    };\n    /**\n     * on scrollbar handle drag movement starts\n     */\n    SimpleBarCore.prototype.onDragStart = function (e, axis) {\n        var _a;\n        if (axis === void 0) { axis = 'y'; }\n        var elDocument = getElementDocument(this.el);\n        var elWindow = getElementWindow(this.el);\n        var scrollbar = this.axis[axis].scrollbar;\n        // Measure how far the user's mouse is from the top of the scrollbar drag handle.\n        var eventOffset = axis === 'y' ? e.pageY : e.pageX;\n        this.axis[axis].dragOffset =\n            eventOffset - (((_a = scrollbar.rect) === null || _a === void 0 ? void 0 : _a[this.axis[axis].offsetAttr]) || 0);\n        this.draggedAxis = axis;\n        addClasses(this.el, this.classNames.dragging);\n        elDocument.addEventListener('mousemove', this.drag, true);\n        elDocument.addEventListener('mouseup', this.onEndDrag, true);\n        if (this.removePreventClickId === null) {\n            elDocument.addEventListener('click', this.preventClick, true);\n            elDocument.addEventListener('dblclick', this.preventClick, true);\n        }\n        else {\n            elWindow.clearTimeout(this.removePreventClickId);\n            this.removePreventClickId = null;\n        }\n    };\n    SimpleBarCore.prototype.onTrackClick = function (e, axis) {\n        var _this = this;\n        var _a, _b, _c, _d;\n        if (axis === void 0) { axis = 'y'; }\n        var currentAxis = this.axis[axis];\n        if (!this.options.clickOnTrack ||\n            !currentAxis.scrollbar.el ||\n            !this.contentWrapperEl)\n            return;\n        // Preventing the event's default to trigger click underneath\n        e.preventDefault();\n        var elWindow = getElementWindow(this.el);\n        this.axis[axis].scrollbar.rect =\n            currentAxis.scrollbar.el.getBoundingClientRect();\n        var scrollbar = this.axis[axis].scrollbar;\n        var scrollbarOffset = (_b = (_a = scrollbar.rect) === null || _a === void 0 ? void 0 : _a[this.axis[axis].offsetAttr]) !== null && _b !== void 0 ? _b : 0;\n        var hostSize = parseInt((_d = (_c = this.elStyles) === null || _c === void 0 ? void 0 : _c[this.axis[axis].sizeAttr]) !== null && _d !== void 0 ? _d : '0px', 10);\n        var scrolled = this.contentWrapperEl[this.axis[axis].scrollOffsetAttr];\n        var t = axis === 'y'\n            ? this.mouseY - scrollbarOffset\n            : this.mouseX - scrollbarOffset;\n        var dir = t < 0 ? -1 : 1;\n        var scrollSize = dir === -1 ? scrolled - hostSize : scrolled + hostSize;\n        var speed = 40;\n        var scrollTo = function () {\n            if (!_this.contentWrapperEl)\n                return;\n            if (dir === -1) {\n                if (scrolled > scrollSize) {\n                    scrolled -= speed;\n                    _this.contentWrapperEl[_this.axis[axis].scrollOffsetAttr] = scrolled;\n                    elWindow.requestAnimationFrame(scrollTo);\n                }\n            }\n            else {\n                if (scrolled < scrollSize) {\n                    scrolled += speed;\n                    _this.contentWrapperEl[_this.axis[axis].scrollOffsetAttr] = scrolled;\n                    elWindow.requestAnimationFrame(scrollTo);\n                }\n            }\n        };\n        scrollTo();\n    };\n    /**\n     * Getter for content element\n     */\n    SimpleBarCore.prototype.getContentElement = function () {\n        return this.contentEl;\n    };\n    /**\n     * Getter for original scrolling element\n     */\n    SimpleBarCore.prototype.getScrollElement = function () {\n        return this.contentWrapperEl;\n    };\n    SimpleBarCore.prototype.removeListeners = function () {\n        var elWindow = getElementWindow(this.el);\n        // Event listeners\n        this.el.removeEventListener('mouseenter', this.onMouseEnter);\n        this.el.removeEventListener('pointerdown', this.onPointerEvent, true);\n        this.el.removeEventListener('mousemove', this.onMouseMove);\n        this.el.removeEventListener('mouseleave', this.onMouseLeave);\n        if (this.contentWrapperEl) {\n            this.contentWrapperEl.removeEventListener('scroll', this.onScroll);\n        }\n        elWindow.removeEventListener('resize', this.onWindowResize);\n        if (this.mutationObserver) {\n            this.mutationObserver.disconnect();\n        }\n        if (this.resizeObserver) {\n            this.resizeObserver.disconnect();\n        }\n        // Cancel all debounced functions\n        this.onMouseMove.cancel();\n        this.onWindowResize.cancel();\n        this.onStopScrolling.cancel();\n        this.onMouseEntered.cancel();\n    };\n    /**\n     * Remove all listeners from DOM nodes\n     */\n    SimpleBarCore.prototype.unMount = function () {\n        this.removeListeners();\n    };\n    /**\n     * Check if mouse is within bounds\n     */\n    SimpleBarCore.prototype.isWithinBounds = function (bbox) {\n        return (this.mouseX >= bbox.left &&\n            this.mouseX <= bbox.left + bbox.width &&\n            this.mouseY >= bbox.top &&\n            this.mouseY <= bbox.top + bbox.height);\n    };\n    /**\n     * Find element children matches query\n     */\n    SimpleBarCore.prototype.findChild = function (el, query) {\n        var matches = el.matches ||\n            el.webkitMatchesSelector ||\n            el.mozMatchesSelector ||\n            el.msMatchesSelector;\n        return Array.prototype.filter.call(el.children, function (child) {\n            return matches.call(child, query);\n        })[0];\n    };\n    SimpleBarCore.rtlHelpers = null;\n    SimpleBarCore.defaultOptions = {\n        forceVisible: false,\n        clickOnTrack: true,\n        scrollbarMinSize: 25,\n        scrollbarMaxSize: 0,\n        ariaLabel: 'scrollable content',\n        classNames: {\n            contentEl: 'simplebar-content',\n            contentWrapper: 'simplebar-content-wrapper',\n            offset: 'simplebar-offset',\n            mask: 'simplebar-mask',\n            wrapper: 'simplebar-wrapper',\n            placeholder: 'simplebar-placeholder',\n            scrollbar: 'simplebar-scrollbar',\n            track: 'simplebar-track',\n            heightAutoObserverWrapperEl: 'simplebar-height-auto-observer-wrapper',\n            heightAutoObserverEl: 'simplebar-height-auto-observer',\n            visible: 'simplebar-visible',\n            horizontal: 'simplebar-horizontal',\n            vertical: 'simplebar-vertical',\n            hover: 'simplebar-hover',\n            dragging: 'simplebar-dragging',\n            scrolling: 'simplebar-scrolling',\n            scrollable: 'simplebar-scrollable',\n            mouseEntered: 'simplebar-mouse-entered'\n        },\n        scrollableNode: null,\n        contentNode: null,\n        autoHide: true\n    };\n    /**\n     * Static functions\n     */\n    SimpleBarCore.getOptions = getOptions;\n    SimpleBarCore.helpers = helpers;\n    return SimpleBarCore;\n}());\n\nexport { SimpleBarCore as default };\n\n", "import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, Input, NgModule } from '@angular/core';\nimport SimpleBar from 'simplebar-core';\nconst _c0 = [\"*\"];\nclass SimplebarAngularComponent {\n  constructor(elRef, zone) {\n    this.zone = zone;\n    this.options = {};\n    this.elRef = elRef;\n    this.ariaLabel = this.options.ariaLabel || SimpleBar.defaultOptions.ariaLabel;\n  }\n  ngOnInit() {}\n  ngAfterViewInit() {\n    this.zone.runOutsideAngular(() => {\n      this.SimpleBar = new SimpleBar(this.elRef.nativeElement, this.options || {});\n    });\n  }\n  ngOnDestroy() {\n    this.SimpleBar.unMount();\n    this.SimpleBar = null;\n  }\n}\nSimplebarAngularComponent.ɵfac = function SimplebarAngularComponent_Factory(t) {\n  return new (t || SimplebarAngularComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nSimplebarAngularComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SimplebarAngularComponent,\n  selectors: [[\"ngx-simplebar\"]],\n  hostAttrs: [\"data-simplebar\", \"init\"],\n  inputs: {\n    options: \"options\"\n  },\n  ngContentSelectors: _c0,\n  decls: 13,\n  vars: 1,\n  consts: [[1, \"simplebar-wrapper\"], [1, \"simplebar-height-auto-observer-wrapper\"], [1, \"simplebar-height-auto-observer\"], [1, \"simplebar-mask\"], [1, \"simplebar-offset\"], [\"tabIndex\", \"0\", \"role\", \"region\", 1, \"simplebar-content-wrapper\"], [1, \"simplebar-content\"], [1, \"simplebar-placeholder\"], [1, \"simplebar-track\", \"simplebar-horizontal\"], [1, \"simplebar-scrollbar\"], [1, \"simplebar-track\", \"simplebar-vertical\"]],\n  template: function SimplebarAngularComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6);\n      i0.ɵɵprojection(7);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelement(8, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 8);\n      i0.ɵɵelement(10, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 10);\n      i0.ɵɵelement(12, \"div\", 9);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel);\n    }\n  },\n  styles: [\"[data-simplebar]{position:relative;flex-direction:column;flex-wrap:wrap;justify-content:flex-start;align-content:flex-start;align-items:flex-start}.simplebar-wrapper{overflow:hidden;width:inherit;height:inherit;max-width:inherit;max-height:inherit}.simplebar-mask{direction:inherit;position:absolute;overflow:hidden;padding:0;margin:0;left:0;top:0;bottom:0;right:0;width:auto!important;height:auto!important;z-index:0}.simplebar-offset{direction:inherit!important;box-sizing:inherit!important;resize:none!important;position:absolute;top:0;left:0;bottom:0;right:0;padding:0;margin:0;-webkit-overflow-scrolling:touch}.simplebar-content-wrapper{direction:inherit;box-sizing:border-box!important;position:relative;display:block;height:100%;width:auto;max-width:100%;max-height:100%;overflow:auto;scrollbar-width:none;-ms-overflow-style:none}.simplebar-content-wrapper::-webkit-scrollbar,.simplebar-hide-scrollbar::-webkit-scrollbar{display:none;width:0;height:0}.simplebar-content:before,.simplebar-content:after{content:\\\" \\\";display:table}.simplebar-placeholder{max-height:100%;max-width:100%;width:100%;pointer-events:none}.simplebar-height-auto-observer-wrapper{box-sizing:inherit!important;height:100%;width:100%;max-width:1px;position:relative;float:left;max-height:1px;overflow:hidden;z-index:-1;padding:0;margin:0;pointer-events:none;flex-grow:inherit;flex-shrink:0;flex-basis:0}.simplebar-height-auto-observer{box-sizing:inherit;display:block;opacity:0;position:absolute;top:0;left:0;height:1000%;width:1000%;min-height:1px;min-width:1px;overflow:hidden;pointer-events:none;z-index:-1}.simplebar-track{z-index:1;position:absolute;right:0;bottom:0;pointer-events:none;overflow:hidden}[data-simplebar].simplebar-dragging{pointer-events:none;-webkit-touch-callout:none;-webkit-user-select:none;user-select:none}[data-simplebar].simplebar-dragging .simplebar-content{pointer-events:none;-webkit-touch-callout:none;-webkit-user-select:none;user-select:none}[data-simplebar].simplebar-dragging .simplebar-track{pointer-events:all}.simplebar-scrollbar{position:absolute;left:0;right:0;min-height:10px}.simplebar-scrollbar:before{position:absolute;content:\\\"\\\";background:black;border-radius:7px;left:2px;right:2px;opacity:0;transition:opacity .2s .5s linear}.simplebar-scrollbar.simplebar-visible:before{opacity:.5;transition-delay:0s;transition-duration:0s}.simplebar-track.simplebar-vertical{top:0;width:11px}.simplebar-scrollbar:before{top:2px;bottom:2px;left:2px;right:2px}.simplebar-track.simplebar-horizontal{left:0;height:11px}.simplebar-track.simplebar-horizontal .simplebar-scrollbar{right:auto;left:0;top:0;bottom:0;min-height:0;min-width:10px;width:auto}[data-simplebar-direction=rtl] .simplebar-track.simplebar-vertical{right:auto;left:0}.simplebar-dummy-scrollbar-size{direction:rtl;position:fixed;opacity:0;visibility:hidden;height:500px;width:500px;overflow-y:hidden;overflow-x:scroll;-ms-overflow-style:scrollbar!important}.simplebar-dummy-scrollbar-size>div{width:200%;height:200%;margin:10px 0}.simplebar-hide-scrollbar{position:fixed;left:0;visibility:hidden;overflow-y:scroll;scrollbar-width:none;-ms-overflow-style:none}\\n\", \"ngx-simplebar{display:block}\\n\"],\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SimplebarAngularComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-simplebar',\n      host: {\n        'data-simplebar': 'init'\n      },\n      templateUrl: './simplebar-angular.component.html',\n      styleUrls: ['../../../simplebar-core/src/simplebar.css', './simplebar-angular.component.scss'],\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    options: [{\n      type: Input,\n      args: ['options']\n    }]\n  });\n})();\nclass SimplebarAngularModule {}\nSimplebarAngularModule.ɵfac = function SimplebarAngularModule_Factory(t) {\n  return new (t || SimplebarAngularModule)();\n};\nSimplebarAngularModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SimplebarAngularModule,\n  declarations: [SimplebarAngularComponent],\n  exports: [SimplebarAngularComponent]\n});\nSimplebarAngularModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SimplebarAngularModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [SimplebarAngularComponent],\n      imports: [],\n      exports: [SimplebarAngularComponent],\n      schemas: []\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of simplebar-angular\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SimplebarAngularComponent, SimplebarAngularModule };\n"],
  "mappings": "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",
  "names": ["canUseDOM", "__assign", "canUseDOM", "SimpleBarCore"]
}
