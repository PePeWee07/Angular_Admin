{
  "__schema": "APISchema",
  "location": {
    "filePath": "public-api.ts",
    "line": 1,
    "character": 1
  },
  "module": {
    "__schema": "ModuleSchema",
    "location": {
      "filePath": "public-api.ts",
      "line": 1,
      "character": 1
    },
    "exports": [
      {
        "__schema": "ClassSchema",
        "name": "TranslateLoader",
        "location": {
          "filePath": "lib/translate.loader.ts",
          "line": 4,
          "character": 1
        },
        "signature": "class TranslateLoader",
        "extendsNodes": [],
        "implementNodes": [],
        "members": [
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.loader.ts",
              "line": 5,
              "character": 3
            },
            "name": "getTranslation",
            "signature": "(method) TranslateLoader.getTranslation(lang: string): Observable<any>",
            "modifiers": [
              "abstract"
            ],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.loader.ts",
                  "line": 5,
                  "character": 27
                },
                "name": "lang",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.loader.ts",
                    "line": 5,
                    "character": 33
                  },
                  "name": "string"
                }
              }
            ],
            "returnType": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "lib/translate.loader.ts",
                "line": 5,
                "character": 42
              },
              "name": "Observable",
              "packageName": "rxjs",
              "typeArgs": [
                {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.loader.ts",
                    "line": 5,
                    "character": 53
                  },
                  "name": "any"
                }
              ]
            }
          }
        ]
      },
      {
        "__schema": "ClassSchema",
        "name": "TranslateFakeLoader",
        "location": {
          "filePath": "lib/translate.loader.ts",
          "line": 11,
          "character": 1
        },
        "signature": "class TranslateFakeLoader",
        "extendsNodes": [
          {
            "__schema": "ExpressionWithTypeArgumentsSchema",
            "name": "extends TranslateLoader",
            "location": {
              "filePath": "lib/translate.loader.ts",
              "line": 12,
              "character": 42
            },
            "typeArgs": [],
            "expression": {
              "__schema": "ClassSchema",
              "name": "TranslateLoader",
              "location": {
                "filePath": "lib/translate.loader.ts",
                "line": 4,
                "character": 1
              },
              "signature": "class TranslateLoader",
              "extendsNodes": [],
              "implementNodes": [],
              "members": [
                {
                  "__schema": "FunctionLikeSchema",
                  "location": {
                    "filePath": "lib/translate.loader.ts",
                    "line": 5,
                    "character": 3
                  },
                  "name": "getTranslation",
                  "signature": "(method) TranslateLoader.getTranslation(lang: string): Observable<any>",
                  "modifiers": [
                    "abstract"
                  ],
                  "params": [
                    {
                      "__schema": "ParameterSchema",
                      "location": {
                        "filePath": "lib/translate.loader.ts",
                        "line": 5,
                        "character": 27
                      },
                      "name": "lang",
                      "isOptional": false,
                      "type": {
                        "__schema": "KeywordTypeSchema",
                        "location": {
                          "filePath": "lib/translate.loader.ts",
                          "line": 5,
                          "character": 33
                        },
                        "name": "string"
                      }
                    }
                  ],
                  "returnType": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "lib/translate.loader.ts",
                      "line": 5,
                      "character": 42
                    },
                    "name": "Observable",
                    "packageName": "rxjs",
                    "typeArgs": [
                      {
                        "__schema": "KeywordTypeSchema",
                        "location": {
                          "filePath": "lib/translate.loader.ts",
                          "line": 5,
                          "character": 53
                        },
                        "name": "any"
                      }
                    ]
                  }
                }
              ]
            }
          }
        ],
        "implementNodes": [],
        "members": [
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.loader.ts",
              "line": 13,
              "character": 3
            },
            "name": "getTranslation",
            "signature": "(method) TranslateFakeLoader.getTranslation(lang: string): Observable<any>",
            "modifiers": [],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.loader.ts",
                  "line": 13,
                  "character": 18
                },
                "name": "lang",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.loader.ts",
                    "line": 13,
                    "character": 24
                  },
                  "name": "string"
                }
              }
            ],
            "returnType": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "lib/translate.loader.ts",
                "line": 13,
                "character": 33
              },
              "name": "Observable",
              "packageName": "rxjs",
              "typeArgs": [
                {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.loader.ts",
                    "line": 13,
                    "character": 44
                  },
                  "name": "any"
                }
              ]
            }
          }
        ],
        "doc": {
          "__schema": "DocSchema",
          "location": {
            "filePath": "lib/translate.loader.ts",
            "line": 8,
            "character": 1
          },
          "raw": "/**\r\n * This loader is just a placeholder that does nothing, in case you don't need a loader at all\r\n */",
          "comment": "This loader is just a placeholder that does nothing, in case you don't need a loader at all"
        }
      },
      {
        "__schema": "VariableLikeSchema",
        "location": {
          "filePath": "lib/translate.service.ts",
          "line": 12,
          "character": 14
        },
        "name": "USE_STORE",
        "signature": "const USE_STORE: InjectionToken<string>",
        "isOptional": false,
        "type": {
          "__schema": "TypeRefSchema",
          "location": {
            "filePath": "lib/translate.service.ts",
            "line": 12,
            "character": 14
          },
          "name": "InjectionToken<string>",
          "packageName": ""
        }
      },
      {
        "__schema": "VariableLikeSchema",
        "location": {
          "filePath": "lib/translate.service.ts",
          "line": 13,
          "character": 14
        },
        "name": "USE_DEFAULT_LANG",
        "signature": "const USE_DEFAULT_LANG: InjectionToken<string>",
        "isOptional": false,
        "type": {
          "__schema": "TypeRefSchema",
          "location": {
            "filePath": "lib/translate.service.ts",
            "line": 13,
            "character": 14
          },
          "name": "InjectionToken<string>",
          "packageName": ""
        }
      },
      {
        "__schema": "VariableLikeSchema",
        "location": {
          "filePath": "lib/translate.service.ts",
          "line": 14,
          "character": 14
        },
        "name": "DEFAULT_LANGUAGE",
        "signature": "const DEFAULT_LANGUAGE: InjectionToken<string>",
        "isOptional": false,
        "type": {
          "__schema": "TypeRefSchema",
          "location": {
            "filePath": "lib/translate.service.ts",
            "line": 14,
            "character": 14
          },
          "name": "InjectionToken<string>",
          "packageName": ""
        }
      },
      {
        "__schema": "VariableLikeSchema",
        "location": {
          "filePath": "lib/translate.service.ts",
          "line": 15,
          "character": 14
        },
        "name": "USE_EXTEND",
        "signature": "const USE_EXTEND: InjectionToken<string>",
        "isOptional": false,
        "type": {
          "__schema": "TypeRefSchema",
          "location": {
            "filePath": "lib/translate.service.ts",
            "line": 15,
            "character": 14
          },
          "name": "InjectionToken<string>",
          "packageName": ""
        }
      },
      {
        "__schema": "InterfaceSchema",
        "location": {
          "filePath": "lib/translate.service.ts",
          "line": 17,
          "character": 1
        },
        "name": "TranslationChangeEvent",
        "signature": "interface TranslationChangeEvent",
        "extendsNodes": [],
        "members": [
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 18,
              "character": 3
            },
            "name": "translations",
            "signature": "(property) TranslationChangeEvent.translations: any",
            "isOptional": false,
            "type": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 18,
                "character": 17
              },
              "name": "any"
            }
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 19,
              "character": 3
            },
            "name": "lang",
            "signature": "(property) TranslationChangeEvent.lang: string",
            "isOptional": false,
            "type": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 19,
                "character": 9
              },
              "name": "string"
            }
          }
        ]
      },
      {
        "__schema": "InterfaceSchema",
        "location": {
          "filePath": "lib/translate.service.ts",
          "line": 22,
          "character": 1
        },
        "name": "LangChangeEvent",
        "signature": "interface LangChangeEvent",
        "extendsNodes": [],
        "members": [
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 23,
              "character": 3
            },
            "name": "lang",
            "signature": "(property) LangChangeEvent.lang: string",
            "isOptional": false,
            "type": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 23,
                "character": 9
              },
              "name": "string"
            }
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 24,
              "character": 3
            },
            "name": "translations",
            "signature": "(property) LangChangeEvent.translations: any",
            "isOptional": false,
            "type": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 24,
                "character": 17
              },
              "name": "any"
            }
          }
        ]
      },
      {
        "__schema": "InterfaceSchema",
        "location": {
          "filePath": "lib/translate.service.ts",
          "line": 27,
          "character": 1
        },
        "name": "DefaultLangChangeEvent",
        "signature": "interface DefaultLangChangeEvent",
        "extendsNodes": [],
        "members": [
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 28,
              "character": 3
            },
            "name": "lang",
            "signature": "(property) DefaultLangChangeEvent.lang: string",
            "isOptional": false,
            "type": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 28,
                "character": 9
              },
              "name": "string"
            }
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 29,
              "character": 3
            },
            "name": "translations",
            "signature": "(property) DefaultLangChangeEvent.translations: any",
            "isOptional": false,
            "type": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 29,
                "character": 17
              },
              "name": "any"
            }
          }
        ]
      },
      {
        "__schema": "ClassSchema",
        "name": "TranslateService",
        "location": {
          "filePath": "lib/translate.service.ts",
          "line": 38,
          "character": 1
        },
        "signature": "class TranslateService",
        "extendsNodes": [],
        "implementNodes": [],
        "members": [
          {
            "__schema": "GetAccessorSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 57,
              "character": 3
            },
            "name": "onTranslationChange",
            "signature": "(getter) TranslateService.onTranslationChange: EventEmitter<TranslationChangeEvent>",
            "type": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 57,
                "character": 30
              },
              "name": "EventEmitter",
              "packageName": "@angular/core",
              "typeArgs": [
                {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 57,
                    "character": 43
                  },
                  "name": "TranslationChangeEvent",
                  "internalFilePath": "lib\\translate.service.ts"
                }
              ]
            }
          },
          {
            "__schema": "GetAccessorSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 67,
              "character": 3
            },
            "name": "onLangChange",
            "signature": "(getter) TranslateService.onLangChange: EventEmitter<LangChangeEvent>",
            "type": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 67,
                "character": 23
              },
              "name": "EventEmitter",
              "packageName": "@angular/core",
              "typeArgs": [
                {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 67,
                    "character": 36
                  },
                  "name": "LangChangeEvent",
                  "internalFilePath": "lib\\translate.service.ts"
                }
              ]
            }
          },
          {
            "__schema": "GetAccessorSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 77,
              "character": 3
            },
            "name": "onDefaultLangChange",
            "signature": "(getter) TranslateService.onDefaultLangChange: EventEmitter<DefaultLangChangeEvent>",
            "type": {
              "__schema": "InferenceTypeSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 77,
                "character": 3
              },
              "type": "EventEmitter<DefaultLangChangeEvent>"
            }
          },
          {
            "__schema": "GetAccessorSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 84,
              "character": 3
            },
            "name": "defaultLang",
            "signature": "(getter) TranslateService.defaultLang: string",
            "type": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 84,
                "character": 22
              },
              "name": "string"
            }
          },
          {
            "__schema": "SetAccessorSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 88,
              "character": 3
            },
            "name": "defaultLang",
            "signature": "(setter) TranslateService.defaultLang: string",
            "param": {
              "__schema": "ParameterSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 88,
                "character": 19
              },
              "name": "defaultLang",
              "isOptional": false,
              "type": {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 88,
                  "character": 32
                },
                "name": "string"
              }
            }
          },
          {
            "__schema": "GetAccessorSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 99,
              "character": 3
            },
            "name": "currentLang",
            "signature": "(getter) TranslateService.currentLang: string",
            "type": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 99,
                "character": 22
              },
              "name": "string"
            }
          },
          {
            "__schema": "SetAccessorSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 103,
              "character": 3
            },
            "name": "currentLang",
            "signature": "(setter) TranslateService.currentLang: string",
            "param": {
              "__schema": "ParameterSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 103,
                "character": 19
              },
              "name": "currentLang",
              "isOptional": false,
              "type": {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 103,
                  "character": 32
                },
                "name": "string"
              }
            }
          },
          {
            "__schema": "GetAccessorSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 114,
              "character": 3
            },
            "name": "langs",
            "signature": "(getter) TranslateService.langs: string[]",
            "type": {
              "__schema": "TypeArraySchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 114,
                "character": 16
              },
              "type": {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 114,
                  "character": 16
                },
                "name": "string"
              }
            }
          },
          {
            "__schema": "SetAccessorSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 118,
              "character": 3
            },
            "name": "langs",
            "signature": "(setter) TranslateService.langs: string[]",
            "param": {
              "__schema": "ParameterSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 118,
                "character": 13
              },
              "name": "langs",
              "isOptional": false,
              "type": {
                "__schema": "TypeArraySchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 118,
                  "character": 20
                },
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 118,
                    "character": 20
                  },
                  "name": "string"
                }
              }
            }
          },
          {
            "__schema": "GetAccessorSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 129,
              "character": 3
            },
            "name": "translations",
            "signature": "(getter) TranslateService.translations: any",
            "type": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 129,
                "character": 23
              },
              "name": "any"
            }
          },
          {
            "__schema": "SetAccessorSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 133,
              "character": 3
            },
            "name": "translations",
            "signature": "(setter) TranslateService.translations: any",
            "param": {
              "__schema": "ParameterSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 133,
                "character": 20
              },
              "name": "translations",
              "isOptional": false,
              "type": {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 133,
                  "character": 34
                },
                "name": "any"
              }
            }
          },
          {
            "__schema": "ConstructorSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 153,
              "character": 3
            },
            "name": "constructor",
            "signature": "constructor TranslateService(store: TranslateStore, currentLoader: TranslateLoader, compiler: TranslateCompiler, parser: TranslateParser, missingTranslationHandler: MissingTranslationHandler, useDefaultLang: boolean, isolate: boolean, extend: boolean, defaultLanguage: string): TranslateService",
            "modifiers": [],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 153,
                  "character": 15
                },
                "name": "store",
                "isOptional": false,
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 153,
                    "character": 29
                  },
                  "name": "TranslateStore",
                  "internalFilePath": "lib\\translate.store.ts"
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 154,
                  "character": 15
                },
                "name": "currentLoader",
                "isOptional": false,
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 154,
                    "character": 37
                  },
                  "name": "TranslateLoader",
                  "internalFilePath": "lib\\translate.loader.ts"
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 155,
                  "character": 15
                },
                "name": "compiler",
                "isOptional": false,
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 155,
                    "character": 32
                  },
                  "name": "TranslateCompiler",
                  "internalFilePath": "lib\\translate.compiler.ts"
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 156,
                  "character": 15
                },
                "name": "parser",
                "isOptional": false,
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 156,
                    "character": 30
                  },
                  "name": "TranslateParser",
                  "internalFilePath": "lib\\translate.parser.ts"
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 157,
                  "character": 15
                },
                "name": "missingTranslationHandler",
                "isOptional": false,
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 157,
                    "character": 49
                  },
                  "name": "MissingTranslationHandler",
                  "internalFilePath": "lib\\missing-translation-handler.ts"
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 158,
                  "character": 15
                },
                "name": "useDefaultLang",
                "isOptional": false,
                "defaultValue": "true",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 158,
                    "character": 65
                  },
                  "name": "boolean"
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 159,
                  "character": 15
                },
                "name": "isolate",
                "isOptional": false,
                "defaultValue": "false",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 159,
                    "character": 51
                  },
                  "name": "boolean"
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 160,
                  "character": 15
                },
                "name": "extend",
                "isOptional": false,
                "defaultValue": "false",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 160,
                    "character": 51
                  },
                  "name": "boolean"
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 161,
                  "character": 15
                },
                "name": "defaultLanguage",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 161,
                    "character": 58
                  },
                  "name": "string"
                }
              }
            ],
            "returnType": {
              "__schema": "ThisTypeSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 38,
                "character": 1
              }
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 141,
                "character": 3
              },
              "raw": "/**\r\n   *\r\n   * @param store an instance of the store (that is supposed to be unique)\r\n   * @param currentLoader An instance of the loader currently used\r\n   * @param compiler An instance of the compiler currently used\r\n   * @param parser An instance of the parser currently used\r\n   * @param missingTranslationHandler A handler for missing translations.\r\n   * @param useDefaultLang whether we should use default language translation when current language translation is missing.\r\n   * @param isolate whether this service should use the store or not\r\n   * @param extend To make a child module extend (and use) translations from parent modules.\r\n   * @param defaultLanguage Set the default language using configuration\r\n   */",
              "tags": [
                {
                  "__schema": "PropertyLikeTagSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 143,
                    "character": 6
                  },
                  "tagName": "parameter",
                  "comment": "an instance of the store (that is supposed to be unique)",
                  "name": "store"
                },
                {
                  "__schema": "PropertyLikeTagSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 144,
                    "character": 6
                  },
                  "tagName": "parameter",
                  "comment": "An instance of the loader currently used",
                  "name": "currentLoader"
                },
                {
                  "__schema": "PropertyLikeTagSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 145,
                    "character": 6
                  },
                  "tagName": "parameter",
                  "comment": "An instance of the compiler currently used",
                  "name": "compiler"
                },
                {
                  "__schema": "PropertyLikeTagSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 146,
                    "character": 6
                  },
                  "tagName": "parameter",
                  "comment": "An instance of the parser currently used",
                  "name": "parser"
                },
                {
                  "__schema": "PropertyLikeTagSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 147,
                    "character": 6
                  },
                  "tagName": "parameter",
                  "comment": "A handler for missing translations.",
                  "name": "missingTranslationHandler"
                },
                {
                  "__schema": "PropertyLikeTagSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 148,
                    "character": 6
                  },
                  "tagName": "parameter",
                  "comment": "whether we should use default language translation when current language translation is missing.",
                  "name": "useDefaultLang"
                },
                {
                  "__schema": "PropertyLikeTagSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 149,
                    "character": 6
                  },
                  "tagName": "parameter",
                  "comment": "whether this service should use the store or not",
                  "name": "isolate"
                },
                {
                  "__schema": "PropertyLikeTagSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 150,
                    "character": 6
                  },
                  "tagName": "parameter",
                  "comment": "To make a child module extend (and use) translations from parent modules.",
                  "name": "extend"
                },
                {
                  "__schema": "PropertyLikeTagSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 151,
                    "character": 6
                  },
                  "tagName": "parameter",
                  "comment": "Set the default language using configuration",
                  "name": "defaultLanguage"
                }
              ]
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 171,
              "character": 3
            },
            "name": "setDefaultLang",
            "signature": "(method) TranslateService.setDefaultLang(lang: string): void",
            "modifiers": [
              "public"
            ],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 171,
                  "character": 25
                },
                "name": "lang",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 171,
                    "character": 31
                  },
                  "name": "string"
                }
              }
            ],
            "returnType": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 171,
                "character": 40
              },
              "name": "void"
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 168,
                "character": 3
              },
              "raw": "/**\r\n   * Sets the default language to use as a fallback\r\n   */",
              "comment": "Sets the default language to use as a fallback"
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 196,
              "character": 3
            },
            "name": "getDefaultLang",
            "signature": "(method) TranslateService.getDefaultLang(): string",
            "modifiers": [
              "public"
            ],
            "params": [],
            "returnType": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 196,
                "character": 28
              },
              "name": "string"
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 193,
                "character": 3
              },
              "raw": "/**\r\n   * Gets the default language used\r\n   */",
              "comment": "Gets the default language used"
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 203,
              "character": 3
            },
            "name": "use",
            "signature": "(method) TranslateService.use(lang: string): Observable<any>",
            "modifiers": [
              "public"
            ],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 203,
                  "character": 14
                },
                "name": "lang",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 203,
                    "character": 20
                  },
                  "name": "string"
                }
              }
            ],
            "returnType": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 203,
                "character": 29
              },
              "name": "Observable",
              "packageName": "rxjs",
              "typeArgs": [
                {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 203,
                    "character": 40
                  },
                  "name": "any"
                }
              ]
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 200,
                "character": 3
              },
              "raw": "/**\r\n   * Changes the lang currently used\r\n   */",
              "comment": "Changes the lang currently used"
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 249,
              "character": 3
            },
            "name": "getTranslation",
            "signature": "(method) TranslateService.getTranslation(lang: string): Observable<any>",
            "modifiers": [
              "public"
            ],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 249,
                  "character": 25
                },
                "name": "lang",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 249,
                    "character": 31
                  },
                  "name": "string"
                }
              }
            ],
            "returnType": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 249,
                "character": 40
              },
              "name": "Observable",
              "packageName": "rxjs",
              "typeArgs": [
                {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 249,
                    "character": 51
                  },
                  "name": "any"
                }
              ]
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 245,
                "character": 3
              },
              "raw": "/**\r\n   * Gets an object of translations for a given language with the current loader\r\n   * and passes it through the compiler\r\n   */",
              "comment": "Gets an object of translations for a given language with the current loader\r\nand passes it through the compiler"
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 281,
              "character": 3
            },
            "name": "setTranslation",
            "signature": "(method) TranslateService.setTranslation(lang: string, translations: Object, shouldMerge?: boolean): void",
            "modifiers": [
              "public"
            ],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 281,
                  "character": 25
                },
                "name": "lang",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 281,
                    "character": 31
                  },
                  "name": "string"
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 281,
                  "character": 39
                },
                "name": "translations",
                "isOptional": false,
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 281,
                    "character": 53
                  },
                  "name": "Object",
                  "packageName": ""
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 281,
                  "character": 61
                },
                "name": "shouldMerge",
                "isOptional": false,
                "defaultValue": "false",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 281,
                    "character": 74
                  },
                  "name": "boolean"
                }
              }
            ],
            "returnType": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 281,
                "character": 92
              },
              "name": "void"
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 277,
                "character": 3
              },
              "raw": "/**\r\n   * Manually sets an object of translations for a given language\r\n   * after passing it through the compiler\r\n   */",
              "comment": "Manually sets an object of translations for a given language\r\nafter passing it through the compiler"
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 295,
              "character": 3
            },
            "name": "getLangs",
            "signature": "(method) TranslateService.getLangs(): Array<string>",
            "modifiers": [
              "public"
            ],
            "params": [],
            "returnType": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 295,
                "character": 22
              },
              "name": "Array",
              "packageName": "",
              "typeArgs": [
                {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 295,
                    "character": 28
                  },
                  "name": "string"
                }
              ]
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 292,
                "character": 3
              },
              "raw": "/**\r\n   * Returns an array of currently available langs\r\n   */",
              "comment": "Returns an array of currently available langs"
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 302,
              "character": 3
            },
            "name": "addLangs",
            "signature": "(method) TranslateService.addLangs(langs: Array<string>): void",
            "modifiers": [
              "public"
            ],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 302,
                  "character": 19
                },
                "name": "langs",
                "isOptional": false,
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 302,
                    "character": 26
                  },
                  "name": "Array",
                  "packageName": "",
                  "typeArgs": [
                    {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "lib/translate.service.ts",
                        "line": 302,
                        "character": 32
                      },
                      "name": "string"
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 302,
                "character": 42
              },
              "name": "void"
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 299,
                "character": 3
              },
              "raw": "/**\r\n   * Add available langs\r\n   */",
              "comment": "Add available langs"
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 320,
              "character": 3
            },
            "name": "getParsedResult",
            "signature": "(method) TranslateService.getParsedResult(translations: any, key: any, interpolateParams?: Object): any",
            "modifiers": [
              "public"
            ],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 320,
                  "character": 26
                },
                "name": "translations",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 320,
                    "character": 40
                  },
                  "name": "any"
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 320,
                  "character": 45
                },
                "name": "key",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 320,
                    "character": 50
                  },
                  "name": "any"
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 320,
                  "character": 55
                },
                "name": "interpolateParams",
                "isOptional": true,
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 320,
                    "character": 75
                  },
                  "name": "Object",
                  "packageName": ""
                }
              }
            ],
            "returnType": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 320,
                "character": 84
              },
              "name": "any"
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 317,
                "character": 3
              },
              "raw": "/**\r\n   * Returns the parsed result of the translations\r\n   */",
              "comment": "Returns the parsed result of the translations"
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 370,
              "character": 3
            },
            "name": "get",
            "signature": "(method) TranslateService.get(key: string | Array<string>, interpolateParams?: Object): Observable<string | any>",
            "modifiers": [
              "public"
            ],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 370,
                  "character": 14
                },
                "name": "key",
                "isOptional": false,
                "type": {
                  "__schema": "TypeUnionSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 370,
                    "character": 19
                  },
                  "types": [
                    {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "lib/translate.service.ts",
                        "line": 370,
                        "character": 19
                      },
                      "name": "string"
                    },
                    {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "lib/translate.service.ts",
                        "line": 370,
                        "character": 28
                      },
                      "name": "Array",
                      "packageName": "",
                      "typeArgs": [
                        {
                          "__schema": "KeywordTypeSchema",
                          "location": {
                            "filePath": "lib/translate.service.ts",
                            "line": 370,
                            "character": 34
                          },
                          "name": "string"
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 370,
                  "character": 43
                },
                "name": "interpolateParams",
                "isOptional": true,
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 370,
                    "character": 63
                  },
                  "name": "Object",
                  "packageName": ""
                }
              }
            ],
            "returnType": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 370,
                "character": 72
              },
              "name": "Observable",
              "packageName": "rxjs",
              "typeArgs": [
                {
                  "__schema": "TypeUnionSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 370,
                    "character": 83
                  },
                  "types": [
                    {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "lib/translate.service.ts",
                        "line": 370,
                        "character": 83
                      },
                      "name": "string"
                    },
                    {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "lib/translate.service.ts",
                        "line": 370,
                        "character": 92
                      },
                      "name": "any"
                    }
                  ]
                }
              ]
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 366,
                "character": 3
              },
              "raw": "/**\r\n   * Gets the translated value of a key (or an array of keys)\r\n   * @returns the translated key, or an object of translated keys\r\n   */",
              "comment": "Gets the translated value of a key (or an array of keys)",
              "tags": [
                {
                  "__schema": "ReturnTagSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 368,
                    "character": 6
                  },
                  "tagName": "return",
                  "comment": "the translated key, or an object of translated keys"
                }
              ]
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 393,
              "character": 3
            },
            "name": "getStreamOnTranslationChange",
            "signature": "(method) TranslateService.getStreamOnTranslationChange(key: string | Array<string>, interpolateParams?: Object): Observable<string | any>",
            "modifiers": [
              "public"
            ],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 393,
                  "character": 39
                },
                "name": "key",
                "isOptional": false,
                "type": {
                  "__schema": "TypeUnionSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 393,
                    "character": 44
                  },
                  "types": [
                    {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "lib/translate.service.ts",
                        "line": 393,
                        "character": 44
                      },
                      "name": "string"
                    },
                    {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "lib/translate.service.ts",
                        "line": 393,
                        "character": 53
                      },
                      "name": "Array",
                      "packageName": "",
                      "typeArgs": [
                        {
                          "__schema": "KeywordTypeSchema",
                          "location": {
                            "filePath": "lib/translate.service.ts",
                            "line": 393,
                            "character": 59
                          },
                          "name": "string"
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 393,
                  "character": 68
                },
                "name": "interpolateParams",
                "isOptional": true,
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 393,
                    "character": 88
                  },
                  "name": "Object",
                  "packageName": ""
                }
              }
            ],
            "returnType": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 393,
                "character": 97
              },
              "name": "Observable",
              "packageName": "rxjs",
              "typeArgs": [
                {
                  "__schema": "TypeUnionSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 393,
                    "character": 108
                  },
                  "types": [
                    {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "lib/translate.service.ts",
                        "line": 393,
                        "character": 108
                      },
                      "name": "string"
                    },
                    {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "lib/translate.service.ts",
                        "line": 393,
                        "character": 117
                      },
                      "name": "any"
                    }
                  ]
                }
              ]
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 388,
                "character": 3
              },
              "raw": "/**\r\n   * Returns a stream of translated values of a key (or an array of keys) which updates\r\n   * whenever the translation changes.\r\n   * @returns A stream of the translated key, or an object of translated keys\r\n   */",
              "comment": "Returns a stream of translated values of a key (or an array of keys) which updates\r\nwhenever the translation changes.",
              "tags": [
                {
                  "__schema": "ReturnTagSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 391,
                    "character": 6
                  },
                  "tagName": "return",
                  "comment": "A stream of the translated key, or an object of translated keys"
                }
              ]
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 418,
              "character": 3
            },
            "name": "stream",
            "signature": "(method) TranslateService.stream(key: string | Array<string>, interpolateParams?: Object): Observable<string | any>",
            "modifiers": [
              "public"
            ],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 418,
                  "character": 17
                },
                "name": "key",
                "isOptional": false,
                "type": {
                  "__schema": "TypeUnionSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 418,
                    "character": 22
                  },
                  "types": [
                    {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "lib/translate.service.ts",
                        "line": 418,
                        "character": 22
                      },
                      "name": "string"
                    },
                    {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "lib/translate.service.ts",
                        "line": 418,
                        "character": 31
                      },
                      "name": "Array",
                      "packageName": "",
                      "typeArgs": [
                        {
                          "__schema": "KeywordTypeSchema",
                          "location": {
                            "filePath": "lib/translate.service.ts",
                            "line": 418,
                            "character": 37
                          },
                          "name": "string"
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 418,
                  "character": 46
                },
                "name": "interpolateParams",
                "isOptional": true,
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 418,
                    "character": 66
                  },
                  "name": "Object",
                  "packageName": ""
                }
              }
            ],
            "returnType": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 418,
                "character": 75
              },
              "name": "Observable",
              "packageName": "rxjs",
              "typeArgs": [
                {
                  "__schema": "TypeUnionSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 418,
                    "character": 86
                  },
                  "types": [
                    {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "lib/translate.service.ts",
                        "line": 418,
                        "character": 86
                      },
                      "name": "string"
                    },
                    {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "lib/translate.service.ts",
                        "line": 418,
                        "character": 95
                      },
                      "name": "any"
                    }
                  ]
                }
              ]
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 413,
                "character": 3
              },
              "raw": "/**\r\n   * Returns a stream of translated values of a key (or an array of keys) which updates\r\n   * whenever the language changes.\r\n   * @returns A stream of the translated key, or an object of translated keys\r\n   */",
              "comment": "Returns a stream of translated values of a key (or an array of keys) which updates\r\nwhenever the language changes.",
              "tags": [
                {
                  "__schema": "ReturnTagSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 416,
                    "character": 6
                  },
                  "tagName": "return",
                  "comment": "A stream of the translated key, or an object of translated keys"
                }
              ]
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 437,
              "character": 3
            },
            "name": "instant",
            "signature": "(method) TranslateService.instant(key: string | Array<string>, interpolateParams?: Object): string | any",
            "modifiers": [
              "public"
            ],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 437,
                  "character": 18
                },
                "name": "key",
                "isOptional": false,
                "type": {
                  "__schema": "TypeUnionSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 437,
                    "character": 23
                  },
                  "types": [
                    {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "lib/translate.service.ts",
                        "line": 437,
                        "character": 23
                      },
                      "name": "string"
                    },
                    {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "lib/translate.service.ts",
                        "line": 437,
                        "character": 32
                      },
                      "name": "Array",
                      "packageName": "",
                      "typeArgs": [
                        {
                          "__schema": "KeywordTypeSchema",
                          "location": {
                            "filePath": "lib/translate.service.ts",
                            "line": 437,
                            "character": 38
                          },
                          "name": "string"
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 437,
                  "character": 47
                },
                "name": "interpolateParams",
                "isOptional": true,
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 437,
                    "character": 67
                  },
                  "name": "Object",
                  "packageName": ""
                }
              }
            ],
            "returnType": {
              "__schema": "TypeUnionSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 437,
                "character": 76
              },
              "types": [
                {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 437,
                    "character": 76
                  },
                  "name": "string"
                },
                {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 437,
                    "character": 85
                  },
                  "name": "any"
                }
              ]
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 433,
                "character": 3
              },
              "raw": "/**\r\n   * Returns a translation instantly from the internal state of loaded translation.\r\n   * All rules regarding the current language, the preferred language of even fallback languages will be used except any promise handling.\r\n   */",
              "comment": "Returns a translation instantly from the internal state of loaded translation.\r\nAll rules regarding the current language, the preferred language of even fallback languages will be used except any promise handling."
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 460,
              "character": 3
            },
            "name": "set",
            "signature": "(method) TranslateService.set(key: string, value: string, lang?: string): void",
            "modifiers": [
              "public"
            ],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 460,
                  "character": 14
                },
                "name": "key",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 460,
                    "character": 19
                  },
                  "name": "string"
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 460,
                  "character": 27
                },
                "name": "value",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 460,
                    "character": 34
                  },
                  "name": "string"
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 460,
                  "character": 42
                },
                "name": "lang",
                "isOptional": false,
                "defaultValue": "this.currentLang",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 460,
                    "character": 48
                  },
                  "name": "string"
                }
              }
            ],
            "returnType": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 460,
                "character": 76
              },
              "name": "void"
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 457,
                "character": 3
              },
              "raw": "/**\r\n   * Sets the translated value of a key, after compiling it\r\n   */",
              "comment": "Sets the translated value of a key, after compiling it"
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 490,
              "character": 3
            },
            "name": "reloadLang",
            "signature": "(method) TranslateService.reloadLang(lang: string): Observable<any>",
            "modifiers": [
              "public"
            ],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 490,
                  "character": 21
                },
                "name": "lang",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 490,
                    "character": 27
                  },
                  "name": "string"
                }
              }
            ],
            "returnType": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 490,
                "character": 36
              },
              "name": "Observable",
              "packageName": "rxjs",
              "typeArgs": [
                {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 490,
                    "character": 47
                  },
                  "name": "any"
                }
              ]
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 487,
                "character": 3
              },
              "raw": "/**\r\n   * Allows to reload the lang file from the file\r\n   */",
              "comment": "Allows to reload the lang file from the file"
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 498,
              "character": 3
            },
            "name": "resetLang",
            "signature": "(method) TranslateService.resetLang(lang: string): void",
            "modifiers": [
              "public"
            ],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.service.ts",
                  "line": 498,
                  "character": 20
                },
                "name": "lang",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 498,
                    "character": 26
                  },
                  "name": "string"
                }
              }
            ],
            "returnType": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 498,
                "character": 35
              },
              "name": "void"
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 495,
                "character": 3
              },
              "raw": "/**\r\n   * Deletes inner translation\r\n   */",
              "comment": "Deletes inner translation"
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 506,
              "character": 3
            },
            "name": "getBrowserLang",
            "signature": "(method) TranslateService.getBrowserLang(): string | undefined",
            "modifiers": [
              "public"
            ],
            "params": [],
            "returnType": {
              "__schema": "TypeUnionSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 506,
                "character": 28
              },
              "types": [
                {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 506,
                    "character": 28
                  },
                  "name": "string"
                },
                {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 506,
                    "character": 37
                  },
                  "name": "undefined"
                }
              ]
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 503,
                "character": 3
              },
              "raw": "/**\r\n   * Returns the language code name from the browser, e.g. \"de\"\r\n   */",
              "comment": "Returns the language code name from the browser, e.g. \"de\""
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.service.ts",
              "line": 532,
              "character": 3
            },
            "name": "getBrowserCultureLang",
            "signature": "(method) TranslateService.getBrowserCultureLang(): string | undefined",
            "modifiers": [
              "public"
            ],
            "params": [],
            "returnType": {
              "__schema": "TypeUnionSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 532,
                "character": 35
              },
              "types": [
                {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 532,
                    "character": 35
                  },
                  "name": "string"
                },
                {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.service.ts",
                    "line": 532,
                    "character": 44
                  },
                  "name": "undefined"
                }
              ]
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "lib/translate.service.ts",
                "line": 529,
                "character": 3
              },
              "raw": "/**\r\n   * Returns the culture language code name from the browser, e.g. \"de-DE\"\r\n   */",
              "comment": "Returns the culture language code name from the browser, e.g. \"de-DE\""
            }
          }
        ]
      },
      {
        "__schema": "InterfaceSchema",
        "location": {
          "filePath": "lib/missing-translation-handler.ts",
          "line": 4,
          "character": 1
        },
        "name": "MissingTranslationHandlerParams",
        "signature": "interface MissingTranslationHandlerParams",
        "extendsNodes": [],
        "members": [
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "lib/missing-translation-handler.ts",
              "line": 8,
              "character": 3
            },
            "name": "key",
            "signature": "(property) MissingTranslationHandlerParams.key: string",
            "isOptional": false,
            "type": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/missing-translation-handler.ts",
                "line": 8,
                "character": 8
              },
              "name": "string"
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "lib/missing-translation-handler.ts",
                "line": 5,
                "character": 3
              },
              "raw": "/**\r\n   * the key that's missing in translation files\r\n   */",
              "comment": "the key that's missing in translation files"
            }
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "lib/missing-translation-handler.ts",
              "line": 13,
              "character": 3
            },
            "name": "translateService",
            "signature": "(property) MissingTranslationHandlerParams.translateService: TranslateService",
            "isOptional": false,
            "type": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "lib/missing-translation-handler.ts",
                "line": 13,
                "character": 3
              },
              "name": "TranslateService",
              "internalFilePath": "lib\\translate.service.ts"
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "lib/missing-translation-handler.ts",
                "line": 10,
                "character": 3
              },
              "raw": "/**\r\n   * an instance of the service that was unable to translate the key.\r\n   */",
              "comment": "an instance of the service that was unable to translate the key."
            }
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "lib/missing-translation-handler.ts",
              "line": 18,
              "character": 3
            },
            "name": "interpolateParams",
            "signature": "(property) MissingTranslationHandlerParams.interpolateParams?: Object | undefined",
            "isOptional": true,
            "type": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "lib/missing-translation-handler.ts",
                "line": 18,
                "character": 23
              },
              "name": "Object",
              "packageName": ""
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "lib/missing-translation-handler.ts",
                "line": 15,
                "character": 3
              },
              "raw": "/**\r\n   * interpolation params that were passed along for translating the given key.\r\n   */",
              "comment": "interpolation params that were passed along for translating the given key."
            }
          }
        ]
      },
      {
        "__schema": "ClassSchema",
        "name": "MissingTranslationHandler",
        "location": {
          "filePath": "lib/missing-translation-handler.ts",
          "line": 21,
          "character": 1
        },
        "signature": "class MissingTranslationHandler",
        "extendsNodes": [],
        "implementNodes": [],
        "members": [
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/missing-translation-handler.ts",
              "line": 31,
              "character": 3
            },
            "name": "handle",
            "signature": "(method) MissingTranslationHandler.handle(params: MissingTranslationHandlerParams): any",
            "modifiers": [
              "abstract"
            ],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/missing-translation-handler.ts",
                  "line": 31,
                  "character": 19
                },
                "name": "params",
                "isOptional": false,
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "lib/missing-translation-handler.ts",
                    "line": 31,
                    "character": 27
                  },
                  "name": "MissingTranslationHandlerParams",
                  "internalFilePath": "lib\\missing-translation-handler.ts"
                }
              }
            ],
            "returnType": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/missing-translation-handler.ts",
                "line": 31,
                "character": 61
              },
              "name": "any"
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "lib/missing-translation-handler.ts",
                "line": 22,
                "character": 3
              },
              "raw": "/**\r\n   * A function that handles missing translations.\r\n   *\r\n   * @param params context for resolving a missing translation\r\n   * @returns a value or an observable\r\n   * If it returns a value, then this value is used.\r\n   * If it return an observable, the value returned by this observable will be used (except if the method was \"instant\").\r\n   * If it doesn't return then the key will be used as a value\r\n   */",
              "comment": "A function that handles missing translations.",
              "tags": [
                {
                  "__schema": "PropertyLikeTagSchema",
                  "location": {
                    "filePath": "lib/missing-translation-handler.ts",
                    "line": 25,
                    "character": 6
                  },
                  "tagName": "parameter",
                  "comment": "context for resolving a missing translation",
                  "name": "params"
                },
                {
                  "__schema": "ReturnTagSchema",
                  "location": {
                    "filePath": "lib/missing-translation-handler.ts",
                    "line": 26,
                    "character": 6
                  },
                  "tagName": "return",
                  "comment": "a value or an observable\r\nIf it returns a value, then this value is used.\r\nIf it return an observable, the value returned by this observable will be used (except if the method was \"instant\").\r\nIf it doesn't return then the key will be used as a value"
                }
              ]
            }
          }
        ]
      },
      {
        "__schema": "ClassSchema",
        "name": "FakeMissingTranslationHandler",
        "location": {
          "filePath": "lib/missing-translation-handler.ts",
          "line": 37,
          "character": 1
        },
        "signature": "class FakeMissingTranslationHandler",
        "extendsNodes": [],
        "implementNodes": [
          {
            "__schema": "ExpressionWithTypeArgumentsSchema",
            "name": "implements MissingTranslationHandler",
            "location": {
              "filePath": "lib/missing-translation-handler.ts",
              "line": 38,
              "character": 55
            },
            "typeArgs": [],
            "expression": {
              "__schema": "ClassSchema",
              "name": "MissingTranslationHandler",
              "location": {
                "filePath": "lib/missing-translation-handler.ts",
                "line": 21,
                "character": 1
              },
              "signature": "class MissingTranslationHandler",
              "extendsNodes": [],
              "implementNodes": [],
              "members": [
                {
                  "__schema": "FunctionLikeSchema",
                  "location": {
                    "filePath": "lib/missing-translation-handler.ts",
                    "line": 31,
                    "character": 3
                  },
                  "name": "handle",
                  "signature": "(method) MissingTranslationHandler.handle(params: MissingTranslationHandlerParams): any",
                  "modifiers": [
                    "abstract"
                  ],
                  "params": [
                    {
                      "__schema": "ParameterSchema",
                      "location": {
                        "filePath": "lib/missing-translation-handler.ts",
                        "line": 31,
                        "character": 19
                      },
                      "name": "params",
                      "isOptional": false,
                      "type": {
                        "__schema": "TypeRefSchema",
                        "location": {
                          "filePath": "lib/missing-translation-handler.ts",
                          "line": 31,
                          "character": 27
                        },
                        "name": "MissingTranslationHandlerParams",
                        "internalFilePath": "lib\\missing-translation-handler.ts"
                      }
                    }
                  ],
                  "returnType": {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "lib/missing-translation-handler.ts",
                      "line": 31,
                      "character": 61
                    },
                    "name": "any"
                  },
                  "doc": {
                    "__schema": "DocSchema",
                    "location": {
                      "filePath": "lib/missing-translation-handler.ts",
                      "line": 22,
                      "character": 3
                    },
                    "raw": "/**\r\n   * A function that handles missing translations.\r\n   *\r\n   * @param params context for resolving a missing translation\r\n   * @returns a value or an observable\r\n   * If it returns a value, then this value is used.\r\n   * If it return an observable, the value returned by this observable will be used (except if the method was \"instant\").\r\n   * If it doesn't return then the key will be used as a value\r\n   */",
                    "comment": "A function that handles missing translations.",
                    "tags": [
                      {
                        "__schema": "PropertyLikeTagSchema",
                        "location": {
                          "filePath": "lib/missing-translation-handler.ts",
                          "line": 25,
                          "character": 6
                        },
                        "tagName": "parameter",
                        "comment": "context for resolving a missing translation",
                        "name": "params"
                      },
                      {
                        "__schema": "ReturnTagSchema",
                        "location": {
                          "filePath": "lib/missing-translation-handler.ts",
                          "line": 26,
                          "character": 6
                        },
                        "tagName": "return",
                        "comment": "a value or an observable\r\nIf it returns a value, then this value is used.\r\nIf it return an observable, the value returned by this observable will be used (except if the method was \"instant\").\r\nIf it doesn't return then the key will be used as a value"
                      }
                    ]
                  }
                }
              ]
            }
          }
        ],
        "members": [
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/missing-translation-handler.ts",
              "line": 39,
              "character": 3
            },
            "name": "handle",
            "signature": "(method) FakeMissingTranslationHandler.handle(params: MissingTranslationHandlerParams): string",
            "modifiers": [],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/missing-translation-handler.ts",
                  "line": 39,
                  "character": 10
                },
                "name": "params",
                "isOptional": false,
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "lib/missing-translation-handler.ts",
                    "line": 39,
                    "character": 18
                  },
                  "name": "MissingTranslationHandlerParams",
                  "internalFilePath": "lib\\missing-translation-handler.ts"
                }
              }
            ],
            "returnType": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/missing-translation-handler.ts",
                "line": 39,
                "character": 52
              },
              "name": "string"
            }
          }
        ],
        "doc": {
          "__schema": "DocSchema",
          "location": {
            "filePath": "lib/missing-translation-handler.ts",
            "line": 34,
            "character": 1
          },
          "raw": "/**\r\n * This handler is just a placeholder that does nothing, in case you don't need a missing translation handler at all\r\n */",
          "comment": "This handler is just a placeholder that does nothing, in case you don't need a missing translation handler at all"
        }
      },
      {
        "__schema": "ClassSchema",
        "name": "TranslateParser",
        "location": {
          "filePath": "lib/translate.parser.ts",
          "line": 4,
          "character": 1
        },
        "signature": "class TranslateParser",
        "extendsNodes": [],
        "implementNodes": [],
        "members": [
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.parser.ts",
              "line": 11,
              "character": 3
            },
            "name": "interpolate",
            "signature": "(method) TranslateParser.interpolate(expr: string | Function, params?: any): string | undefined",
            "modifiers": [
              "abstract"
            ],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.parser.ts",
                  "line": 11,
                  "character": 24
                },
                "name": "expr",
                "isOptional": false,
                "type": {
                  "__schema": "TypeUnionSchema",
                  "location": {
                    "filePath": "lib/translate.parser.ts",
                    "line": 11,
                    "character": 30
                  },
                  "types": [
                    {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "lib/translate.parser.ts",
                        "line": 11,
                        "character": 30
                      },
                      "name": "string"
                    },
                    {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "lib/translate.parser.ts",
                        "line": 11,
                        "character": 39
                      },
                      "name": "Function",
                      "packageName": ""
                    }
                  ]
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.parser.ts",
                  "line": 11,
                  "character": 49
                },
                "name": "params",
                "isOptional": true,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.parser.ts",
                    "line": 11,
                    "character": 58
                  },
                  "name": "any"
                }
              }
            ],
            "returnType": {
              "__schema": "TypeUnionSchema",
              "location": {
                "filePath": "lib/translate.parser.ts",
                "line": 11,
                "character": 64
              },
              "types": [
                {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.parser.ts",
                    "line": 11,
                    "character": 64
                  },
                  "name": "string"
                },
                {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.parser.ts",
                    "line": 11,
                    "character": 73
                  },
                  "name": "undefined"
                }
              ]
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "lib/translate.parser.ts",
                "line": 5,
                "character": 3
              },
              "raw": "/**\r\n   * Interpolates a string to replace parameters\r\n   * \"This is a {{ key }}\" ==> \"This is a value\", with params = { key: \"value\" }\r\n   * @param expr\r\n   * @param params\r\n   */",
              "comment": "Interpolates a string to replace parameters\r\n\"This is a {{ key }}\" ==> \"This is a value\", with params = { key: \"value\" }",
              "tags": [
                {
                  "__schema": "PropertyLikeTagSchema",
                  "location": {
                    "filePath": "lib/translate.parser.ts",
                    "line": 8,
                    "character": 6
                  },
                  "tagName": "parameter",
                  "name": "expr"
                },
                {
                  "__schema": "PropertyLikeTagSchema",
                  "location": {
                    "filePath": "lib/translate.parser.ts",
                    "line": 9,
                    "character": 6
                  },
                  "tagName": "parameter",
                  "name": "params"
                }
              ]
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.parser.ts",
              "line": 19,
              "character": 3
            },
            "name": "getValue",
            "signature": "(method) TranslateParser.getValue(target: any, key: string): any",
            "modifiers": [
              "abstract"
            ],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.parser.ts",
                  "line": 19,
                  "character": 21
                },
                "name": "target",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.parser.ts",
                    "line": 19,
                    "character": 29
                  },
                  "name": "any"
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.parser.ts",
                  "line": 19,
                  "character": 34
                },
                "name": "key",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.parser.ts",
                    "line": 19,
                    "character": 39
                  },
                  "name": "string"
                }
              }
            ],
            "returnType": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.parser.ts",
                "line": 19,
                "character": 48
              },
              "name": "any"
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "lib/translate.parser.ts",
                "line": 13,
                "character": 3
              },
              "raw": "/**\r\n   * Gets a value from an object by composed key\r\n   * parser.getValue({ key1: { keyA: 'valueI' }}, 'key1.keyA') ==> 'valueI'\r\n   * @param target\r\n   * @param key\r\n   */",
              "comment": "Gets a value from an object by composed key\r\nparser.getValue({ key1: { keyA: 'valueI' }}, 'key1.keyA') ==> 'valueI'",
              "tags": [
                {
                  "__schema": "PropertyLikeTagSchema",
                  "location": {
                    "filePath": "lib/translate.parser.ts",
                    "line": 16,
                    "character": 6
                  },
                  "tagName": "parameter",
                  "name": "target"
                },
                {
                  "__schema": "PropertyLikeTagSchema",
                  "location": {
                    "filePath": "lib/translate.parser.ts",
                    "line": 17,
                    "character": 6
                  },
                  "tagName": "parameter",
                  "name": "key"
                }
              ]
            }
          }
        ]
      },
      {
        "__schema": "ClassSchema",
        "name": "TranslateDefaultParser",
        "location": {
          "filePath": "lib/translate.parser.ts",
          "line": 22,
          "character": 1
        },
        "signature": "class TranslateDefaultParser",
        "extendsNodes": [
          {
            "__schema": "ExpressionWithTypeArgumentsSchema",
            "name": "extends TranslateParser",
            "location": {
              "filePath": "lib/translate.parser.ts",
              "line": 23,
              "character": 45
            },
            "typeArgs": [],
            "expression": {
              "__schema": "ClassSchema",
              "name": "TranslateParser",
              "location": {
                "filePath": "lib/translate.parser.ts",
                "line": 4,
                "character": 1
              },
              "signature": "class TranslateParser",
              "extendsNodes": [],
              "implementNodes": [],
              "members": [
                {
                  "__schema": "FunctionLikeSchema",
                  "location": {
                    "filePath": "lib/translate.parser.ts",
                    "line": 11,
                    "character": 3
                  },
                  "name": "interpolate",
                  "signature": "(method) TranslateParser.interpolate(expr: string | Function, params?: any): string | undefined",
                  "modifiers": [
                    "abstract"
                  ],
                  "params": [
                    {
                      "__schema": "ParameterSchema",
                      "location": {
                        "filePath": "lib/translate.parser.ts",
                        "line": 11,
                        "character": 24
                      },
                      "name": "expr",
                      "isOptional": false,
                      "type": {
                        "__schema": "TypeUnionSchema",
                        "location": {
                          "filePath": "lib/translate.parser.ts",
                          "line": 11,
                          "character": 30
                        },
                        "types": [
                          {
                            "__schema": "KeywordTypeSchema",
                            "location": {
                              "filePath": "lib/translate.parser.ts",
                              "line": 11,
                              "character": 30
                            },
                            "name": "string"
                          },
                          {
                            "__schema": "TypeRefSchema",
                            "location": {
                              "filePath": "lib/translate.parser.ts",
                              "line": 11,
                              "character": 39
                            },
                            "name": "Function",
                            "packageName": ""
                          }
                        ]
                      }
                    },
                    {
                      "__schema": "ParameterSchema",
                      "location": {
                        "filePath": "lib/translate.parser.ts",
                        "line": 11,
                        "character": 49
                      },
                      "name": "params",
                      "isOptional": true,
                      "type": {
                        "__schema": "KeywordTypeSchema",
                        "location": {
                          "filePath": "lib/translate.parser.ts",
                          "line": 11,
                          "character": 58
                        },
                        "name": "any"
                      }
                    }
                  ],
                  "returnType": {
                    "__schema": "TypeUnionSchema",
                    "location": {
                      "filePath": "lib/translate.parser.ts",
                      "line": 11,
                      "character": 64
                    },
                    "types": [
                      {
                        "__schema": "KeywordTypeSchema",
                        "location": {
                          "filePath": "lib/translate.parser.ts",
                          "line": 11,
                          "character": 64
                        },
                        "name": "string"
                      },
                      {
                        "__schema": "KeywordTypeSchema",
                        "location": {
                          "filePath": "lib/translate.parser.ts",
                          "line": 11,
                          "character": 73
                        },
                        "name": "undefined"
                      }
                    ]
                  },
                  "doc": {
                    "__schema": "DocSchema",
                    "location": {
                      "filePath": "lib/translate.parser.ts",
                      "line": 5,
                      "character": 3
                    },
                    "raw": "/**\r\n   * Interpolates a string to replace parameters\r\n   * \"This is a {{ key }}\" ==> \"This is a value\", with params = { key: \"value\" }\r\n   * @param expr\r\n   * @param params\r\n   */",
                    "comment": "Interpolates a string to replace parameters\r\n\"This is a {{ key }}\" ==> \"This is a value\", with params = { key: \"value\" }",
                    "tags": [
                      {
                        "__schema": "PropertyLikeTagSchema",
                        "location": {
                          "filePath": "lib/translate.parser.ts",
                          "line": 8,
                          "character": 6
                        },
                        "tagName": "parameter",
                        "name": "expr"
                      },
                      {
                        "__schema": "PropertyLikeTagSchema",
                        "location": {
                          "filePath": "lib/translate.parser.ts",
                          "line": 9,
                          "character": 6
                        },
                        "tagName": "parameter",
                        "name": "params"
                      }
                    ]
                  }
                },
                {
                  "__schema": "FunctionLikeSchema",
                  "location": {
                    "filePath": "lib/translate.parser.ts",
                    "line": 19,
                    "character": 3
                  },
                  "name": "getValue",
                  "signature": "(method) TranslateParser.getValue(target: any, key: string): any",
                  "modifiers": [
                    "abstract"
                  ],
                  "params": [
                    {
                      "__schema": "ParameterSchema",
                      "location": {
                        "filePath": "lib/translate.parser.ts",
                        "line": 19,
                        "character": 21
                      },
                      "name": "target",
                      "isOptional": false,
                      "type": {
                        "__schema": "KeywordTypeSchema",
                        "location": {
                          "filePath": "lib/translate.parser.ts",
                          "line": 19,
                          "character": 29
                        },
                        "name": "any"
                      }
                    },
                    {
                      "__schema": "ParameterSchema",
                      "location": {
                        "filePath": "lib/translate.parser.ts",
                        "line": 19,
                        "character": 34
                      },
                      "name": "key",
                      "isOptional": false,
                      "type": {
                        "__schema": "KeywordTypeSchema",
                        "location": {
                          "filePath": "lib/translate.parser.ts",
                          "line": 19,
                          "character": 39
                        },
                        "name": "string"
                      }
                    }
                  ],
                  "returnType": {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "lib/translate.parser.ts",
                      "line": 19,
                      "character": 48
                    },
                    "name": "any"
                  },
                  "doc": {
                    "__schema": "DocSchema",
                    "location": {
                      "filePath": "lib/translate.parser.ts",
                      "line": 13,
                      "character": 3
                    },
                    "raw": "/**\r\n   * Gets a value from an object by composed key\r\n   * parser.getValue({ key1: { keyA: 'valueI' }}, 'key1.keyA') ==> 'valueI'\r\n   * @param target\r\n   * @param key\r\n   */",
                    "comment": "Gets a value from an object by composed key\r\nparser.getValue({ key1: { keyA: 'valueI' }}, 'key1.keyA') ==> 'valueI'",
                    "tags": [
                      {
                        "__schema": "PropertyLikeTagSchema",
                        "location": {
                          "filePath": "lib/translate.parser.ts",
                          "line": 16,
                          "character": 6
                        },
                        "tagName": "parameter",
                        "name": "target"
                      },
                      {
                        "__schema": "PropertyLikeTagSchema",
                        "location": {
                          "filePath": "lib/translate.parser.ts",
                          "line": 17,
                          "character": 6
                        },
                        "tagName": "parameter",
                        "name": "key"
                      }
                    ]
                  }
                }
              ]
            }
          }
        ],
        "implementNodes": [],
        "members": [
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "lib/translate.parser.ts",
              "line": 24,
              "character": 3
            },
            "name": "templateMatcher",
            "signature": "(property) TranslateDefaultParser.templateMatcher: RegExp",
            "isOptional": false,
            "type": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "lib/translate.parser.ts",
                "line": 24,
                "character": 20
              },
              "name": "RegExp",
              "packageName": ""
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.parser.ts",
              "line": 26,
              "character": 3
            },
            "name": "interpolate",
            "signature": "(method) TranslateDefaultParser.interpolate(expr: string | Function, params?: any): string",
            "modifiers": [
              "public"
            ],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.parser.ts",
                  "line": 26,
                  "character": 22
                },
                "name": "expr",
                "isOptional": false,
                "type": {
                  "__schema": "TypeUnionSchema",
                  "location": {
                    "filePath": "lib/translate.parser.ts",
                    "line": 26,
                    "character": 28
                  },
                  "types": [
                    {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "lib/translate.parser.ts",
                        "line": 26,
                        "character": 28
                      },
                      "name": "string"
                    },
                    {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "lib/translate.parser.ts",
                        "line": 26,
                        "character": 37
                      },
                      "name": "Function",
                      "packageName": ""
                    }
                  ]
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.parser.ts",
                  "line": 26,
                  "character": 47
                },
                "name": "params",
                "isOptional": true,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.parser.ts",
                    "line": 26,
                    "character": 56
                  },
                  "name": "any"
                }
              }
            ],
            "returnType": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.parser.ts",
                "line": 26,
                "character": 62
              },
              "name": "string"
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.parser.ts",
              "line": 41,
              "character": 3
            },
            "name": "getValue",
            "signature": "(method) TranslateDefaultParser.getValue(target: any, key: string): any",
            "modifiers": [],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.parser.ts",
                  "line": 41,
                  "character": 12
                },
                "name": "target",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.parser.ts",
                    "line": 41,
                    "character": 20
                  },
                  "name": "any"
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.parser.ts",
                  "line": 41,
                  "character": 25
                },
                "name": "key",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.parser.ts",
                    "line": 41,
                    "character": 30
                  },
                  "name": "string"
                }
              }
            ],
            "returnType": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.parser.ts",
                "line": 41,
                "character": 39
              },
              "name": "any"
            }
          }
        ]
      },
      {
        "__schema": "ClassSchema",
        "name": "TranslateCompiler",
        "location": {
          "filePath": "lib/translate.compiler.ts",
          "line": 3,
          "character": 1
        },
        "signature": "class TranslateCompiler",
        "extendsNodes": [],
        "implementNodes": [],
        "members": [
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.compiler.ts",
              "line": 4,
              "character": 3
            },
            "name": "compile",
            "signature": "(method) TranslateCompiler.compile(value: string, lang: string): string | Function",
            "modifiers": [
              "abstract"
            ],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.compiler.ts",
                  "line": 4,
                  "character": 20
                },
                "name": "value",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.compiler.ts",
                    "line": 4,
                    "character": 27
                  },
                  "name": "string"
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.compiler.ts",
                  "line": 4,
                  "character": 35
                },
                "name": "lang",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.compiler.ts",
                    "line": 4,
                    "character": 41
                  },
                  "name": "string"
                }
              }
            ],
            "returnType": {
              "__schema": "TypeUnionSchema",
              "location": {
                "filePath": "lib/translate.compiler.ts",
                "line": 4,
                "character": 50
              },
              "types": [
                {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.compiler.ts",
                    "line": 4,
                    "character": 50
                  },
                  "name": "string"
                },
                {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "lib/translate.compiler.ts",
                    "line": 4,
                    "character": 59
                  },
                  "name": "Function",
                  "packageName": ""
                }
              ]
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.compiler.ts",
              "line": 6,
              "character": 3
            },
            "name": "compileTranslations",
            "signature": "(method) TranslateCompiler.compileTranslations(translations: any, lang: string): any",
            "modifiers": [
              "abstract"
            ],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.compiler.ts",
                  "line": 6,
                  "character": 32
                },
                "name": "translations",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.compiler.ts",
                    "line": 6,
                    "character": 46
                  },
                  "name": "any"
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.compiler.ts",
                  "line": 6,
                  "character": 51
                },
                "name": "lang",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.compiler.ts",
                    "line": 6,
                    "character": 57
                  },
                  "name": "string"
                }
              }
            ],
            "returnType": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.compiler.ts",
                "line": 6,
                "character": 66
              },
              "name": "any"
            }
          }
        ]
      },
      {
        "__schema": "ClassSchema",
        "name": "TranslateFakeCompiler",
        "location": {
          "filePath": "lib/translate.compiler.ts",
          "line": 12,
          "character": 1
        },
        "signature": "class TranslateFakeCompiler",
        "extendsNodes": [
          {
            "__schema": "ExpressionWithTypeArgumentsSchema",
            "name": "extends TranslateCompiler",
            "location": {
              "filePath": "lib/translate.compiler.ts",
              "line": 13,
              "character": 44
            },
            "typeArgs": [],
            "expression": {
              "__schema": "ClassSchema",
              "name": "TranslateCompiler",
              "location": {
                "filePath": "lib/translate.compiler.ts",
                "line": 3,
                "character": 1
              },
              "signature": "class TranslateCompiler",
              "extendsNodes": [],
              "implementNodes": [],
              "members": [
                {
                  "__schema": "FunctionLikeSchema",
                  "location": {
                    "filePath": "lib/translate.compiler.ts",
                    "line": 4,
                    "character": 3
                  },
                  "name": "compile",
                  "signature": "(method) TranslateCompiler.compile(value: string, lang: string): string | Function",
                  "modifiers": [
                    "abstract"
                  ],
                  "params": [
                    {
                      "__schema": "ParameterSchema",
                      "location": {
                        "filePath": "lib/translate.compiler.ts",
                        "line": 4,
                        "character": 20
                      },
                      "name": "value",
                      "isOptional": false,
                      "type": {
                        "__schema": "KeywordTypeSchema",
                        "location": {
                          "filePath": "lib/translate.compiler.ts",
                          "line": 4,
                          "character": 27
                        },
                        "name": "string"
                      }
                    },
                    {
                      "__schema": "ParameterSchema",
                      "location": {
                        "filePath": "lib/translate.compiler.ts",
                        "line": 4,
                        "character": 35
                      },
                      "name": "lang",
                      "isOptional": false,
                      "type": {
                        "__schema": "KeywordTypeSchema",
                        "location": {
                          "filePath": "lib/translate.compiler.ts",
                          "line": 4,
                          "character": 41
                        },
                        "name": "string"
                      }
                    }
                  ],
                  "returnType": {
                    "__schema": "TypeUnionSchema",
                    "location": {
                      "filePath": "lib/translate.compiler.ts",
                      "line": 4,
                      "character": 50
                    },
                    "types": [
                      {
                        "__schema": "KeywordTypeSchema",
                        "location": {
                          "filePath": "lib/translate.compiler.ts",
                          "line": 4,
                          "character": 50
                        },
                        "name": "string"
                      },
                      {
                        "__schema": "TypeRefSchema",
                        "location": {
                          "filePath": "lib/translate.compiler.ts",
                          "line": 4,
                          "character": 59
                        },
                        "name": "Function",
                        "packageName": ""
                      }
                    ]
                  }
                },
                {
                  "__schema": "FunctionLikeSchema",
                  "location": {
                    "filePath": "lib/translate.compiler.ts",
                    "line": 6,
                    "character": 3
                  },
                  "name": "compileTranslations",
                  "signature": "(method) TranslateCompiler.compileTranslations(translations: any, lang: string): any",
                  "modifiers": [
                    "abstract"
                  ],
                  "params": [
                    {
                      "__schema": "ParameterSchema",
                      "location": {
                        "filePath": "lib/translate.compiler.ts",
                        "line": 6,
                        "character": 32
                      },
                      "name": "translations",
                      "isOptional": false,
                      "type": {
                        "__schema": "KeywordTypeSchema",
                        "location": {
                          "filePath": "lib/translate.compiler.ts",
                          "line": 6,
                          "character": 46
                        },
                        "name": "any"
                      }
                    },
                    {
                      "__schema": "ParameterSchema",
                      "location": {
                        "filePath": "lib/translate.compiler.ts",
                        "line": 6,
                        "character": 51
                      },
                      "name": "lang",
                      "isOptional": false,
                      "type": {
                        "__schema": "KeywordTypeSchema",
                        "location": {
                          "filePath": "lib/translate.compiler.ts",
                          "line": 6,
                          "character": 57
                        },
                        "name": "string"
                      }
                    }
                  ],
                  "returnType": {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "lib/translate.compiler.ts",
                      "line": 6,
                      "character": 66
                    },
                    "name": "any"
                  }
                }
              ]
            }
          }
        ],
        "implementNodes": [],
        "members": [
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.compiler.ts",
              "line": 14,
              "character": 3
            },
            "name": "compile",
            "signature": "(method) TranslateFakeCompiler.compile(value: string, lang: string): string | Function",
            "modifiers": [],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.compiler.ts",
                  "line": 14,
                  "character": 11
                },
                "name": "value",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.compiler.ts",
                    "line": 14,
                    "character": 18
                  },
                  "name": "string"
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.compiler.ts",
                  "line": 14,
                  "character": 26
                },
                "name": "lang",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.compiler.ts",
                    "line": 14,
                    "character": 32
                  },
                  "name": "string"
                }
              }
            ],
            "returnType": {
              "__schema": "TypeUnionSchema",
              "location": {
                "filePath": "lib/translate.compiler.ts",
                "line": 14,
                "character": 41
              },
              "types": [
                {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.compiler.ts",
                    "line": 14,
                    "character": 41
                  },
                  "name": "string"
                },
                {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "lib/translate.compiler.ts",
                    "line": 14,
                    "character": 50
                  },
                  "name": "Function",
                  "packageName": ""
                }
              ]
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.compiler.ts",
              "line": 18,
              "character": 3
            },
            "name": "compileTranslations",
            "signature": "(method) TranslateFakeCompiler.compileTranslations(translations: any, lang: string): any",
            "modifiers": [],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.compiler.ts",
                  "line": 18,
                  "character": 23
                },
                "name": "translations",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.compiler.ts",
                    "line": 18,
                    "character": 37
                  },
                  "name": "any"
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.compiler.ts",
                  "line": 18,
                  "character": 42
                },
                "name": "lang",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.compiler.ts",
                    "line": 18,
                    "character": 48
                  },
                  "name": "string"
                }
              }
            ],
            "returnType": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.compiler.ts",
                "line": 18,
                "character": 57
              },
              "name": "any"
            }
          }
        ],
        "doc": {
          "__schema": "DocSchema",
          "location": {
            "filePath": "lib/translate.compiler.ts",
            "line": 9,
            "character": 1
          },
          "raw": "/**\r\n * This compiler is just a placeholder that does nothing, in case you don't need a compiler at all\r\n */",
          "comment": "This compiler is just a placeholder that does nothing, in case you don't need a compiler at all"
        }
      },
      {
        "__schema": "ClassSchema",
        "name": "TranslateDirective",
        "location": {
          "filePath": "lib/translate.directive.ts",
          "line": 6,
          "character": 1
        },
        "signature": "class TranslateDirective",
        "extendsNodes": [],
        "implementNodes": [
          {
            "__schema": "ExpressionWithTypeArgumentsSchema",
            "name": "implements AfterViewChecked, OnDestroy",
            "location": {
              "filePath": "lib/translate.directive.ts",
              "line": 9,
              "character": 44
            },
            "typeArgs": [],
            "expression": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "lib/translate.directive.ts",
                "line": 9,
                "character": 44
              },
              "name": "AfterViewChecked",
              "componentId": {
                "name": "core",
                "version": "15.0.0",
                "scope": "ngx-translate.packages"
              }
            }
          },
          {
            "__schema": "ExpressionWithTypeArgumentsSchema",
            "name": "implements AfterViewChecked, OnDestroy",
            "location": {
              "filePath": "lib/translate.directive.ts",
              "line": 9,
              "character": 62
            },
            "typeArgs": [],
            "expression": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "lib/translate.directive.ts",
                "line": 9,
                "character": 62
              },
              "name": "OnDestroy",
              "componentId": {
                "name": "core",
                "version": "15.0.0",
                "scope": "ngx-translate.packages"
              }
            }
          }
        ],
        "members": [
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "lib/translate.directive.ts",
              "line": 10,
              "character": 3
            },
            "name": "key",
            "signature": "(property) TranslateDirective.key: string",
            "isOptional": false,
            "type": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.directive.ts",
                "line": 10,
                "character": 9
              },
              "name": "string"
            }
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "lib/translate.directive.ts",
              "line": 11,
              "character": 3
            },
            "name": "lastParams",
            "signature": "(property) TranslateDirective.lastParams: any",
            "isOptional": false,
            "type": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.directive.ts",
                "line": 11,
                "character": 15
              },
              "name": "any"
            }
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "lib/translate.directive.ts",
              "line": 12,
              "character": 3
            },
            "name": "currentParams",
            "signature": "(property) TranslateDirective.currentParams: any",
            "isOptional": false,
            "type": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.directive.ts",
                "line": 12,
                "character": 18
              },
              "name": "any"
            }
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "lib/translate.directive.ts",
              "line": 13,
              "character": 3
            },
            "name": "onLangChangeSub",
            "signature": "(property) TranslateDirective.onLangChangeSub: Subscription",
            "isOptional": false,
            "type": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "lib/translate.directive.ts",
                "line": 13,
                "character": 3
              },
              "name": "Subscription",
              "packageName": "rxjs"
            }
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "lib/translate.directive.ts",
              "line": 14,
              "character": 3
            },
            "name": "onDefaultLangChangeSub",
            "signature": "(property) TranslateDirective.onDefaultLangChangeSub: Subscription",
            "isOptional": false,
            "type": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "lib/translate.directive.ts",
                "line": 14,
                "character": 3
              },
              "name": "Subscription",
              "packageName": "rxjs"
            }
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "lib/translate.directive.ts",
              "line": 15,
              "character": 3
            },
            "name": "onTranslationChangeSub",
            "signature": "(property) TranslateDirective.onTranslationChangeSub: Subscription",
            "isOptional": false,
            "type": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "lib/translate.directive.ts",
                "line": 15,
                "character": 3
              },
              "name": "Subscription",
              "packageName": "rxjs"
            }
          },
          {
            "__schema": "SetAccessorSchema",
            "location": {
              "filePath": "lib/translate.directive.ts",
              "line": 17,
              "character": 3
            },
            "name": "translate",
            "signature": "(setter) TranslateDirective.translate: string",
            "param": {
              "__schema": "ParameterSchema",
              "location": {
                "filePath": "lib/translate.directive.ts",
                "line": 17,
                "character": 26
              },
              "name": "key",
              "isOptional": false,
              "type": {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "lib/translate.directive.ts",
                  "line": 17,
                  "character": 31
                },
                "name": "string"
              }
            }
          },
          {
            "__schema": "SetAccessorSchema",
            "location": {
              "filePath": "lib/translate.directive.ts",
              "line": 24,
              "character": 3
            },
            "name": "translateParams",
            "signature": "(setter) TranslateDirective.translateParams: any",
            "param": {
              "__schema": "ParameterSchema",
              "location": {
                "filePath": "lib/translate.directive.ts",
                "line": 24,
                "character": 32
              },
              "name": "params",
              "isOptional": false,
              "type": {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "lib/translate.directive.ts",
                  "line": 24,
                  "character": 40
                },
                "name": "any"
              }
            }
          },
          {
            "__schema": "ConstructorSchema",
            "location": {
              "filePath": "lib/translate.directive.ts",
              "line": 31,
              "character": 3
            },
            "name": "constructor",
            "signature": "constructor TranslateDirective(translateService: TranslateService, element: ElementRef, _ref: ChangeDetectorRef): TranslateDirective",
            "modifiers": [],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.directive.ts",
                  "line": 31,
                  "character": 15
                },
                "name": "translateService",
                "isOptional": false,
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "lib/translate.directive.ts",
                    "line": 31,
                    "character": 41
                  },
                  "name": "TranslateService",
                  "internalFilePath": "lib\\translate.service.ts"
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.directive.ts",
                  "line": 31,
                  "character": 59
                },
                "name": "element",
                "isOptional": false,
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "lib/translate.directive.ts",
                    "line": 31,
                    "character": 76
                  },
                  "name": "ElementRef",
                  "packageName": "@angular/core"
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.directive.ts",
                  "line": 31,
                  "character": 88
                },
                "name": "_ref",
                "isOptional": false,
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "lib/translate.directive.ts",
                    "line": 31,
                    "character": 102
                  },
                  "name": "ChangeDetectorRef",
                  "packageName": "@angular/core"
                }
              }
            ],
            "returnType": {
              "__schema": "ThisTypeSchema",
              "location": {
                "filePath": "lib/translate.directive.ts",
                "line": 6,
                "character": 1
              }
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.directive.ts",
              "line": 56,
              "character": 3
            },
            "name": "ngAfterViewChecked",
            "signature": "(method) TranslateDirective.ngAfterViewChecked(): void",
            "modifiers": [],
            "params": [],
            "returnType": {
              "__schema": "InferenceTypeSchema",
              "location": {
                "filePath": "lib/translate.directive.ts",
                "line": 56,
                "character": 3
              },
              "type": "void"
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.directive.ts",
              "line": 60,
              "character": 3
            },
            "name": "checkNodes",
            "signature": "(method) TranslateDirective.checkNodes(forceUpdate?: boolean, translations?: any): void",
            "modifiers": [],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.directive.ts",
                  "line": 60,
                  "character": 14
                },
                "name": "forceUpdate",
                "isOptional": false,
                "defaultValue": "false",
                "type": {
                  "__schema": "InferenceTypeSchema",
                  "location": {
                    "filePath": "lib/translate.directive.ts",
                    "line": 60,
                    "character": 14
                  },
                  "type": "boolean"
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.directive.ts",
                  "line": 60,
                  "character": 35
                },
                "name": "translations",
                "isOptional": true,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.directive.ts",
                    "line": 60,
                    "character": 50
                  },
                  "name": "any"
                }
              }
            ],
            "returnType": {
              "__schema": "InferenceTypeSchema",
              "location": {
                "filePath": "lib/translate.directive.ts",
                "line": 60,
                "character": 3
              },
              "type": "void"
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.directive.ts",
              "line": 105,
              "character": 3
            },
            "name": "updateValue",
            "signature": "(method) TranslateDirective.updateValue(key: string, node: any, translations: any): void",
            "modifiers": [],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.directive.ts",
                  "line": 105,
                  "character": 15
                },
                "name": "key",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.directive.ts",
                    "line": 105,
                    "character": 20
                  },
                  "name": "string"
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.directive.ts",
                  "line": 105,
                  "character": 28
                },
                "name": "node",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.directive.ts",
                    "line": 105,
                    "character": 34
                  },
                  "name": "any"
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.directive.ts",
                  "line": 105,
                  "character": 39
                },
                "name": "translations",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.directive.ts",
                    "line": 105,
                    "character": 53
                  },
                  "name": "any"
                }
              }
            ],
            "returnType": {
              "__schema": "InferenceTypeSchema",
              "location": {
                "filePath": "lib/translate.directive.ts",
                "line": 105,
                "character": 3
              },
              "type": "void"
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.directive.ts",
              "line": 139,
              "character": 3
            },
            "name": "getContent",
            "signature": "(method) TranslateDirective.getContent(node: any): string",
            "modifiers": [],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.directive.ts",
                  "line": 139,
                  "character": 14
                },
                "name": "node",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.directive.ts",
                    "line": 139,
                    "character": 20
                  },
                  "name": "any"
                }
              }
            ],
            "returnType": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.directive.ts",
                "line": 139,
                "character": 26
              },
              "name": "string"
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.directive.ts",
              "line": 143,
              "character": 3
            },
            "name": "setContent",
            "signature": "(method) TranslateDirective.setContent(node: any, content: string): void",
            "modifiers": [],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.directive.ts",
                  "line": 143,
                  "character": 14
                },
                "name": "node",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.directive.ts",
                    "line": 143,
                    "character": 20
                  },
                  "name": "any"
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.directive.ts",
                  "line": 143,
                  "character": 25
                },
                "name": "content",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.directive.ts",
                    "line": 143,
                    "character": 34
                  },
                  "name": "string"
                }
              }
            ],
            "returnType": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.directive.ts",
                "line": 143,
                "character": 43
              },
              "name": "void"
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.directive.ts",
              "line": 151,
              "character": 3
            },
            "name": "ngOnDestroy",
            "signature": "(method) TranslateDirective.ngOnDestroy(): void",
            "modifiers": [],
            "params": [],
            "returnType": {
              "__schema": "InferenceTypeSchema",
              "location": {
                "filePath": "lib/translate.directive.ts",
                "line": 151,
                "character": 3
              },
              "type": "void"
            }
          }
        ]
      },
      {
        "__schema": "ClassSchema",
        "name": "TranslatePipe",
        "location": {
          "filePath": "lib/translate.pipe.ts",
          "line": 7,
          "character": 1
        },
        "signature": "class TranslatePipe",
        "extendsNodes": [],
        "implementNodes": [
          {
            "__schema": "ExpressionWithTypeArgumentsSchema",
            "name": "implements PipeTransform, OnDestroy",
            "location": {
              "filePath": "lib/translate.pipe.ts",
              "line": 12,
              "character": 39
            },
            "typeArgs": [],
            "expression": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "lib/translate.pipe.ts",
                "line": 12,
                "character": 39
              },
              "name": "PipeTransform",
              "componentId": {
                "name": "core",
                "version": "15.0.0",
                "scope": "ngx-translate.packages"
              }
            }
          },
          {
            "__schema": "ExpressionWithTypeArgumentsSchema",
            "name": "implements PipeTransform, OnDestroy",
            "location": {
              "filePath": "lib/translate.pipe.ts",
              "line": 12,
              "character": 54
            },
            "typeArgs": [],
            "expression": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "lib/translate.pipe.ts",
                "line": 12,
                "character": 54
              },
              "name": "OnDestroy",
              "componentId": {
                "name": "core",
                "version": "15.0.0",
                "scope": "ngx-translate.packages"
              }
            }
          }
        ],
        "members": [
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "lib/translate.pipe.ts",
              "line": 13,
              "character": 3
            },
            "name": "value",
            "signature": "(property) TranslatePipe.value: string",
            "isOptional": false,
            "type": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.pipe.ts",
                "line": 13,
                "character": 10
              },
              "name": "string"
            }
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "lib/translate.pipe.ts",
              "line": 14,
              "character": 3
            },
            "name": "lastKey",
            "signature": "(property) TranslatePipe.lastKey: string | null",
            "isOptional": false,
            "type": {
              "__schema": "TypeUnionSchema",
              "location": {
                "filePath": "lib/translate.pipe.ts",
                "line": 14,
                "character": 12
              },
              "types": [
                {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.pipe.ts",
                    "line": 14,
                    "character": 12
                  },
                  "name": "string"
                },
                {
                  "__schema": "LiteralTypeSchema",
                  "location": {
                    "filePath": "lib/translate.pipe.ts",
                    "line": 14,
                    "character": 21
                  },
                  "name": "null"
                }
              ]
            }
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "lib/translate.pipe.ts",
              "line": 15,
              "character": 3
            },
            "name": "lastParams",
            "signature": "(property) TranslatePipe.lastParams: any[]",
            "isOptional": false,
            "type": {
              "__schema": "TypeArraySchema",
              "location": {
                "filePath": "lib/translate.pipe.ts",
                "line": 15,
                "character": 15
              },
              "type": {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "lib/translate.pipe.ts",
                  "line": 15,
                  "character": 15
                },
                "name": "any"
              }
            }
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "lib/translate.pipe.ts",
              "line": 16,
              "character": 3
            },
            "name": "onTranslationChange",
            "signature": "(property) TranslatePipe.onTranslationChange: Subscription | undefined",
            "isOptional": false,
            "type": {
              "__schema": "TypeUnionSchema",
              "location": {
                "filePath": "lib/translate.pipe.ts",
                "line": 16,
                "character": 24
              },
              "types": [
                {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "lib/translate.pipe.ts",
                    "line": 16,
                    "character": 24
                  },
                  "name": "Subscription",
                  "packageName": "rxjs"
                },
                {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.pipe.ts",
                    "line": 16,
                    "character": 39
                  },
                  "name": "undefined"
                }
              ]
            }
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "lib/translate.pipe.ts",
              "line": 17,
              "character": 3
            },
            "name": "onLangChange",
            "signature": "(property) TranslatePipe.onLangChange: Subscription | undefined",
            "isOptional": false,
            "type": {
              "__schema": "TypeUnionSchema",
              "location": {
                "filePath": "lib/translate.pipe.ts",
                "line": 17,
                "character": 17
              },
              "types": [
                {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "lib/translate.pipe.ts",
                    "line": 17,
                    "character": 17
                  },
                  "name": "Subscription",
                  "packageName": "rxjs"
                },
                {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.pipe.ts",
                    "line": 17,
                    "character": 32
                  },
                  "name": "undefined"
                }
              ]
            }
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "lib/translate.pipe.ts",
              "line": 18,
              "character": 3
            },
            "name": "onDefaultLangChange",
            "signature": "(property) TranslatePipe.onDefaultLangChange: Subscription | undefined",
            "isOptional": false,
            "type": {
              "__schema": "TypeUnionSchema",
              "location": {
                "filePath": "lib/translate.pipe.ts",
                "line": 18,
                "character": 24
              },
              "types": [
                {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "lib/translate.pipe.ts",
                    "line": 18,
                    "character": 24
                  },
                  "name": "Subscription",
                  "packageName": "rxjs"
                },
                {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.pipe.ts",
                    "line": 18,
                    "character": 39
                  },
                  "name": "undefined"
                }
              ]
            }
          },
          {
            "__schema": "ConstructorSchema",
            "location": {
              "filePath": "lib/translate.pipe.ts",
              "line": 20,
              "character": 3
            },
            "name": "constructor",
            "signature": "constructor TranslatePipe(translate: TranslateService, _ref: ChangeDetectorRef): TranslatePipe",
            "modifiers": [],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.pipe.ts",
                  "line": 20,
                  "character": 15
                },
                "name": "translate",
                "isOptional": false,
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "lib/translate.pipe.ts",
                    "line": 20,
                    "character": 34
                  },
                  "name": "TranslateService",
                  "internalFilePath": "lib\\translate.service.ts"
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.pipe.ts",
                  "line": 20,
                  "character": 52
                },
                "name": "_ref",
                "isOptional": false,
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "lib/translate.pipe.ts",
                    "line": 20,
                    "character": 66
                  },
                  "name": "ChangeDetectorRef",
                  "packageName": "@angular/core"
                }
              }
            ],
            "returnType": {
              "__schema": "ThisTypeSchema",
              "location": {
                "filePath": "lib/translate.pipe.ts",
                "line": 7,
                "character": 1
              }
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.pipe.ts",
              "line": 23,
              "character": 3
            },
            "name": "updateValue",
            "signature": "(method) TranslatePipe.updateValue(key: string, interpolateParams?: Object, translations?: any): void",
            "modifiers": [],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.pipe.ts",
                  "line": 23,
                  "character": 15
                },
                "name": "key",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.pipe.ts",
                    "line": 23,
                    "character": 20
                  },
                  "name": "string"
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.pipe.ts",
                  "line": 23,
                  "character": 28
                },
                "name": "interpolateParams",
                "isOptional": true,
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "lib/translate.pipe.ts",
                    "line": 23,
                    "character": 48
                  },
                  "name": "Object",
                  "packageName": ""
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.pipe.ts",
                  "line": 23,
                  "character": 56
                },
                "name": "translations",
                "isOptional": true,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.pipe.ts",
                    "line": 23,
                    "character": 71
                  },
                  "name": "any"
                }
              }
            ],
            "returnType": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.pipe.ts",
                "line": 23,
                "character": 77
              },
              "name": "void"
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.pipe.ts",
              "line": 40,
              "character": 3
            },
            "name": "transform",
            "signature": "(method) TranslatePipe.transform(query: string, ...args: any[]): any",
            "modifiers": [],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.pipe.ts",
                  "line": 40,
                  "character": 13
                },
                "name": "query",
                "isOptional": false,
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.pipe.ts",
                    "line": 40,
                    "character": 20
                  },
                  "name": "string"
                }
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "lib/translate.pipe.ts",
                  "line": 40,
                  "character": 28
                },
                "name": "args",
                "isOptional": false,
                "type": {
                  "__schema": "TypeArraySchema",
                  "location": {
                    "filePath": "lib/translate.pipe.ts",
                    "line": 40,
                    "character": 37
                  },
                  "type": {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "lib/translate.pipe.ts",
                      "line": 40,
                      "character": 37
                    },
                    "name": "any"
                  }
                }
              }
            ],
            "returnType": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.pipe.ts",
                "line": 40,
                "character": 45
              },
              "name": "any"
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "lib/translate.pipe.ts",
              "line": 131,
              "character": 3
            },
            "name": "ngOnDestroy",
            "signature": "(method) TranslatePipe.ngOnDestroy(): void",
            "modifiers": [],
            "params": [],
            "returnType": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.pipe.ts",
                "line": 131,
                "character": 18
              },
              "name": "void"
            }
          }
        ]
      },
      {
        "__schema": "ClassSchema",
        "name": "TranslateStore",
        "location": {
          "filePath": "lib/translate.store.ts",
          "line": 4,
          "character": 1
        },
        "signature": "class TranslateStore",
        "extendsNodes": [],
        "implementNodes": [],
        "members": [
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "lib/translate.store.ts",
              "line": 8,
              "character": 3
            },
            "name": "defaultLang",
            "signature": "(property) TranslateStore.defaultLang: string",
            "isOptional": false,
            "type": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.store.ts",
                "line": 8,
                "character": 24
              },
              "name": "string"
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "lib/translate.store.ts",
                "line": 5,
                "character": 3
              },
              "raw": "/**\r\n   * The default lang to fallback when translations are missing on the current lang\r\n   */",
              "comment": "The default lang to fallback when translations are missing on the current lang"
            }
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "lib/translate.store.ts",
              "line": 13,
              "character": 3
            },
            "name": "currentLang",
            "signature": "(property) TranslateStore.currentLang: string",
            "isOptional": false,
            "type": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.store.ts",
                "line": 13,
                "character": 23
              },
              "name": "string"
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "lib/translate.store.ts",
                "line": 10,
                "character": 3
              },
              "raw": "/**\r\n   * The lang currently used\r\n   */",
              "comment": "The lang currently used"
            }
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "lib/translate.store.ts",
              "line": 18,
              "character": 3
            },
            "name": "translations",
            "signature": "(property) TranslateStore.translations: any",
            "isOptional": false,
            "type": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "lib/translate.store.ts",
                "line": 18,
                "character": 24
              },
              "name": "any"
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "lib/translate.store.ts",
                "line": 15,
                "character": 3
              },
              "raw": "/**\r\n   * a list of translations per lang\r\n   */",
              "comment": "a list of translations per lang"
            }
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "lib/translate.store.ts",
              "line": 23,
              "character": 3
            },
            "name": "langs",
            "signature": "(property) TranslateStore.langs: string[]",
            "isOptional": false,
            "type": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "lib/translate.store.ts",
                "line": 23,
                "character": 17
              },
              "name": "Array",
              "packageName": "",
              "typeArgs": [
                {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "lib/translate.store.ts",
                    "line": 23,
                    "character": 23
                  },
                  "name": "string"
                }
              ]
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "lib/translate.store.ts",
                "line": 20,
                "character": 3
              },
              "raw": "/**\r\n   * an array of langs\r\n   */",
              "comment": "an array of langs"
            }
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "lib/translate.store.ts",
              "line": 31,
              "character": 3
            },
            "name": "onTranslationChange",
            "signature": "(property) TranslateStore.onTranslationChange: EventEmitter<TranslationChangeEvent>",
            "isOptional": false,
            "type": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "lib/translate.store.ts",
                "line": 31,
                "character": 31
              },
              "name": "EventEmitter",
              "packageName": "@angular/core",
              "typeArgs": [
                {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "lib/translate.store.ts",
                    "line": 31,
                    "character": 44
                  },
                  "name": "TranslationChangeEvent",
                  "internalFilePath": "lib\\translate.service.ts"
                }
              ]
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "lib/translate.store.ts",
                "line": 25,
                "character": 3
              },
              "raw": "/**\r\n   * An EventEmitter to listen to translation change events\r\n   * onTranslationChange.subscribe((params: TranslationChangeEvent) => {\r\n     *     // do something\r\n     * });\r\n   */",
              "comment": "An EventEmitter to listen to translation change events\r\nonTranslationChange.subscribe((params: TranslationChangeEvent) => {\r\n // do something\r\n });"
            }
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "lib/translate.store.ts",
              "line": 39,
              "character": 3
            },
            "name": "onLangChange",
            "signature": "(property) TranslateStore.onLangChange: EventEmitter<LangChangeEvent>",
            "isOptional": false,
            "type": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "lib/translate.store.ts",
                "line": 39,
                "character": 24
              },
              "name": "EventEmitter",
              "packageName": "@angular/core",
              "typeArgs": [
                {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "lib/translate.store.ts",
                    "line": 39,
                    "character": 37
                  },
                  "name": "LangChangeEvent",
                  "internalFilePath": "lib\\translate.service.ts"
                }
              ]
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "lib/translate.store.ts",
                "line": 33,
                "character": 3
              },
              "raw": "/**\r\n   * An EventEmitter to listen to lang change events\r\n   * onLangChange.subscribe((params: LangChangeEvent) => {\r\n     *     // do something\r\n     * });\r\n   */",
              "comment": "An EventEmitter to listen to lang change events\r\nonLangChange.subscribe((params: LangChangeEvent) => {\r\n // do something\r\n });"
            }
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "lib/translate.store.ts",
              "line": 47,
              "character": 3
            },
            "name": "onDefaultLangChange",
            "signature": "(property) TranslateStore.onDefaultLangChange: EventEmitter<DefaultLangChangeEvent>",
            "isOptional": false,
            "type": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "lib/translate.store.ts",
                "line": 47,
                "character": 31
              },
              "name": "EventEmitter",
              "packageName": "@angular/core",
              "typeArgs": [
                {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "lib/translate.store.ts",
                    "line": 47,
                    "character": 44
                  },
                  "name": "DefaultLangChangeEvent",
                  "internalFilePath": "lib\\translate.service.ts"
                }
              ]
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "lib/translate.store.ts",
                "line": 41,
                "character": 3
              },
              "raw": "/**\r\n   * An EventEmitter to listen to default lang change events\r\n   * onDefaultLangChange.subscribe((params: DefaultLangChangeEvent) => {\r\n     *     // do something\r\n     * });\r\n   */",
              "comment": "An EventEmitter to listen to default lang change events\r\nonDefaultLangChange.subscribe((params: DefaultLangChangeEvent) => {\r\n // do something\r\n });"
            }
          }
        ]
      },
      {
        "__schema": "InterfaceSchema",
        "location": {
          "filePath": "public-api.ts",
          "line": 20,
          "character": 1
        },
        "name": "TranslateModuleConfig",
        "signature": "interface TranslateModuleConfig",
        "extendsNodes": [],
        "members": [
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "public-api.ts",
              "line": 21,
              "character": 3
            },
            "name": "loader",
            "signature": "(property) TranslateModuleConfig.loader?: Provider | undefined",
            "isOptional": true,
            "type": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "public-api.ts",
                "line": 21,
                "character": 12
              },
              "name": "Provider",
              "packageName": "@angular/core"
            }
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "public-api.ts",
              "line": 22,
              "character": 3
            },
            "name": "compiler",
            "signature": "(property) TranslateModuleConfig.compiler?: Provider | undefined",
            "isOptional": true,
            "type": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "public-api.ts",
                "line": 22,
                "character": 14
              },
              "name": "Provider",
              "packageName": "@angular/core"
            }
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "public-api.ts",
              "line": 23,
              "character": 3
            },
            "name": "parser",
            "signature": "(property) TranslateModuleConfig.parser?: Provider | undefined",
            "isOptional": true,
            "type": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "public-api.ts",
                "line": 23,
                "character": 12
              },
              "name": "Provider",
              "packageName": "@angular/core"
            }
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "public-api.ts",
              "line": 24,
              "character": 3
            },
            "name": "missingTranslationHandler",
            "signature": "(property) TranslateModuleConfig.missingTranslationHandler?: Provider | undefined",
            "isOptional": true,
            "type": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "public-api.ts",
                "line": 24,
                "character": 31
              },
              "name": "Provider",
              "packageName": "@angular/core"
            }
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "public-api.ts",
              "line": 26,
              "character": 3
            },
            "name": "isolate",
            "signature": "(property) TranslateModuleConfig.isolate?: boolean | undefined",
            "isOptional": true,
            "type": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "public-api.ts",
                "line": 26,
                "character": 13
              },
              "name": "boolean"
            }
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "public-api.ts",
              "line": 28,
              "character": 3
            },
            "name": "extend",
            "signature": "(property) TranslateModuleConfig.extend?: boolean | undefined",
            "isOptional": true,
            "type": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "public-api.ts",
                "line": 28,
                "character": 12
              },
              "name": "boolean"
            }
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "public-api.ts",
              "line": 29,
              "character": 3
            },
            "name": "useDefaultLang",
            "signature": "(property) TranslateModuleConfig.useDefaultLang?: boolean | undefined",
            "isOptional": true,
            "type": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "public-api.ts",
                "line": 29,
                "character": 20
              },
              "name": "boolean"
            }
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "public-api.ts",
              "line": 30,
              "character": 3
            },
            "name": "defaultLanguage",
            "signature": "(property) TranslateModuleConfig.defaultLanguage?: string | undefined",
            "isOptional": true,
            "type": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "public-api.ts",
                "line": 30,
                "character": 21
              },
              "name": "string"
            }
          }
        ]
      },
      {
        "__schema": "ClassSchema",
        "name": "TranslateModule",
        "location": {
          "filePath": "public-api.ts",
          "line": 33,
          "character": 1
        },
        "signature": "class TranslateModule",
        "extendsNodes": [],
        "implementNodes": [],
        "members": [
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "public-api.ts",
              "line": 47,
              "character": 3
            },
            "name": "forRoot",
            "signature": "(method) TranslateModule.forRoot(config?: TranslateModuleConfig): ModuleWithProviders<TranslateModule>",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "public-api.ts",
                  "line": 47,
                  "character": 18
                },
                "name": "config",
                "isOptional": false,
                "defaultValue": "{}",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "public-api.ts",
                    "line": 47,
                    "character": 26
                  },
                  "name": "TranslateModuleConfig"
                }
              }
            ],
            "returnType": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "public-api.ts",
                "line": 47,
                "character": 55
              },
              "name": "ModuleWithProviders",
              "packageName": "@angular/core",
              "typeArgs": [
                {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "public-api.ts",
                    "line": 47,
                    "character": 75
                  },
                  "name": "TranslateModule"
                }
              ]
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "public-api.ts",
                "line": 44,
                "character": 3
              },
              "raw": "/**\r\n   * Use this method in your root module to provide the TranslateService\r\n   */",
              "comment": "Use this method in your root module to provide the TranslateService"
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "public-api.ts",
              "line": 68,
              "character": 3
            },
            "name": "forChild",
            "signature": "(method) TranslateModule.forChild(config?: TranslateModuleConfig): ModuleWithProviders<TranslateModule>",
            "modifiers": [
              "static"
            ],
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "public-api.ts",
                  "line": 68,
                  "character": 19
                },
                "name": "config",
                "isOptional": false,
                "defaultValue": "{}",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "public-api.ts",
                    "line": 68,
                    "character": 27
                  },
                  "name": "TranslateModuleConfig"
                }
              }
            ],
            "returnType": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "public-api.ts",
                "line": 68,
                "character": 56
              },
              "name": "ModuleWithProviders",
              "packageName": "@angular/core",
              "typeArgs": [
                {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "public-api.ts",
                    "line": 68,
                    "character": 76
                  },
                  "name": "TranslateModule"
                }
              ]
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "public-api.ts",
                "line": 65,
                "character": 3
              },
              "raw": "/**\r\n   * Use this method in your other (non root) modules to import the directive/pipe\r\n   */",
              "comment": "Use this method in your other (non root) modules to import the directive/pipe"
            }
          }
        ]
      }
    ],
    "internals": []
  },
  "internals": [],
  "componentId": {
    "name": "core",
    "version": "15.0.0",
    "scope": "ngx-translate.packages"
  },
  "taggedModuleExports": []
}