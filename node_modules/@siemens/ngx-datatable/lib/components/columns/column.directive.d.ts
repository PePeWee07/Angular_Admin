import { OnChanges, TemplateRef } from '@angular/core';
import { ColumnChangesService } from '../../services/column-changes.service';
import { TableColumnProp } from '../../types/table-column.type';
import * as i0 from "@angular/core";
export declare class DataTableColumnDirective implements OnChanges {
    private columnChangesService;
    name: string;
    prop: TableColumnProp;
    frozenLeft: any;
    frozenRight: any;
    flexGrow: number;
    resizeable: boolean;
    comparator: any;
    pipe: any;
    sortable: boolean;
    draggable: boolean;
    canAutoResize: boolean;
    minWidth: number;
    width: number;
    maxWidth: number;
    checkboxable: boolean;
    headerCheckboxable: boolean;
    headerClass: string | ((data: any) => string | any);
    cellClass: string | ((data: any) => string | any);
    isTreeColumn: boolean;
    treeLevelIndent: number;
    summaryFunc: (cells: any[]) => any;
    summaryTemplate: TemplateRef<any>;
    _cellTemplateInput: TemplateRef<any>;
    _cellTemplateQuery: TemplateRef<any>;
    get cellTemplate(): TemplateRef<any>;
    _headerTemplateInput: TemplateRef<any>;
    _headerTemplateQuery: TemplateRef<any>;
    get headerTemplate(): TemplateRef<any>;
    _treeToggleTemplateInput: TemplateRef<any>;
    _treeToggleTemplateQuery: TemplateRef<any>;
    get treeToggleTemplate(): TemplateRef<any>;
    _ghostCellTemplateInput: TemplateRef<any>;
    _ghostCellTemplateQuery: TemplateRef<any>;
    get ghostCellTemplate(): TemplateRef<any>;
    private isFirstChange;
    constructor(columnChangesService: ColumnChangesService);
    ngOnChanges(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DataTableColumnDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<DataTableColumnDirective, "ngx-datatable-column", never, { "name": { "alias": "name"; "required": false; }; "prop": { "alias": "prop"; "required": false; }; "frozenLeft": { "alias": "frozenLeft"; "required": false; }; "frozenRight": { "alias": "frozenRight"; "required": false; }; "flexGrow": { "alias": "flexGrow"; "required": false; }; "resizeable": { "alias": "resizeable"; "required": false; }; "comparator": { "alias": "comparator"; "required": false; }; "pipe": { "alias": "pipe"; "required": false; }; "sortable": { "alias": "sortable"; "required": false; }; "draggable": { "alias": "draggable"; "required": false; }; "canAutoResize": { "alias": "canAutoResize"; "required": false; }; "minWidth": { "alias": "minWidth"; "required": false; }; "width": { "alias": "width"; "required": false; }; "maxWidth": { "alias": "maxWidth"; "required": false; }; "checkboxable": { "alias": "checkboxable"; "required": false; }; "headerCheckboxable": { "alias": "headerCheckboxable"; "required": false; }; "headerClass": { "alias": "headerClass"; "required": false; }; "cellClass": { "alias": "cellClass"; "required": false; }; "isTreeColumn": { "alias": "isTreeColumn"; "required": false; }; "treeLevelIndent": { "alias": "treeLevelIndent"; "required": false; }; "summaryFunc": { "alias": "summaryFunc"; "required": false; }; "summaryTemplate": { "alias": "summaryTemplate"; "required": false; }; "_cellTemplateInput": { "alias": "cellTemplate"; "required": false; }; "_headerTemplateInput": { "alias": "headerTemplate"; "required": false; }; "_treeToggleTemplateInput": { "alias": "treeToggleTemplate"; "required": false; }; "_ghostCellTemplateInput": { "alias": "ghostCellTemplate"; "required": false; }; }, {}, ["_cellTemplateQuery", "_headerTemplateQuery", "_treeToggleTemplateQuery", "_ghostCellTemplateQuery"], never, false, never>;
}
