import { Component } from '@angular/core';
import { CdkStepper, STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';
import { animate, state, style, transition, trigger } from '@angular/animations';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class NgStepperComponent extends CdkStepper {
    ngOnInit() {
    }
}
NgStepperComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.0.5", ngImport: i0, type: NgStepperComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
NgStepperComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.0.5", type: NgStepperComponent, selector: "ng-stepper", providers: [{ provide: CdkStepper, useExisting: NgStepperComponent }, {
            provide: STEPPER_GLOBAL_OPTIONS, useValue: { displayDefaultIndicatorType: false }
        }], usesInheritance: true, ngImport: i0, template: "<div class=\"stepper\">\n  <div class=\"stepper-header\">\n    <ol class=\"steps\">\n      <ng-container *ngFor=\"let step of steps; let i = index;\">\n        <li class=\"step\" (click)=\"selectedIndex = i\"\n            [ngClass]=\"{\n                active: selectedIndex === i,\n                completed: step.completed && i < selectedIndex,\n                done: step.state === 'done' && i === selectedIndex\n                }\">\n          <ng-container [ngTemplateOutlet]=\"step.stepLabel.template\">\n            <ng-content select=\".step-bullet\"></ng-content>\n            <ng-content select=\".step-title\"></ng-content>\n          </ng-container>\n        </li>\n      </ng-container>\n    </ol>\n  </div>\n  <div class=\"stepper-body\">\n    <div class=\"content\"\n         *ngFor=\"let step of _steps; let i = index\"\n         [class.active]=\"selectedIndex === i\"\n         [@stepTransition]=\"_getAnimationDirection(i)\">\n      <ng-container [ngTemplateOutlet]=\"step.content\"></ng-container>\n    </div>\n  </div>\n</div>\n\n", styles: [":host{display:block;overflow:hidden}.stepper-header .steps{width:100%;list-style:none;display:inline-flex;align-items:center;margin:0 auto}.stepper-header .steps .step{text-align:center;font-size:1em}.stepper-header .steps ::ng-deep .step .step-bullet{position:relative;display:inline-flex;justify-content:center;align-items:center;height:40px;width:40px;background-color:#b3babe;border-radius:50%;color:#fff;font-size:1.3rem;text-align:center;text-decoration:none;cursor:pointer}.stepper-header .steps ::ng-deep .step .step-title{position:absolute;right:0;bottom:-5px;left:0;margin:auto 0;height:0}.stepper-header .steps ::ng-deep .step.active .step-bullet{background-color:#306bff}.stepper-header .steps ::ng-deep .step.completed .step-bullet{background-color:#32e67f}.stepper-header .steps ::ng-deep .step.done .step-bullet{background-color:#32e67f}.stepper-body{margin:25px auto;padding:1rem}.stepper-body .content:not(.active){height:0;overflow:hidden}.step{position:relative;width:33.33%}.step:after{content:\"\";position:absolute;width:100%;height:3px;background-color:#b3babe;top:50%;left:-50%;z-index:-1}.step:first-child:after{content:none}.step.completed+.step:after{background-color:#32e67f}\n"], dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }], animations: [trigger('stepTransition', [
            state('previous', style({ transform: 'translateX(-100%)', opacity: 0 })),
            state('current', style({ transform: 'translateX(0)', opacity: 1 })),
            state('next', style({ transform: 'translateX(100%)', opacity: 0 })),
            transition(':enter', animate(0)),
            transition('previous => current', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),
            transition('next => current', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),
        ])] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.0.5", ngImport: i0, type: NgStepperComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ng-stepper', providers: [{ provide: CdkStepper, useExisting: NgStepperComponent }, {
                            provide: STEPPER_GLOBAL_OPTIONS, useValue: { displayDefaultIndicatorType: false }
                        }], animations: [trigger('stepTransition', [
                            state('previous', style({ transform: 'translateX(-100%)', opacity: 0 })),
                            state('current', style({ transform: 'translateX(0)', opacity: 1 })),
                            state('next', style({ transform: 'translateX(100%)', opacity: 0 })),
                            transition(':enter', animate(0)),
                            transition('previous => current', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),
                            transition('next => current', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),
                        ])], template: "<div class=\"stepper\">\n  <div class=\"stepper-header\">\n    <ol class=\"steps\">\n      <ng-container *ngFor=\"let step of steps; let i = index;\">\n        <li class=\"step\" (click)=\"selectedIndex = i\"\n            [ngClass]=\"{\n                active: selectedIndex === i,\n                completed: step.completed && i < selectedIndex,\n                done: step.state === 'done' && i === selectedIndex\n                }\">\n          <ng-container [ngTemplateOutlet]=\"step.stepLabel.template\">\n            <ng-content select=\".step-bullet\"></ng-content>\n            <ng-content select=\".step-title\"></ng-content>\n          </ng-container>\n        </li>\n      </ng-container>\n    </ol>\n  </div>\n  <div class=\"stepper-body\">\n    <div class=\"content\"\n         *ngFor=\"let step of _steps; let i = index\"\n         [class.active]=\"selectedIndex === i\"\n         [@stepTransition]=\"_getAnimationDirection(i)\">\n      <ng-container [ngTemplateOutlet]=\"step.content\"></ng-container>\n    </div>\n  </div>\n</div>\n\n", styles: [":host{display:block;overflow:hidden}.stepper-header .steps{width:100%;list-style:none;display:inline-flex;align-items:center;margin:0 auto}.stepper-header .steps .step{text-align:center;font-size:1em}.stepper-header .steps ::ng-deep .step .step-bullet{position:relative;display:inline-flex;justify-content:center;align-items:center;height:40px;width:40px;background-color:#b3babe;border-radius:50%;color:#fff;font-size:1.3rem;text-align:center;text-decoration:none;cursor:pointer}.stepper-header .steps ::ng-deep .step .step-title{position:absolute;right:0;bottom:-5px;left:0;margin:auto 0;height:0}.stepper-header .steps ::ng-deep .step.active .step-bullet{background-color:#306bff}.stepper-header .steps ::ng-deep .step.completed .step-bullet{background-color:#32e67f}.stepper-header .steps ::ng-deep .step.done .step-bullet{background-color:#32e67f}.stepper-body{margin:25px auto;padding:1rem}.stepper-body .content:not(.active){height:0;overflow:hidden}.step{position:relative;width:33.33%}.step:after{content:\"\";position:absolute;width:100%;height:3px;background-color:#b3babe;top:50%;left:-50%;z-index:-1}.step:first-child:after{content:none}.step.completed+.step:after{background-color:#32e67f}\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctc3RlcHBlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1zdGVwcGVyL3NyYy9saWIvbmctc3RlcHBlci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1zdGVwcGVyL3NyYy9saWIvbmctc3RlcHBlci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFTLE1BQU0sZUFBZSxDQUFDO0FBQ2hELE9BQU8sRUFBQyxVQUFVLEVBQUUsc0JBQXNCLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQztBQUN4RSxPQUFPLEVBQUMsT0FBTyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBQyxNQUFNLHFCQUFxQixDQUFDOzs7QUFrQi9FLE1BQU0sT0FBTyxrQkFBbUIsU0FBUSxVQUFVO0lBQ2hELFFBQVE7SUFDUixDQUFDOzsrR0FGVSxrQkFBa0I7bUdBQWxCLGtCQUFrQixxQ0FabEIsQ0FBQyxFQUFDLE9BQU8sRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLGtCQUFrQixFQUFDLEVBQUU7WUFDbEUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLFFBQVEsRUFBRSxFQUFDLDJCQUEyQixFQUFFLEtBQUssRUFBQztTQUNoRixDQUFDLGlEQ1ZKLDRoQ0E0QkEsbW1ERGpCYyxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsRUFBRTtZQUNyQyxLQUFLLENBQUMsVUFBVSxFQUFFLEtBQUssQ0FBQyxFQUFDLFNBQVMsRUFBRSxtQkFBbUIsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFDLENBQUMsQ0FBQztZQUN0RSxLQUFLLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQyxFQUFDLFNBQVMsRUFBRSxlQUFlLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBQyxDQUFDLENBQUM7WUFDakUsS0FBSyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsRUFBQyxTQUFTLEVBQUUsa0JBQWtCLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBQyxDQUFDLENBQUM7WUFDakUsVUFBVSxDQUFDLFFBQVEsRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDaEMsVUFBVSxDQUFDLHFCQUFxQixFQUFFLE9BQU8sQ0FBQyxzQ0FBc0MsQ0FBQyxDQUFDO1lBQ2xGLFVBQVUsQ0FBQyxpQkFBaUIsRUFBRSxPQUFPLENBQUMsc0NBQXNDLENBQUMsQ0FBQztTQUMvRSxDQUFDLENBQUM7MkZBRVEsa0JBQWtCO2tCQWhCOUIsU0FBUzsrQkFDRSxZQUFZLGFBR1gsQ0FBQyxFQUFDLE9BQU8sRUFBRSxVQUFVLEVBQUUsV0FBVyxvQkFBb0IsRUFBQyxFQUFFOzRCQUNsRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsUUFBUSxFQUFFLEVBQUMsMkJBQTJCLEVBQUUsS0FBSyxFQUFDO3lCQUNoRixDQUFDLGNBQ1UsQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLEVBQUU7NEJBQ3JDLEtBQUssQ0FBQyxVQUFVLEVBQUUsS0FBSyxDQUFDLEVBQUMsU0FBUyxFQUFFLG1CQUFtQixFQUFFLE9BQU8sRUFBRSxDQUFDLEVBQUMsQ0FBQyxDQUFDOzRCQUN0RSxLQUFLLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQyxFQUFDLFNBQVMsRUFBRSxlQUFlLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBQyxDQUFDLENBQUM7NEJBQ2pFLEtBQUssQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLEVBQUMsU0FBUyxFQUFFLGtCQUFrQixFQUFFLE9BQU8sRUFBRSxDQUFDLEVBQUMsQ0FBQyxDQUFDOzRCQUNqRSxVQUFVLENBQUMsUUFBUSxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQzs0QkFDaEMsVUFBVSxDQUFDLHFCQUFxQixFQUFFLE9BQU8sQ0FBQyxzQ0FBc0MsQ0FBQyxDQUFDOzRCQUNsRixVQUFVLENBQUMsaUJBQWlCLEVBQUUsT0FBTyxDQUFDLHNDQUFzQyxDQUFDLENBQUM7eUJBQy9FLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBPbkluaXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtDZGtTdGVwcGVyLCBTVEVQUEVSX0dMT0JBTF9PUFRJT05TfSBmcm9tICdAYW5ndWxhci9jZGsvc3RlcHBlcic7XG5pbXBvcnQge2FuaW1hdGUsIHN0YXRlLCBzdHlsZSwgdHJhbnNpdGlvbiwgdHJpZ2dlcn0gZnJvbSAnQGFuZ3VsYXIvYW5pbWF0aW9ucyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ25nLXN0ZXBwZXInLFxuICB0ZW1wbGF0ZVVybDogJy4vbmctc3RlcHBlci5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL25nLXN0ZXBwZXIuY29tcG9uZW50LnNjc3MnXSxcbiAgcHJvdmlkZXJzOiBbe3Byb3ZpZGU6IENka1N0ZXBwZXIsIHVzZUV4aXN0aW5nOiBOZ1N0ZXBwZXJDb21wb25lbnR9LCB7XG4gICAgcHJvdmlkZTogU1RFUFBFUl9HTE9CQUxfT1BUSU9OUywgdXNlVmFsdWU6IHtkaXNwbGF5RGVmYXVsdEluZGljYXRvclR5cGU6IGZhbHNlfVxuICB9XSxcbiAgYW5pbWF0aW9uczogW3RyaWdnZXIoJ3N0ZXBUcmFuc2l0aW9uJywgW1xuICAgIHN0YXRlKCdwcmV2aW91cycsIHN0eWxlKHt0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKC0xMDAlKScsIG9wYWNpdHk6IDB9KSksXG4gICAgc3RhdGUoJ2N1cnJlbnQnLCBzdHlsZSh7dHJhbnNmb3JtOiAndHJhbnNsYXRlWCgwKScsIG9wYWNpdHk6IDF9KSksXG4gICAgc3RhdGUoJ25leHQnLCBzdHlsZSh7dHJhbnNmb3JtOiAndHJhbnNsYXRlWCgxMDAlKScsIG9wYWNpdHk6IDB9KSksXG4gICAgdHJhbnNpdGlvbignOmVudGVyJywgYW5pbWF0ZSgwKSksXG4gICAgdHJhbnNpdGlvbigncHJldmlvdXMgPT4gY3VycmVudCcsIGFuaW1hdGUoJzUwMG1zIGN1YmljLWJlemllcigwLjM1LCAwLCAwLjI1LCAxKScpKSxcbiAgICB0cmFuc2l0aW9uKCduZXh0ID0+IGN1cnJlbnQnLCBhbmltYXRlKCc1MDBtcyBjdWJpYy1iZXppZXIoMC4zNSwgMCwgMC4yNSwgMSknKSksXG4gIF0pXVxufSlcbmV4cG9ydCBjbGFzcyBOZ1N0ZXBwZXJDb21wb25lbnQgZXh0ZW5kcyBDZGtTdGVwcGVyIGltcGxlbWVudHMgT25Jbml0IHtcbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gIH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJzdGVwcGVyXCI+XG4gIDxkaXYgY2xhc3M9XCJzdGVwcGVyLWhlYWRlclwiPlxuICAgIDxvbCBjbGFzcz1cInN0ZXBzXCI+XG4gICAgICA8bmctY29udGFpbmVyICpuZ0Zvcj1cImxldCBzdGVwIG9mIHN0ZXBzOyBsZXQgaSA9IGluZGV4O1wiPlxuICAgICAgICA8bGkgY2xhc3M9XCJzdGVwXCIgKGNsaWNrKT1cInNlbGVjdGVkSW5kZXggPSBpXCJcbiAgICAgICAgICAgIFtuZ0NsYXNzXT1cIntcbiAgICAgICAgICAgICAgICBhY3RpdmU6IHNlbGVjdGVkSW5kZXggPT09IGksXG4gICAgICAgICAgICAgICAgY29tcGxldGVkOiBzdGVwLmNvbXBsZXRlZCAmJiBpIDwgc2VsZWN0ZWRJbmRleCxcbiAgICAgICAgICAgICAgICBkb25lOiBzdGVwLnN0YXRlID09PSAnZG9uZScgJiYgaSA9PT0gc2VsZWN0ZWRJbmRleFxuICAgICAgICAgICAgICAgIH1cIj5cbiAgICAgICAgICA8bmctY29udGFpbmVyIFtuZ1RlbXBsYXRlT3V0bGV0XT1cInN0ZXAuc3RlcExhYmVsLnRlbXBsYXRlXCI+XG4gICAgICAgICAgICA8bmctY29udGVudCBzZWxlY3Q9XCIuc3RlcC1idWxsZXRcIj48L25nLWNvbnRlbnQ+XG4gICAgICAgICAgICA8bmctY29udGVudCBzZWxlY3Q9XCIuc3RlcC10aXRsZVwiPjwvbmctY29udGVudD5cbiAgICAgICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgICAgPC9saT5cbiAgICAgIDwvbmctY29udGFpbmVyPlxuICAgIDwvb2w+XG4gIDwvZGl2PlxuICA8ZGl2IGNsYXNzPVwic3RlcHBlci1ib2R5XCI+XG4gICAgPGRpdiBjbGFzcz1cImNvbnRlbnRcIlxuICAgICAgICAgKm5nRm9yPVwibGV0IHN0ZXAgb2YgX3N0ZXBzOyBsZXQgaSA9IGluZGV4XCJcbiAgICAgICAgIFtjbGFzcy5hY3RpdmVdPVwic2VsZWN0ZWRJbmRleCA9PT0gaVwiXG4gICAgICAgICBbQHN0ZXBUcmFuc2l0aW9uXT1cIl9nZXRBbmltYXRpb25EaXJlY3Rpb24oaSlcIj5cbiAgICAgIDxuZy1jb250YWluZXIgW25nVGVtcGxhdGVPdXRsZXRdPVwic3RlcC5jb250ZW50XCI+PC9uZy1jb250YWluZXI+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC9kaXY+XG5cbiJdfQ==