(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/platform-browser')) :
    typeof define === 'function' && define.amd ? define('ng-stepper', ['exports', '@angular/core', '@angular/platform-browser'], factory) :
    (factory((global['ng-stepper'] = {}),global.ng.core,global.ng.platformBrowser));
}(this, (function (exports,core,platformBrowser) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var StepperComponent = /** @class */ (function () {
        function StepperComponent() {
            this.stepTitleTemplateRef = null;
            this.steps = [];
            this.dotSize = 12;
            this.lineWidth = 3;
            this.defaultDotColor = '#dddddd';
            this.defaultDashColor = '#dddddd';
            this.onDotClick = new core.EventEmitter();
        }
        /**
         * @param {?} step
         * @return {?}
         */
        StepperComponent.prototype.docClicked = /**
         * @param {?} step
         * @return {?}
         */
            function (step) {
                this.onDotClick.emit(step);
            };
        /**
         * @return {?}
         */
        StepperComponent.prototype.dotWidthAndHeight = /**
         * @return {?}
         */
            function () {
                return this.dotSize + 'px';
            };
        /**
         * @return {?}
         */
        StepperComponent.prototype.dashTopPosition = /**
         * @return {?}
         */
            function () {
                return ((this.dotSize + this.lineWidth) / 2) + 'px';
            };
        /**
         * @return {?}
         */
        StepperComponent.prototype.lineWidthInPixels = /**
         * @return {?}
         */
            function () {
                return this.lineWidth + 'px';
            };
        StepperComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'stepper',
                        template: "<div class=\"container\">\n  <ul class=\"progressbar\">\n    <li\n      *ngFor=\"let step of steps\"\n      [style.width.%]=\"100 / steps.length\"\n    >\n\n      <!-- dot, circle -->\n      <span class=\"dot\"\n            [style.width]=\"dotWidthAndHeight()\"\n            [style.height]=\"dotWidthAndHeight()\"\n            [style.border-width]=\"lineWidthInPixels()\"\n            [style.border-color]=\"step.dotColor || defaultDotColor\"\n            (click)=\"docClicked(step)\"\n      ></span>\n\n      <!-- dash -->\n      <span\n        class=\"dash\"\n        [style.background-color]=\"step.dashColor || defaultDashColor\"\n        [style.top]=\"dashTopPosition()\"\n        [style.height]=\"lineWidthInPixels()\"\n      ></span>\n\n      <!-- default content -->\n      <ng-template [ngIf]=\"!stepTitleTemplateRef\">{{step.title}}</ng-template>\n\n      <!-- content if template ref passed -->\n      <ng-template [ngIf]=\"stepTitleTemplateRef\">\n        <ng-template\n          [ngTemplateOutlet]=\"stepTitleTemplateRef\"\n          [ngTemplateOutletContext]=\"{$implicit: step, step: step}\">>\n        </ng-template>\n      </ng-template>\n\n    </li>\n  </ul>\n</div>\n",
                        styles: [".container{overflow:auto}.progressbar{float:left;width:100%;-webkit-padding-start:0;padding-inline-start:0}.progressbar li{list-style-type:none;float:left;position:relative;text-align:center}.progressbar .dot{border-style:solid;display:block;text-align:center;margin:0 auto 10px;border-radius:50%;line-height:10px;background-color:#fff}.progressbar .dash{content:'';position:absolute;width:100%;height:4px;background-color:#ddd;left:-50%;z-index:-1}.progressbar>li:first-child>.dash{display:none}"]
                    }] }
        ];
        StepperComponent.propDecorators = {
            stepTitleTemplateRef: [{ type: core.Input }],
            steps: [{ type: core.Input }],
            dotSize: [{ type: core.Input }],
            lineWidth: [{ type: core.Input }],
            defaultDotColor: [{ type: core.Input }],
            defaultDashColor: [{ type: core.Input }],
            onDotClick: [{ type: core.Output }]
        };
        return StepperComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var StepperModule = /** @class */ (function () {
        function StepperModule() {
        }
        StepperModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [StepperComponent],
                        imports: [platformBrowser.BrowserModule],
                        exports: [StepperComponent]
                    },] }
        ];
        return StepperModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.StepperComponent = StepperComponent;
    exports.StepperModule = StepperModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=ng-stepper.umd.js.map