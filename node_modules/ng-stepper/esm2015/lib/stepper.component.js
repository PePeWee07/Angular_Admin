/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';
export class StepperComponent {
    constructor() {
        this.stepTitleTemplateRef = null;
        this.steps = [];
        this.dotSize = 12;
        this.lineWidth = 3;
        this.defaultDotColor = '#dddddd';
        this.defaultDashColor = '#dddddd';
        this.onDotClick = new EventEmitter();
    }
    /**
     * @param {?} step
     * @return {?}
     */
    docClicked(step) {
        this.onDotClick.emit(step);
    }
    /**
     * @return {?}
     */
    dotWidthAndHeight() {
        return this.dotSize + 'px';
    }
    /**
     * @return {?}
     */
    dashTopPosition() {
        return ((this.dotSize + this.lineWidth) / 2) + 'px';
    }
    /**
     * @return {?}
     */
    lineWidthInPixels() {
        return this.lineWidth + 'px';
    }
}
StepperComponent.decorators = [
    { type: Component, args: [{
                selector: 'stepper',
                template: "<div class=\"container\">\n  <ul class=\"progressbar\">\n    <li\n      *ngFor=\"let step of steps\"\n      [style.width.%]=\"100 / steps.length\"\n    >\n\n      <!-- dot, circle -->\n      <span class=\"dot\"\n            [style.width]=\"dotWidthAndHeight()\"\n            [style.height]=\"dotWidthAndHeight()\"\n            [style.border-width]=\"lineWidthInPixels()\"\n            [style.border-color]=\"step.dotColor || defaultDotColor\"\n            (click)=\"docClicked(step)\"\n      ></span>\n\n      <!-- dash -->\n      <span\n        class=\"dash\"\n        [style.background-color]=\"step.dashColor || defaultDashColor\"\n        [style.top]=\"dashTopPosition()\"\n        [style.height]=\"lineWidthInPixels()\"\n      ></span>\n\n      <!-- default content -->\n      <ng-template [ngIf]=\"!stepTitleTemplateRef\">{{step.title}}</ng-template>\n\n      <!-- content if template ref passed -->\n      <ng-template [ngIf]=\"stepTitleTemplateRef\">\n        <ng-template\n          [ngTemplateOutlet]=\"stepTitleTemplateRef\"\n          [ngTemplateOutletContext]=\"{$implicit: step, step: step}\">>\n        </ng-template>\n      </ng-template>\n\n    </li>\n  </ul>\n</div>\n",
                styles: [".container{overflow:auto}.progressbar{float:left;width:100%;-webkit-padding-start:0;padding-inline-start:0}.progressbar li{list-style-type:none;float:left;position:relative;text-align:center}.progressbar .dot{border-style:solid;display:block;text-align:center;margin:0 auto 10px;border-radius:50%;line-height:10px;background-color:#fff}.progressbar .dash{content:'';position:absolute;width:100%;height:4px;background-color:#ddd;left:-50%;z-index:-1}.progressbar>li:first-child>.dash{display:none}"]
            }] }
];
StepperComponent.propDecorators = {
    stepTitleTemplateRef: [{ type: Input }],
    steps: [{ type: Input }],
    dotSize: [{ type: Input }],
    lineWidth: [{ type: Input }],
    defaultDotColor: [{ type: Input }],
    defaultDashColor: [{ type: Input }],
    onDotClick: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    StepperComponent.prototype.stepTitleTemplateRef;
    /** @type {?} */
    StepperComponent.prototype.steps;
    /** @type {?} */
    StepperComponent.prototype.dotSize;
    /** @type {?} */
    StepperComponent.prototype.lineWidth;
    /** @type {?} */
    StepperComponent.prototype.defaultDotColor;
    /** @type {?} */
    StepperComponent.prototype.defaultDashColor;
    /** @type {?} */
    StepperComponent.prototype.onDotClick;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcHBlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1zdGVwcGVyLyIsInNvdXJjZXMiOlsibGliL3N0ZXBwZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQVFsRixNQUFNLE9BQU8sZ0JBQWdCO0lBTDdCO1FBUUUseUJBQW9CLEdBQXNCLElBQUksQ0FBQztRQUcvQyxVQUFLLEdBQVcsRUFBRSxDQUFDO1FBR25CLFlBQU8sR0FBRyxFQUFFLENBQUM7UUFHYixjQUFTLEdBQUcsQ0FBQyxDQUFDO1FBR2Qsb0JBQWUsR0FBRyxTQUFTLENBQUM7UUFHNUIscUJBQWdCLEdBQUcsU0FBUyxDQUFDO1FBRzdCLGVBQVUsR0FBdUIsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQWtCdEQsQ0FBQzs7Ozs7SUFmQyxVQUFVLENBQUMsSUFBSTtRQUNiLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzdCLENBQUM7Ozs7SUFFRCxpQkFBaUI7UUFDZixPQUFPLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO0lBQzdCLENBQUM7Ozs7SUFFRCxlQUFlO1FBQ2IsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDO0lBQ3RELENBQUM7Ozs7SUFFRCxpQkFBaUI7UUFDZixPQUFPLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO0lBQy9CLENBQUM7OztZQTNDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLFNBQVM7Z0JBQ25CLDhxQ0FBdUM7O2FBRXhDOzs7bUNBR0UsS0FBSztvQkFHTCxLQUFLO3NCQUdMLEtBQUs7d0JBR0wsS0FBSzs4QkFHTCxLQUFLOytCQUdMLEtBQUs7eUJBR0wsTUFBTTs7OztJQWxCUCxnREFDK0M7O0lBRS9DLGlDQUNtQjs7SUFFbkIsbUNBQ2E7O0lBRWIscUNBQ2M7O0lBRWQsMkNBQzRCOztJQUU1Qiw0Q0FDNkI7O0lBRTdCLHNDQUNvRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQsIFRlbXBsYXRlUmVmfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7U3RlcH0gZnJvbSAnLi9zdGVwLm1vZGVsJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnc3RlcHBlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9zdGVwcGVyLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vc3RlcHBlci5jb21wb25lbnQuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIFN0ZXBwZXJDb21wb25lbnQge1xuXG4gIEBJbnB1dCgpXG4gIHN0ZXBUaXRsZVRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjx2b2lkPiA9IG51bGw7XG5cbiAgQElucHV0KClcbiAgc3RlcHM6IFN0ZXBbXSA9IFtdO1xuXG4gIEBJbnB1dCgpXG4gIGRvdFNpemUgPSAxMjtcblxuICBASW5wdXQoKVxuICBsaW5lV2lkdGggPSAzO1xuXG4gIEBJbnB1dCgpXG4gIGRlZmF1bHREb3RDb2xvciA9ICcjZGRkZGRkJztcblxuICBASW5wdXQoKVxuICBkZWZhdWx0RGFzaENvbG9yID0gJyNkZGRkZGQnO1xuXG4gIEBPdXRwdXQoKVxuICBvbkRvdENsaWNrOiBFdmVudEVtaXR0ZXI8U3RlcD4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cblxuICBkb2NDbGlja2VkKHN0ZXApIHtcbiAgICB0aGlzLm9uRG90Q2xpY2suZW1pdChzdGVwKTtcbiAgfVxuXG4gIGRvdFdpZHRoQW5kSGVpZ2h0KCkge1xuICAgIHJldHVybiB0aGlzLmRvdFNpemUgKyAncHgnO1xuICB9XG5cbiAgZGFzaFRvcFBvc2l0aW9uKCkge1xuICAgIHJldHVybiAoKHRoaXMuZG90U2l6ZSArIHRoaXMubGluZVdpZHRoKSAvIDIpICsgJ3B4JztcbiAgfVxuXG4gIGxpbmVXaWR0aEluUGl4ZWxzKCkge1xuICAgIHJldHVybiB0aGlzLmxpbmVXaWR0aCArICdweCc7XG4gIH1cbn1cbiJdfQ==