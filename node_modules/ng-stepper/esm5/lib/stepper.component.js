/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';
var StepperComponent = /** @class */ (function () {
    function StepperComponent() {
        this.stepTitleTemplateRef = null;
        this.steps = [];
        this.dotSize = 12;
        this.lineWidth = 3;
        this.defaultDotColor = '#dddddd';
        this.defaultDashColor = '#dddddd';
        this.onDotClick = new EventEmitter();
    }
    /**
     * @param {?} step
     * @return {?}
     */
    StepperComponent.prototype.docClicked = /**
     * @param {?} step
     * @return {?}
     */
    function (step) {
        this.onDotClick.emit(step);
    };
    /**
     * @return {?}
     */
    StepperComponent.prototype.dotWidthAndHeight = /**
     * @return {?}
     */
    function () {
        return this.dotSize + 'px';
    };
    /**
     * @return {?}
     */
    StepperComponent.prototype.dashTopPosition = /**
     * @return {?}
     */
    function () {
        return ((this.dotSize + this.lineWidth) / 2) + 'px';
    };
    /**
     * @return {?}
     */
    StepperComponent.prototype.lineWidthInPixels = /**
     * @return {?}
     */
    function () {
        return this.lineWidth + 'px';
    };
    StepperComponent.decorators = [
        { type: Component, args: [{
                    selector: 'stepper',
                    template: "<div class=\"container\">\n  <ul class=\"progressbar\">\n    <li\n      *ngFor=\"let step of steps\"\n      [style.width.%]=\"100 / steps.length\"\n    >\n\n      <!-- dot, circle -->\n      <span class=\"dot\"\n            [style.width]=\"dotWidthAndHeight()\"\n            [style.height]=\"dotWidthAndHeight()\"\n            [style.border-width]=\"lineWidthInPixels()\"\n            [style.border-color]=\"step.dotColor || defaultDotColor\"\n            (click)=\"docClicked(step)\"\n      ></span>\n\n      <!-- dash -->\n      <span\n        class=\"dash\"\n        [style.background-color]=\"step.dashColor || defaultDashColor\"\n        [style.top]=\"dashTopPosition()\"\n        [style.height]=\"lineWidthInPixels()\"\n      ></span>\n\n      <!-- default content -->\n      <ng-template [ngIf]=\"!stepTitleTemplateRef\">{{step.title}}</ng-template>\n\n      <!-- content if template ref passed -->\n      <ng-template [ngIf]=\"stepTitleTemplateRef\">\n        <ng-template\n          [ngTemplateOutlet]=\"stepTitleTemplateRef\"\n          [ngTemplateOutletContext]=\"{$implicit: step, step: step}\">>\n        </ng-template>\n      </ng-template>\n\n    </li>\n  </ul>\n</div>\n",
                    styles: [".container{overflow:auto}.progressbar{float:left;width:100%;-webkit-padding-start:0;padding-inline-start:0}.progressbar li{list-style-type:none;float:left;position:relative;text-align:center}.progressbar .dot{border-style:solid;display:block;text-align:center;margin:0 auto 10px;border-radius:50%;line-height:10px;background-color:#fff}.progressbar .dash{content:'';position:absolute;width:100%;height:4px;background-color:#ddd;left:-50%;z-index:-1}.progressbar>li:first-child>.dash{display:none}"]
                }] }
    ];
    StepperComponent.propDecorators = {
        stepTitleTemplateRef: [{ type: Input }],
        steps: [{ type: Input }],
        dotSize: [{ type: Input }],
        lineWidth: [{ type: Input }],
        defaultDotColor: [{ type: Input }],
        defaultDashColor: [{ type: Input }],
        onDotClick: [{ type: Output }]
    };
    return StepperComponent;
}());
export { StepperComponent };
if (false) {
    /** @type {?} */
    StepperComponent.prototype.stepTitleTemplateRef;
    /** @type {?} */
    StepperComponent.prototype.steps;
    /** @type {?} */
    StepperComponent.prototype.dotSize;
    /** @type {?} */
    StepperComponent.prototype.lineWidth;
    /** @type {?} */
    StepperComponent.prototype.defaultDotColor;
    /** @type {?} */
    StepperComponent.prototype.defaultDashColor;
    /** @type {?} */
    StepperComponent.prototype.onDotClick;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcHBlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1zdGVwcGVyLyIsInNvdXJjZXMiOlsibGliL3N0ZXBwZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUdsRjtJQUFBO1FBUUUseUJBQW9CLEdBQXNCLElBQUksQ0FBQztRQUcvQyxVQUFLLEdBQVcsRUFBRSxDQUFDO1FBR25CLFlBQU8sR0FBRyxFQUFFLENBQUM7UUFHYixjQUFTLEdBQUcsQ0FBQyxDQUFDO1FBR2Qsb0JBQWUsR0FBRyxTQUFTLENBQUM7UUFHNUIscUJBQWdCLEdBQUcsU0FBUyxDQUFDO1FBRzdCLGVBQVUsR0FBdUIsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQWtCdEQsQ0FBQzs7Ozs7SUFmQyxxQ0FBVTs7OztJQUFWLFVBQVcsSUFBSTtRQUNiLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzdCLENBQUM7Ozs7SUFFRCw0Q0FBaUI7OztJQUFqQjtRQUNFLE9BQU8sSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7SUFDN0IsQ0FBQzs7OztJQUVELDBDQUFlOzs7SUFBZjtRQUNFLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQztJQUN0RCxDQUFDOzs7O0lBRUQsNENBQWlCOzs7SUFBakI7UUFDRSxPQUFPLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO0lBQy9CLENBQUM7O2dCQTNDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLFNBQVM7b0JBQ25CLDhxQ0FBdUM7O2lCQUV4Qzs7O3VDQUdFLEtBQUs7d0JBR0wsS0FBSzswQkFHTCxLQUFLOzRCQUdMLEtBQUs7a0NBR0wsS0FBSzttQ0FHTCxLQUFLOzZCQUdMLE1BQU07O0lBbUJULHVCQUFDO0NBQUEsQUE1Q0QsSUE0Q0M7U0F2Q1ksZ0JBQWdCOzs7SUFFM0IsZ0RBQytDOztJQUUvQyxpQ0FDbUI7O0lBRW5CLG1DQUNhOztJQUViLHFDQUNjOztJQUVkLDJDQUM0Qjs7SUFFNUIsNENBQzZCOztJQUU3QixzQ0FDb0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0LCBUZW1wbGF0ZVJlZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1N0ZXB9IGZyb20gJy4vc3RlcC5tb2RlbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3N0ZXBwZXInLFxuICB0ZW1wbGF0ZVVybDogJy4vc3RlcHBlci5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3N0ZXBwZXIuY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBTdGVwcGVyQ29tcG9uZW50IHtcblxuICBASW5wdXQoKVxuICBzdGVwVGl0bGVUZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8dm9pZD4gPSBudWxsO1xuXG4gIEBJbnB1dCgpXG4gIHN0ZXBzOiBTdGVwW10gPSBbXTtcblxuICBASW5wdXQoKVxuICBkb3RTaXplID0gMTI7XG5cbiAgQElucHV0KClcbiAgbGluZVdpZHRoID0gMztcblxuICBASW5wdXQoKVxuICBkZWZhdWx0RG90Q29sb3IgPSAnI2RkZGRkZCc7XG5cbiAgQElucHV0KClcbiAgZGVmYXVsdERhc2hDb2xvciA9ICcjZGRkZGRkJztcblxuICBAT3V0cHV0KClcbiAgb25Eb3RDbGljazogRXZlbnRFbWl0dGVyPFN0ZXA+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG5cbiAgZG9jQ2xpY2tlZChzdGVwKSB7XG4gICAgdGhpcy5vbkRvdENsaWNrLmVtaXQoc3RlcCk7XG4gIH1cblxuICBkb3RXaWR0aEFuZEhlaWdodCgpIHtcbiAgICByZXR1cm4gdGhpcy5kb3RTaXplICsgJ3B4JztcbiAgfVxuXG4gIGRhc2hUb3BQb3NpdGlvbigpIHtcbiAgICByZXR1cm4gKCh0aGlzLmRvdFNpemUgKyB0aGlzLmxpbmVXaWR0aCkgLyAyKSArICdweCc7XG4gIH1cblxuICBsaW5lV2lkdGhJblBpeGVscygpIHtcbiAgICByZXR1cm4gdGhpcy5saW5lV2lkdGggKyAncHgnO1xuICB9XG59XG4iXX0=