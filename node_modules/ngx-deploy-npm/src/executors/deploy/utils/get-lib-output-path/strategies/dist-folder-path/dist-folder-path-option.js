"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.customDistPathStrategy = void 0;
const path = require("path");
const shared_1 = require("../shared");
/**
 * Use this strategy when we don't have a strategy to locate the dist folder for that library.
 *
 * Apply it using the option --dist-folder-path
 *
 * @example
 * ```bash
 * nx deploy YOUR_LIB --dist-folder-path ./YOUR/CUSTOM/PATH
 * ```
 */
exports.customDistPathStrategy = {
    name: 'custom dist path',
    isStrategyApplicable: (_, publishOptions) => publishOptions.distFolderPath != undefined &&
        typeof publishOptions.distFolderPath === 'string',
    executor: (projectRoot, buildOptions, publishOptions) => {
        if (!exports.customDistPathStrategy.isStrategyApplicable(buildOptions, publishOptions)) {
            throw new shared_1.UnapplicableStrategyError(exports.customDistPathStrategy.name);
        }
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
        return path.join(projectRoot, publishOptions.distFolderPath);
    },
};
//# sourceMappingURL=dist-folder-path-option.js.map