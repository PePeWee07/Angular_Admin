"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.outputPathOptionStrategy = void 0;
const path = require("path");
const shared_1 = require("../shared");
/**
 * This strategy is the common one across Nx Official Plugins.
 * We get the dist path from the option `outputPath` from the `build` target's options.
 *
 * @example ```json
 * // project.json
 * {
 *   "build": {
 *     "executor": "@nx/js:tsc",
 *     "outputs": ["{options.outputPath}"],
 *     "options": {
 *       "outputPath": "dist/packages/ngx-deploy-npm", // <------- outputPath Option
 *       "tsConfig": "packages/ngx-deploy-npm/tsconfig.lib.json",
 *       "packageJson": "packages/ngx-deploy-npm/package.json",
 *       "main": "packages/ngx-deploy-npm/src/index.ts",
 *     }
 *   }
 * }
 *```
 */
exports.outputPathOptionStrategy = {
    name: 'outputPath option',
    isStrategyApplicable: (buildOptions) => buildOptions.outputPath != undefined &&
        typeof buildOptions.outputPath === 'string',
    executor: (projectRoot, buildOptions, publishOptions) => {
        if (!exports.outputPathOptionStrategy.isStrategyApplicable(buildOptions, publishOptions)) {
            throw new shared_1.UnapplicableStrategyError(exports.outputPathOptionStrategy.name);
        }
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
        return path.join(projectRoot, buildOptions.outputPath);
    },
};
//# sourceMappingURL=output-path-build-option.js.map