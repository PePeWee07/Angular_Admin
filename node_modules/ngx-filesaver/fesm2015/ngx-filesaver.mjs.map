{"version":3,"file":"ngx-filesaver.mjs","sources":["../../lib/src/filesaver.service.ts","../../lib/src/filesaver.directive.ts","../../lib/src/filesaver.module.ts","../../lib/ngx-filesaver.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { saveAs, FileSaverOptions } from 'file-saver';\n\n@Injectable({ providedIn: 'root' })\nexport class FileSaverService {\n  get isFileSaverSupported(): boolean {\n    try {\n      return !!new Blob();\n    } catch (e) {\n      return false;\n    }\n  }\n\n  genType(fileName?: string): string {\n    if (!fileName || fileName.lastIndexOf('.') === -1) {\n      return 'text/plain';\n    }\n    const type = fileName.substr(fileName.lastIndexOf('.') + 1);\n    switch (type) {\n      case 'txt':\n        return 'text/plain';\n      case 'xml':\n      case 'html':\n        return `text/${type}`;\n      case 'json':\n        return 'octet/stream';\n      default:\n        return `application/${type}`;\n    }\n  }\n\n  save(blob: Blob | null, fileName?: string, filtType?: string, option?: FileSaverOptions): void {\n    if (!blob) {\n      throw new Error('Data argument should be a blob instance');\n    }\n\n    const file = new Blob([blob], { type: filtType || blob.type || this.genType(fileName) });\n    saveAs(file, decodeURI(fileName || 'download'), option);\n  }\n\n  saveText(txt: string, fileName?: string, option?: FileSaverOptions): void {\n    const blob = new Blob([txt]);\n    this.save(blob, fileName, undefined, option);\n  }\n}\n","import { Directive, ElementRef, Input, HostListener, EventEmitter, Output } from '@angular/core';\nimport { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { FileSaverOptions } from 'file-saver';\nimport { FileSaverService } from './filesaver.service';\n\n@Directive({\n  selector: '[fileSaver]',\n  exportAs: 'fileSaver',\n  standalone: true,\n})\nexport class FileSaverDirective {\n  @Input() method = 'GET';\n  @Input() http?: Observable<HttpResponse<Blob>>;\n  @Input() query: any;\n  @Input() header: any;\n  @Input() url!: string;\n  @Input() fileName?: string;\n  @Input() fsOptions?: FileSaverOptions;\n  @Output() readonly success = new EventEmitter<HttpResponse<Blob>>();\n  @Output() readonly error = new EventEmitter<any>();\n\n  constructor(private el: ElementRef<HTMLButtonElement>, private fss: FileSaverService, private httpClient: HttpClient) {\n    if (!fss.isFileSaverSupported) {\n      el.nativeElement.classList.add(`filesaver__not-support`);\n    }\n  }\n\n  private getName(res: HttpResponse<Blob>) {\n    return decodeURI(this.fileName || res.headers.get('filename') || res.headers.get('x-filename') || '');\n  }\n\n  @HostListener('click')\n  _click(): void {\n    if (!this.fss.isFileSaverSupported) {\n      return;\n    }\n    let req = this.http;\n    if (!req) {\n      let params = new HttpParams();\n      const query = this.query || {};\n      // tslint:disable-next-line:forin\n      for (const item in query) {\n        params = params.set(item, query[item]);\n      }\n\n      req = this.httpClient.request(this.method, this.url, {\n        observe: 'response',\n        responseType: 'blob',\n        headers: this.header,\n        params,\n      });\n    }\n\n    this.setDisabled(true);\n    req.subscribe(\n      (res) => {\n        if (res.status !== 200 || res.body!.size <= 0) {\n          this.error.emit(res);\n          return;\n        }\n        this.fss.save(res.body, this.getName(res), undefined, this.fsOptions);\n        this.success.emit(res);\n      },\n      (err) => this.error.emit(err),\n      () => this.setDisabled(false),\n    );\n  }\n\n  setDisabled(status: boolean): void {\n    const el = this.el.nativeElement;\n    el.disabled = status;\n    el.classList[status ? 'add' : 'remove'](`filesaver__disabled`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FileSaverDirective } from './filesaver.directive';\n\n@NgModule({\n  imports: [FileSaverDirective],\n  exports: [FileSaverDirective],\n})\nexport class FileSaverModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1.FileSaverService"],"mappings":"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"}