{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport const LIGHTBOX_EVENT = {\n  CHANGE_PAGE: 1,\n  CLOSE: 2,\n  OPEN: 3,\n  ZOOM_IN: 4,\n  ZOOM_OUT: 5,\n  ROTATE_LEFT: 6,\n  ROTATE_RIGHT: 7\n};\nexport let LightboxEvent = /*#__PURE__*/(() => {\n  class LightboxEvent {\n    constructor() {\n      this._lightboxEventSource = new Subject();\n      this.lightboxEvent$ = this._lightboxEventSource.asObservable();\n    }\n\n    broadcastLightboxEvent(event) {\n      this._lightboxEventSource.next(event);\n    }\n\n  }\n\n  LightboxEvent.ɵfac = function LightboxEvent_Factory(t) {\n    return new (t || LightboxEvent)();\n  };\n\n  LightboxEvent.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LightboxEvent,\n    factory: LightboxEvent.ɵfac\n  });\n  return LightboxEvent;\n})();\n\nfunction getWindow() {\n  return window;\n}\n\nexport let LightboxWindowRef = /*#__PURE__*/(() => {\n  class LightboxWindowRef {\n    get nativeWindow() {\n      return getWindow();\n    }\n\n  }\n\n  LightboxWindowRef.ɵfac = function LightboxWindowRef_Factory(t) {\n    return new (t || LightboxWindowRef)();\n  };\n\n  LightboxWindowRef.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LightboxWindowRef,\n    factory: LightboxWindowRef.ɵfac\n  });\n  return LightboxWindowRef;\n})();","map":null,"metadata":{},"sourceType":"module"}