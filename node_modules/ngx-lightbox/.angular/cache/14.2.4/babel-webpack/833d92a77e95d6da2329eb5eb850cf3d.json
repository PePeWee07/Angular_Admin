{"ast":null,"code":"import { FileSaverService } from 'ngx-filesaver';\nimport { DOCUMENT } from '@angular/common';\nimport { ElementRef, Renderer2, SecurityContext } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { LIGHTBOX_EVENT, LightboxEvent, LightboxWindowRef } from './lightbox-event.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./lightbox-event.service\";\nimport * as i2 from \"ngx-filesaver\";\nimport * as i3 from \"@angular/platform-browser\";\nconst _c0 = [\"outerContainer\"];\nconst _c1 = [\"container\"];\nconst _c2 = [\"leftArrow\"];\nconst _c3 = [\"rightArrow\"];\nconst _c4 = [\"navArrow\"];\nconst _c5 = [\"dataContainer\"];\nconst _c6 = [\"image\"];\nconst _c7 = [\"caption\"];\nconst _c8 = [\"number\"];\nconst _c9 = [\"lb-content\", \"\"];\nexport let LightboxComponent = /*#__PURE__*/(() => {\n  class LightboxComponent {\n    constructor(_elemRef, _rendererRef, _lightboxEvent, _lightboxElem, _lightboxWindowRef, _fileSaverService, _sanitizer, _documentRef) {\n      this._elemRef = _elemRef;\n      this._rendererRef = _rendererRef;\n      this._lightboxEvent = _lightboxEvent;\n      this._lightboxElem = _lightboxElem;\n      this._lightboxWindowRef = _lightboxWindowRef;\n      this._fileSaverService = _fileSaverService;\n      this._sanitizer = _sanitizer;\n      this._documentRef = _documentRef; // initialize data\n\n      this.options = this.options || {};\n      this.album = this.album || [];\n      this.currentImageIndex = this.currentImageIndex || 0;\n      this._windowRef = this._lightboxWindowRef.nativeWindow; // control the interactive of the directive\n\n      this.ui = {\n        // control the appear of the reloader\n        // false: image has loaded completely and ready to be shown\n        // true: image is still loading\n        showReloader: true,\n        // control the appear of the nav arrow\n        // the arrowNav is the parent of both left and right arrow\n        // in some cases, the parent shows but the child does not show\n        showLeftArrow: false,\n        showRightArrow: false,\n        showArrowNav: false,\n        // control the appear of the zoom and rotate buttons\n        showZoomButton: false,\n        showRotateButton: false,\n        // control whether to show the\n        // page number or not\n        showPageNumber: false,\n        showCaption: false,\n        // control whether to show the download button or not\n        showDownloadButton: false,\n        classList: 'lightbox animation fadeIn'\n      };\n      this.content = {\n        pageNumber: ''\n      };\n      this._event = {};\n      this._lightboxElem = this._elemRef;\n      this._event.subscription = this._lightboxEvent.lightboxEvent$.subscribe(event => this._onReceivedEvent(event));\n      this.rotate = 0;\n    }\n\n    ngOnInit() {\n      this.album.forEach(album => {\n        if (album.caption) {\n          album.caption = this._sanitizer.sanitize(SecurityContext.HTML, album.caption);\n        }\n      });\n    }\n\n    ngAfterViewInit() {\n      // need to init css value here, after the view ready\n      // actually these values are always 0\n      this._cssValue = {\n        containerTopPadding: Math.round(this._getCssStyleValue(this._containerElem, 'padding-top')),\n        containerRightPadding: Math.round(this._getCssStyleValue(this._containerElem, 'padding-right')),\n        containerBottomPadding: Math.round(this._getCssStyleValue(this._containerElem, 'padding-bottom')),\n        containerLeftPadding: Math.round(this._getCssStyleValue(this._containerElem, 'padding-left')),\n        imageBorderWidthTop: Math.round(this._getCssStyleValue(this._imageElem, 'border-top-width')),\n        imageBorderWidthBottom: Math.round(this._getCssStyleValue(this._imageElem, 'border-bottom-width')),\n        imageBorderWidthLeft: Math.round(this._getCssStyleValue(this._imageElem, 'border-left-width')),\n        imageBorderWidthRight: Math.round(this._getCssStyleValue(this._imageElem, 'border-right-width'))\n      };\n\n      if (this._validateInputData()) {\n        this._prepareComponent();\n\n        this._registerImageLoadingEvent();\n      }\n    }\n\n    ngOnDestroy() {\n      if (!this.options.disableKeyboardNav) {\n        // unbind keyboard event\n        this._disableKeyboardNav();\n      }\n\n      this._event.subscription.unsubscribe();\n    }\n\n    close($event) {\n      $event.stopPropagation();\n\n      if ($event.target.classList.contains('lightbox') || $event.target.classList.contains('lb-loader') || $event.target.classList.contains('lb-close')) {\n        this._lightboxEvent.broadcastLightboxEvent({\n          id: LIGHTBOX_EVENT.CLOSE,\n          data: null\n        });\n      }\n    }\n\n    download($event) {\n      $event.stopPropagation();\n      const url = this.album[this.currentImageIndex].src;\n      const downloadUrl = this.album[this.currentImageIndex].downloadUrl;\n      const parts = url.split('/');\n      const fileName = parts[parts.length - 1];\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      const preloader = new Image();\n\n      const _this = this;\n\n      preloader.onload = function () {\n        // @ts-ignore\n        canvas.width = this.naturalWidth; // @ts-ignore\n\n        canvas.height = this.naturalHeight; // @ts-ignore\n\n        ctx.drawImage(this, 0, 0);\n        canvas.toBlob(function (blob) {\n          _this._fileSaverService.save(blob, fileName);\n        }, 'image/jpeg', 0.75);\n      };\n\n      preloader.crossOrigin = '';\n      if (downloadUrl && downloadUrl.length > 0) preloader.src = this._sanitizer.sanitize(SecurityContext.URL, downloadUrl);else preloader.src = this._sanitizer.sanitize(SecurityContext.URL, url);\n    }\n\n    control($event) {\n      $event.stopPropagation();\n      let height;\n      let width;\n\n      if ($event.target.classList.contains('lb-turnLeft')) {\n        this.rotate = this.rotate - 90;\n\n        this._rotateContainer();\n\n        this._calcTransformPoint();\n\n        this._documentRef.getElementById('image').style.transform = `rotate(${this.rotate}deg)`;\n        this._documentRef.getElementById('image').style.webkitTransform = `rotate(${this.rotate}deg)`;\n\n        this._lightboxEvent.broadcastLightboxEvent({\n          id: LIGHTBOX_EVENT.ROTATE_LEFT,\n          data: null\n        });\n      } else if ($event.target.classList.contains('lb-turnRight')) {\n        this.rotate = this.rotate + 90;\n\n        this._rotateContainer();\n\n        this._calcTransformPoint();\n\n        this._documentRef.getElementById('image').style.transform = `rotate(${this.rotate}deg)`;\n        this._documentRef.getElementById('image').style.webkitTransform = `rotate(${this.rotate}deg)`;\n\n        this._lightboxEvent.broadcastLightboxEvent({\n          id: LIGHTBOX_EVENT.ROTATE_RIGHT,\n          data: null\n        });\n      } else if ($event.target.classList.contains('lb-zoomOut')) {\n        height = parseInt(this._documentRef.getElementById('outerContainer').style.height, 10) / 1.5;\n        width = parseInt(this._documentRef.getElementById('outerContainer').style.width, 10) / 1.5;\n        this._documentRef.getElementById('outerContainer').style.height = height + 'px';\n        this._documentRef.getElementById('outerContainer').style.width = width + 'px';\n        height = parseInt(this._documentRef.getElementById('image').style.height, 10) / 1.5;\n        width = parseInt(this._documentRef.getElementById('image').style.width, 10) / 1.5;\n        this._documentRef.getElementById('image').style.height = height + 'px';\n        this._documentRef.getElementById('image').style.width = width + 'px';\n\n        this._lightboxEvent.broadcastLightboxEvent({\n          id: LIGHTBOX_EVENT.ZOOM_OUT,\n          data: null\n        });\n      } else if ($event.target.classList.contains('lb-zoomIn')) {\n        height = parseInt(this._documentRef.getElementById('outerContainer').style.height, 10) * 1.5;\n        width = parseInt(this._documentRef.getElementById('outerContainer').style.width, 10) * 1.5;\n        this._documentRef.getElementById('outerContainer').style.height = height + 'px';\n        this._documentRef.getElementById('outerContainer').style.width = width + 'px';\n        height = parseInt(this._documentRef.getElementById('image').style.height, 10) * 1.5;\n        width = parseInt(this._documentRef.getElementById('image').style.width, 10) * 1.5;\n        this._documentRef.getElementById('image').style.height = height + 'px';\n        this._documentRef.getElementById('image').style.width = width + 'px';\n\n        this._lightboxEvent.broadcastLightboxEvent({\n          id: LIGHTBOX_EVENT.ZOOM_IN,\n          data: null\n        });\n      }\n    }\n\n    _rotateContainer() {\n      let temp = this.rotate;\n\n      if (temp < 0) {\n        temp *= -1;\n      }\n\n      if (temp / 90 % 4 === 1 || temp / 90 % 4 === 3) {\n        this._documentRef.getElementById('outerContainer').style.height = this._documentRef.getElementById('image').style.width;\n        this._documentRef.getElementById('outerContainer').style.width = this._documentRef.getElementById('image').style.height;\n        this._documentRef.getElementById('container').style.height = this._documentRef.getElementById('image').style.width;\n        this._documentRef.getElementById('container').style.width = this._documentRef.getElementById('image').style.height;\n      } else {\n        this._documentRef.getElementById('outerContainer').style.height = this._documentRef.getElementById('image').style.height;\n        this._documentRef.getElementById('outerContainer').style.width = this._documentRef.getElementById('image').style.width;\n        this._documentRef.getElementById('container').style.height = this._documentRef.getElementById('image').style.width;\n        this._documentRef.getElementById('container').style.width = this._documentRef.getElementById('image').style.height;\n      }\n    }\n\n    _resetImage() {\n      this.rotate = 0;\n      this._documentRef.getElementById('image').style.transform = `rotate(${this.rotate}deg)`;\n      this._documentRef.getElementById('image').style.webkitTransform = `rotate(${this.rotate}deg)`;\n    }\n\n    _calcTransformPoint() {\n      let height = parseInt(this._documentRef.getElementById('image').style.height, 10);\n      let width = parseInt(this._documentRef.getElementById('image').style.width, 10);\n      let temp = this.rotate % 360;\n\n      if (temp < 0) {\n        temp = 360 + temp;\n      }\n\n      if (temp === 90) {\n        this._documentRef.getElementById('image').style.transformOrigin = height / 2 + 'px ' + height / 2 + 'px';\n      } else if (temp === 180) {\n        this._documentRef.getElementById('image').style.transformOrigin = width / 2 + 'px ' + height / 2 + 'px';\n      } else if (temp === 270) {\n        this._documentRef.getElementById('image').style.transformOrigin = width / 2 + 'px ' + width / 2 + 'px';\n      }\n    }\n\n    nextImage() {\n      if (this.album.length === 1) {\n        return;\n      } else if (this.currentImageIndex === this.album.length - 1) {\n        this._changeImage(0);\n      } else {\n        this._changeImage(this.currentImageIndex + 1);\n      }\n    }\n\n    prevImage() {\n      if (this.album.length === 1) {\n        return;\n      } else if (this.currentImageIndex === 0 && this.album.length > 1) {\n        this._changeImage(this.album.length - 1);\n      } else {\n        this._changeImage(this.currentImageIndex - 1);\n      }\n    }\n\n    _validateInputData() {\n      if (this.album && this.album instanceof Array && this.album.length > 0) {\n        for (let i = 0; i < this.album.length; i++) {\n          // check whether each _nside\n          // album has src data or not\n          if (this.album[i].src) {\n            continue;\n          }\n\n          throw new Error('One of the album data does not have source data');\n        }\n      } else {\n        throw new Error('No album data or album data is not correct in type');\n      } // to prevent data understand as string\n      // convert it to number\n\n\n      if (isNaN(this.currentImageIndex)) {\n        throw new Error('Current image index is not a number');\n      } else {\n        this.currentImageIndex = Number(this.currentImageIndex);\n      }\n\n      return true;\n    }\n\n    _registerImageLoadingEvent() {\n      const preloader = new Image();\n\n      preloader.onload = () => {\n        this._onLoadImageSuccess();\n      };\n\n      const src = this.album[this.currentImageIndex].src;\n      preloader.src = this._sanitizer.sanitize(SecurityContext.URL, src);\n    }\n    /**\n     * Fire when the image is loaded\n     */\n\n\n    _onLoadImageSuccess() {\n      if (!this.options.disableKeyboardNav) {\n        // unbind keyboard event during transition\n        this._disableKeyboardNav();\n      }\n\n      let imageHeight;\n      let imageWidth;\n      let maxImageHeight;\n      let maxImageWidth;\n      let windowHeight;\n      let windowWidth;\n      let naturalImageWidth;\n      let naturalImageHeight; // set default width and height of image to be its natural\n\n      imageWidth = naturalImageWidth = this._imageElem.nativeElement.naturalWidth;\n      imageHeight = naturalImageHeight = this._imageElem.nativeElement.naturalHeight;\n\n      if (this.options.fitImageInViewPort) {\n        windowWidth = this._windowRef.innerWidth;\n        windowHeight = this._windowRef.innerHeight;\n        maxImageWidth = windowWidth - this._cssValue.containerLeftPadding - this._cssValue.containerRightPadding - this._cssValue.imageBorderWidthLeft - this._cssValue.imageBorderWidthRight - 20;\n        maxImageHeight = windowHeight - this._cssValue.containerTopPadding - this._cssValue.containerTopPadding - this._cssValue.imageBorderWidthTop - this._cssValue.imageBorderWidthBottom - 120;\n\n        if (naturalImageWidth > maxImageWidth || naturalImageHeight > maxImageHeight) {\n          if (naturalImageWidth / maxImageWidth > naturalImageHeight / maxImageHeight) {\n            imageWidth = maxImageWidth;\n            imageHeight = Math.round(naturalImageHeight / (naturalImageWidth / imageWidth));\n          } else {\n            imageHeight = maxImageHeight;\n            imageWidth = Math.round(naturalImageWidth / (naturalImageHeight / imageHeight));\n          }\n        }\n\n        this._rendererRef.setStyle(this._imageElem.nativeElement, 'width', `${imageWidth}px`);\n\n        this._rendererRef.setStyle(this._imageElem.nativeElement, 'height', `${imageHeight}px`);\n      }\n\n      this._sizeContainer(imageWidth, imageHeight);\n\n      if (this.options.centerVertically) {\n        this._centerVertically(imageWidth, imageHeight);\n      }\n    }\n\n    _centerVertically(imageWidth, imageHeight) {\n      const scrollOffset = this._documentRef.documentElement.scrollTop;\n      const windowHeight = this._windowRef.innerHeight;\n      const viewOffset = windowHeight / 2 - imageHeight / 2;\n      const topDistance = scrollOffset + viewOffset;\n\n      this._rendererRef.setStyle(this._lightboxElem.nativeElement, 'top', `${topDistance}px`);\n    }\n\n    _sizeContainer(imageWidth, imageHeight) {\n      const oldWidth = this._outerContainerElem.nativeElement.offsetWidth;\n      const oldHeight = this._outerContainerElem.nativeElement.offsetHeight;\n      const newWidth = imageWidth + this._cssValue.containerRightPadding + this._cssValue.containerLeftPadding + this._cssValue.imageBorderWidthLeft + this._cssValue.imageBorderWidthRight;\n      const newHeight = imageHeight + this._cssValue.containerTopPadding + this._cssValue.containerBottomPadding + this._cssValue.imageBorderWidthTop + this._cssValue.imageBorderWidthBottom; // make sure that distances are large enough for transitionend event to be fired, at least 5px.\n\n      if (Math.abs(oldWidth - newWidth) + Math.abs(oldHeight - newHeight) > 5) {\n        this._rendererRef.setStyle(this._outerContainerElem.nativeElement, 'width', `${newWidth}px`);\n\n        this._rendererRef.setStyle(this._outerContainerElem.nativeElement, 'height', `${newHeight}px`); // bind resize event to outer container\n        // use enableTransition to prevent infinite loader\n\n\n        if (this.options.enableTransition) {\n          this._event.transitions = [];\n          ['transitionend', 'webkitTransitionEnd', 'oTransitionEnd', 'MSTransitionEnd'].forEach(eventName => {\n            this._event.transitions.push(this._rendererRef.listen(this._outerContainerElem.nativeElement, eventName, event => {\n              if (event.target === event.currentTarget) {\n                this._postResize(newWidth, newHeight);\n              }\n            }));\n          });\n        } else {\n          this._postResize(newWidth, newHeight);\n        }\n      } else {\n        this._postResize(newWidth, newHeight);\n      }\n    }\n\n    _postResize(newWidth, newHeight) {\n      // unbind resize event\n      if (Array.isArray(this._event.transitions)) {\n        this._event.transitions.forEach(eventHandler => {\n          eventHandler();\n        });\n\n        this._event.transitions = [];\n      }\n\n      this._rendererRef.setStyle(this._dataContainerElem.nativeElement, 'width', `${newWidth}px`);\n\n      this._showImage();\n    }\n\n    _showImage() {\n      this.ui.showReloader = false;\n\n      this._updateNav();\n\n      this._updateDetails();\n\n      if (!this.options.disableKeyboardNav) {\n        this._enableKeyboardNav();\n      }\n    }\n\n    _prepareComponent() {\n      // add css3 animation\n      this._addCssAnimation(); // position the image according to user's option\n\n\n      this._positionLightBox(); // update controls visibility on next view generation\n\n\n      setTimeout(() => {\n        this.ui.showZoomButton = this.options.showZoom;\n        this.ui.showRotateButton = this.options.showRotate;\n        this.ui.showDownloadButton = this.options.showDownloadButton;\n      }, 0);\n    }\n\n    _positionLightBox() {\n      // @see https://stackoverflow.com/questions/3464876/javascript-get-window-x-y-position-for-scroll\n      const top = (this._windowRef.pageYOffset || this._documentRef.documentElement.scrollTop) + this.options.positionFromTop;\n      const left = this._windowRef.pageXOffset || this._documentRef.documentElement.scrollLeft;\n\n      if (!this.options.centerVertically) {\n        this._rendererRef.setStyle(this._lightboxElem.nativeElement, 'top', `${top}px`);\n      }\n\n      this._rendererRef.setStyle(this._lightboxElem.nativeElement, 'left', `${left}px`);\n\n      this._rendererRef.setStyle(this._lightboxElem.nativeElement, 'display', 'block'); // disable scrolling of the page while open\n\n\n      if (this.options.disableScrolling) {\n        this._rendererRef.addClass(this._documentRef.documentElement, 'lb-disable-scrolling');\n      }\n    }\n    /**\n     * addCssAnimation add css3 classes for animate lightbox\n     */\n\n\n    _addCssAnimation() {\n      const resizeDuration = this.options.resizeDuration;\n      const fadeDuration = this.options.fadeDuration;\n\n      this._rendererRef.setStyle(this._lightboxElem.nativeElement, '-webkit-animation-duration', `${fadeDuration}s`);\n\n      this._rendererRef.setStyle(this._lightboxElem.nativeElement, 'animation-duration', `${fadeDuration}s`);\n\n      this._rendererRef.setStyle(this._outerContainerElem.nativeElement, '-webkit-transition-duration', `${resizeDuration}s`);\n\n      this._rendererRef.setStyle(this._outerContainerElem.nativeElement, 'transition-duration', `${resizeDuration}s`);\n\n      this._rendererRef.setStyle(this._dataContainerElem.nativeElement, '-webkit-animation-duration', `${fadeDuration}s`);\n\n      this._rendererRef.setStyle(this._dataContainerElem.nativeElement, 'animation-duration', `${fadeDuration}s`);\n\n      this._rendererRef.setStyle(this._imageElem.nativeElement, '-webkit-animation-duration', `${fadeDuration}s`);\n\n      this._rendererRef.setStyle(this._imageElem.nativeElement, 'animation-duration', `${fadeDuration}s`);\n\n      this._rendererRef.setStyle(this._captionElem.nativeElement, '-webkit-animation-duration', `${fadeDuration}s`);\n\n      this._rendererRef.setStyle(this._captionElem.nativeElement, 'animation-duration', `${fadeDuration}s`);\n\n      this._rendererRef.setStyle(this._numberElem.nativeElement, '-webkit-animation-duration', `${fadeDuration}s`);\n\n      this._rendererRef.setStyle(this._numberElem.nativeElement, 'animation-duration', `${fadeDuration}s`);\n    }\n\n    _end() {\n      this.ui.classList = 'lightbox animation fadeOut';\n\n      if (this.options.disableScrolling) {\n        this._rendererRef.removeClass(this._documentRef.documentElement, 'lb-disable-scrolling');\n      }\n\n      setTimeout(() => {\n        this.cmpRef.destroy();\n      }, this.options.fadeDuration * 1000);\n    }\n\n    _updateDetails() {\n      // update the caption\n      if (typeof this.album[this.currentImageIndex].caption !== 'undefined' && this.album[this.currentImageIndex].caption !== '') {\n        this.ui.showCaption = true;\n      } // update the page number if user choose to do so\n      // does not perform numbering the page if the\n      // array length in album <= 1\n\n\n      if (this.album.length > 1 && this.options.showImageNumberLabel) {\n        this.ui.showPageNumber = true;\n        this.content.pageNumber = this._albumLabel();\n      }\n    }\n\n    _albumLabel() {\n      // due to {this.currentImageIndex} is set from 0 to {this.album.length} - 1\n      return this.options.albumLabel.replace(/%1/g, Number(this.currentImageIndex + 1)).replace(/%2/g, this.album.length);\n    }\n\n    _changeImage(newIndex) {\n      this._resetImage();\n\n      this.currentImageIndex = newIndex;\n\n      this._hideImage();\n\n      this._registerImageLoadingEvent();\n\n      this._lightboxEvent.broadcastLightboxEvent({\n        id: LIGHTBOX_EVENT.CHANGE_PAGE,\n        data: newIndex\n      });\n    }\n\n    _hideImage() {\n      this.ui.showReloader = true;\n      this.ui.showArrowNav = false;\n      this.ui.showLeftArrow = false;\n      this.ui.showRightArrow = false;\n      this.ui.showPageNumber = false;\n      this.ui.showCaption = false;\n    }\n\n    _updateNav() {\n      let alwaysShowNav = false; // check to see the browser support touch event\n\n      try {\n        this._documentRef.createEvent('TouchEvent');\n\n        alwaysShowNav = this.options.alwaysShowNavOnTouchDevices ? true : false;\n      } catch (e) {// noop\n      } // initially show the arrow nav\n      // which is the parent of both left and right nav\n\n\n      this._showArrowNav();\n\n      if (this.album.length > 1) {\n        if (this.options.wrapAround) {\n          if (alwaysShowNav) {\n            // alternatives this.$lightbox.find('.lb-prev, .lb-next').css('opacity', '1');\n            this._rendererRef.setStyle(this._leftArrowElem.nativeElement, 'opacity', '1');\n\n            this._rendererRef.setStyle(this._rightArrowElem.nativeElement, 'opacity', '1');\n          } // alternatives this.$lightbox.find('.lb-prev, .lb-next').show();\n\n\n          this._showLeftArrowNav();\n\n          this._showRightArrowNav();\n        } else {\n          if (this.currentImageIndex > 0) {\n            // alternatives this.$lightbox.find('.lb-prev').show();\n            this._showLeftArrowNav();\n\n            if (alwaysShowNav) {\n              // alternatives this.$lightbox.find('.lb-prev').css('opacity', '1');\n              this._rendererRef.setStyle(this._leftArrowElem.nativeElement, 'opacity', '1');\n            }\n          }\n\n          if (this.currentImageIndex < this.album.length - 1) {\n            // alternatives this.$lightbox.find('.lb-next').show();\n            this._showRightArrowNav();\n\n            if (alwaysShowNav) {\n              // alternatives this.$lightbox.find('.lb-next').css('opacity', '1');\n              this._rendererRef.setStyle(this._rightArrowElem.nativeElement, 'opacity', '1');\n            }\n          }\n        }\n      }\n    }\n\n    _showLeftArrowNav() {\n      this.ui.showLeftArrow = true;\n    }\n\n    _showRightArrowNav() {\n      this.ui.showRightArrow = true;\n    }\n\n    _showArrowNav() {\n      this.ui.showArrowNav = this.album.length !== 1;\n    }\n\n    _enableKeyboardNav() {\n      this._event.keyup = this._rendererRef.listen('document', 'keyup', event => {\n        this._keyboardAction(event);\n      });\n    }\n\n    _disableKeyboardNav() {\n      if (this._event.keyup) {\n        this._event.keyup();\n      }\n    }\n\n    _keyboardAction($event) {\n      const KEYCODE_ESC = 27;\n      const KEYCODE_LEFTARROW = 37;\n      const KEYCODE_RIGHTARROW = 39;\n      const keycode = $event.keyCode;\n      const key = String.fromCharCode(keycode).toLowerCase();\n\n      if (keycode === KEYCODE_ESC || key.match(/x|o|c/)) {\n        this._lightboxEvent.broadcastLightboxEvent({\n          id: LIGHTBOX_EVENT.CLOSE,\n          data: null\n        });\n      } else if (key === 'p' || keycode === KEYCODE_LEFTARROW) {\n        if (this.currentImageIndex !== 0) {\n          this._changeImage(this.currentImageIndex - 1);\n        } else if (this.options.wrapAround && this.album.length > 1) {\n          this._changeImage(this.album.length - 1);\n        }\n      } else if (key === 'n' || keycode === KEYCODE_RIGHTARROW) {\n        if (this.currentImageIndex !== this.album.length - 1) {\n          this._changeImage(this.currentImageIndex + 1);\n        } else if (this.options.wrapAround && this.album.length > 1) {\n          this._changeImage(0);\n        }\n      }\n    }\n\n    _getCssStyleValue(elem, propertyName) {\n      return parseFloat(this._windowRef.getComputedStyle(elem.nativeElement, null).getPropertyValue(propertyName));\n    }\n\n    _onReceivedEvent(event) {\n      switch (event.id) {\n        case LIGHTBOX_EVENT.CLOSE:\n          this._end();\n\n          break;\n\n        default:\n          break;\n      }\n    }\n\n  }\n\n  LightboxComponent.ɵfac = function LightboxComponent_Factory(t) {\n    return new (t || LightboxComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.LightboxEvent), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.LightboxWindowRef), i0.ɵɵdirectiveInject(i2.FileSaverService), i0.ɵɵdirectiveInject(i3.DomSanitizer), i0.ɵɵdirectiveInject(DOCUMENT));\n  };\n\n  LightboxComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LightboxComponent,\n    selectors: [[\"\", \"lb-content\", \"\"]],\n    viewQuery: function LightboxComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n        i0.ɵɵviewQuery(_c3, 5);\n        i0.ɵɵviewQuery(_c4, 5);\n        i0.ɵɵviewQuery(_c5, 5);\n        i0.ɵɵviewQuery(_c6, 5);\n        i0.ɵɵviewQuery(_c7, 5);\n        i0.ɵɵviewQuery(_c8, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._outerContainerElem = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._containerElem = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._leftArrowElem = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._rightArrowElem = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._navArrowElem = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._dataContainerElem = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._imageElem = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._captionElem = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._numberElem = _t.first);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function LightboxComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function LightboxComponent_click_HostBindingHandler($event) {\n          return ctx.close($event);\n        });\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.ui.classList);\n      }\n    },\n    inputs: {\n      album: \"album\",\n      currentImageIndex: \"currentImageIndex\",\n      options: \"options\",\n      cmpRef: \"cmpRef\"\n    },\n    attrs: _c9,\n    decls: 34,\n    vars: 14,\n    consts: [[\"id\", \"outerContainer\", 1, \"lb-outerContainer\", \"transition\"], [\"outerContainer\", \"\"], [\"id\", \"container\", 1, \"lb-container\"], [\"container\", \"\"], [\"id\", \"image\", 1, \"lb-image\", \"animation\", \"fadeIn\", 3, \"src\", \"hidden\"], [\"image\", \"\"], [1, \"lb-nav\", 3, \"hidden\"], [\"navArrow\", \"\"], [1, \"lb-prev\", 3, \"hidden\", \"click\"], [\"leftArrow\", \"\"], [1, \"lb-next\", 3, \"hidden\", \"click\"], [\"rightArrow\", \"\"], [1, \"lb-loader\", 3, \"hidden\", \"click\"], [1, \"lb-cancel\"], [1, \"lb-dataContainer\", 3, \"hidden\"], [\"dataContainer\", \"\"], [1, \"lb-data\"], [1, \"lb-details\"], [1, \"lb-caption\", \"animation\", \"fadeIn\", 3, \"hidden\", \"innerHtml\"], [\"caption\", \"\"], [1, \"lb-number\", \"animation\", \"fadeIn\", 3, \"hidden\"], [\"number\", \"\"], [1, \"lb-controlContainer\"], [1, \"lb-closeContainer\"], [1, \"lb-close\", 3, \"click\"], [1, \"lb-downloadContainer\", 3, \"hidden\"], [1, \"lb-download\", 3, \"click\"], [1, \"lb-turnContainer\", 3, \"hidden\"], [1, \"lb-turnLeft\", 3, \"click\"], [1, \"lb-turnRight\", 3, \"click\"], [1, \"lb-zoomContainer\", 3, \"hidden\"], [1, \"lb-zoomOut\", 3, \"click\"], [1, \"lb-zoomIn\", 3, \"click\"]],\n    template: function LightboxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1)(2, \"div\", 2, 3);\n        i0.ɵɵelement(4, \"img\", 4, 5);\n        i0.ɵɵelementStart(6, \"div\", 6, 7)(8, \"a\", 8, 9);\n        i0.ɵɵlistener(\"click\", function LightboxComponent_Template_a_click_8_listener() {\n          return ctx.prevImage();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"a\", 10, 11);\n        i0.ɵɵlistener(\"click\", function LightboxComponent_Template_a_click_10_listener() {\n          return ctx.nextImage();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 12);\n        i0.ɵɵlistener(\"click\", function LightboxComponent_Template_div_click_12_listener($event) {\n          return ctx.close($event);\n        });\n        i0.ɵɵelement(13, \"a\", 13);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(14, \"div\", 14, 15)(16, \"div\", 16)(17, \"div\", 17);\n        i0.ɵɵelement(18, \"span\", 18, 19);\n        i0.ɵɵelementStart(20, \"span\", 20, 21);\n        i0.ɵɵtext(22);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"div\", 22)(24, \"div\", 23)(25, \"a\", 24);\n        i0.ɵɵlistener(\"click\", function LightboxComponent_Template_a_click_25_listener($event) {\n          return ctx.close($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"div\", 25)(27, \"a\", 26);\n        i0.ɵɵlistener(\"click\", function LightboxComponent_Template_a_click_27_listener($event) {\n          return ctx.download($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"div\", 27)(29, \"a\", 28);\n        i0.ɵɵlistener(\"click\", function LightboxComponent_Template_a_click_29_listener($event) {\n          return ctx.control($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"a\", 29);\n        i0.ɵɵlistener(\"click\", function LightboxComponent_Template_a_click_30_listener($event) {\n          return ctx.control($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(31, \"div\", 30)(32, \"a\", 31);\n        i0.ɵɵlistener(\"click\", function LightboxComponent_Template_a_click_32_listener($event) {\n          return ctx.control($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"a\", 32);\n        i0.ɵɵlistener(\"click\", function LightboxComponent_Template_a_click_33_listener($event) {\n          return ctx.control($event);\n        });\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"src\", ctx.album[ctx.currentImageIndex].src, i0.ɵɵsanitizeUrl)(\"hidden\", ctx.ui.showReloader);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", !ctx.ui.showArrowNav);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", !ctx.ui.showLeftArrow);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", !ctx.ui.showRightArrow);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", !ctx.ui.showReloader);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", ctx.ui.showReloader);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"hidden\", !ctx.ui.showCaption)(\"innerHtml\", ctx.album[ctx.currentImageIndex].caption, i0.ɵɵsanitizeHtml);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", !ctx.ui.showPageNumber);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.content.pageNumber);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"hidden\", !ctx.ui.showDownloadButton);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", !ctx.ui.showRotateButton);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"hidden\", !ctx.ui.showZoomButton);\n      }\n    },\n    encapsulation: 2\n  });\n  return LightboxComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}